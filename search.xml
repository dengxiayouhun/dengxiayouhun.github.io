<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Java练习索引</title>
    <url>/2021/10/02/Java%E7%BB%83%E4%B9%A0%E7%B4%A2%E5%BC%95/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><table>
<thead>
<tr>
<th>日常小练：</th>
</tr>
</thead>
<tbody><tr>
<td><a href="https://dengxiayouhun.github.io/2021/10/02/%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%BB%83%E4%B9%A0%E4%BD%9C%E4%B8%9A/">字符串练习</a></td>
</tr>
<tr>
<td><a href="https://dengxiayouhun.github.io/2021/10/21/GUI%E9%A1%B5%E9%9D%A2%E8%AE%BE%E8%AE%A1%E7%BB%83%E4%B9%A0%E9%A2%98/">GUI页面设计练习题</a></td>
</tr>
<tr>
<td></td>
</tr>
</tbody></table>
<table>
<thead>
<tr>
<th>小程序:</th>
</tr>
</thead>
<tbody><tr>
<td><a href="https://dengxiayouhun.github.io/2021/10/01/%E9%9A%8F%E6%9C%BA%E7%82%B9%E5%90%8D%E5%B0%8F%E7%A8%8B%E5%BA%8F/">随机点名小程序</a></td>
</tr>
<tr>
<td><a href="https://dengxiayouhun.github.io/2021/10/14/%E5%AD%A6%E7%94%9F%E6%88%90%E7%BB%A9%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F/">学生成绩管理系统</a></td>
</tr>
<tr>
<td><a href="https://dengxiayouhun.github.io/2021/10/26/%E5%AE%A2%E6%88%B7%E4%BF%A1%E6%81%AF%E7%AE%A1%E7%90%86/">客户信息管理系统</a></td>
</tr>
</tbody></table>
]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>java</tag>
      </tags>
  </entry>
  <entry>
    <title>java踩坑小记录（目录）</title>
    <url>/2021/09/22/java%E8%B8%A9%E5%9D%91%E5%B0%8F%E8%AE%B0%E5%BD%95/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><table>
<thead>
<tr>
<th>问题描述</th>
<th>链接</th>
</tr>
</thead>
<tbody><tr>
<td>Java输出语句中的println、print和printf</td>
<td><a href="https://dengxiayouhun.github.io/2021/10/03/Java%E8%BE%93%E5%87%BA%E8%AF%AD%E5%8F%A5%E4%B8%AD%E7%9A%84println%E3%80%81print%E5%92%8Cprintf/">Java输出语句中的println、print和printf</a></td>
</tr>
<tr>
<td>next()与nextLine()</td>
<td><a href="https://dengxiayouhun.github.io/2021/09/24/Scanner%E4%B8%AD%E7%9A%84nextLine-%E4%B8%8Ennext/">Scanner中的nextLine()与next()</a></td>
</tr>
<tr>
<td>如何解决Win 10环境变量配置时Path变量只显示一行的问题</td>
<td><a href="https://dengxiayouhun.github.io/2021/09/07/%E5%A6%82%E4%BD%95%E8%A7%A3%E5%86%B3Win10%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F%E9%85%8D%E7%BD%AE%E6%97%B6Path%E5%8F%98%E9%87%8F%E5%8F%AA%E6%98%BE%E7%A4%BA%E4%B8%80%E8%A1%8C%E7%9A%84%E9%97%AE%E9%A2%98/">环境变量Path的显示设置</a></td>
</tr>
<tr>
<td>Resource leak:”XXX” is never closed</td>
<td><a href="https://blog.csdn.net/fesdab/article/details/107291816?ops_request_misc=&request_id=&biz_id=102&utm_term=java%E5%87%BA%E7%8E%B0Resource">ScannerTest</a></td>
</tr>
<tr>
<td>如何连续的输出char类型的变量</td>
<td><a href="https://dengxiayouhun.github.io/2021/10/02/%E5%A6%82%E4%BD%95%E8%BF%9E%E7%BB%AD%E7%9A%84%E8%BE%93%E5%87%BAchar%E7%B1%BB%E5%9E%8B%E7%9A%84%E5%8F%98%E9%87%8F/">如何连续的输出char类型的变量</a></td>
</tr>
</tbody></table>
]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>踩坑记录</tag>
      </tags>
  </entry>
  <entry>
    <title>MySQL杂记</title>
    <url>/2021/11/20/MySQL%E6%9D%82%E8%AE%B0/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><h2 id="MySQL操作："><a href="#MySQL操作：" class="headerlink" title="MySQL操作："></a>MySQL操作：</h2><h3 id="MySQL-安装："><a href="#MySQL-安装：" class="headerlink" title="MySQL 安装："></a>MySQL 安装：</h3><p>完成！</p>
<h3 id="MySQL-管理："><a href="#MySQL-管理：" class="headerlink" title="MySQL 管理："></a>MySQL 管理：</h3><p>完成</p>
<h3 id="MySQL-PHP语法："><a href="#MySQL-PHP语法：" class="headerlink" title="MySQL PHP语法："></a>MySQL PHP语法：</h3><h3 id="MySQL-连接："><a href="#MySQL-连接：" class="headerlink" title="MySQL 连接："></a>MySQL 连接：</h3><h3 id="MySQL-创建数据库："><a href="#MySQL-创建数据库：" class="headerlink" title="MySQL 创建数据库："></a>MySQL 创建数据库：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">create database 数据库名</span><br></pre></td></tr></table></figure>



<h3 id="MySQL-删除数据库："><a href="#MySQL-删除数据库：" class="headerlink" title="MySQL 删除数据库："></a>MySQL 删除数据库：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">drop database 数据库名;</span><br></pre></td></tr></table></figure>

<h3 id="MySQL-选择数据库："><a href="#MySQL-选择数据库：" class="headerlink" title="MySQL 选择数据库："></a>MySQL 选择数据库：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">use 数据库名;</span><br></pre></td></tr></table></figure>



<h3 id="MySQL-数据类型："><a href="#MySQL-数据类型：" class="headerlink" title="MySQL 数据类型："></a>MySQL 数据类型：</h3><h3 id="数值类型："><a href="#数值类型：" class="headerlink" title="数值类型："></a>数值类型：</h3><table>
<thead>
<tr>
<th>类型</th>
<th>大小</th>
<th>范围（有符号）</th>
<th>范围（无符号）</th>
<th>用途</th>
</tr>
</thead>
<tbody><tr>
<td>TINYINT</td>
<td>1 Bytes</td>
<td>(-128, 127)</td>
<td>(0, 255)</td>
<td>小整数值</td>
</tr>
<tr>
<td>SMALLINT</td>
<td>2 Bytes</td>
<td>(-32 768, 32 767)</td>
<td>(0, 65 535)</td>
<td>大整数值</td>
</tr>
<tr>
<td>MEDIUMINT</td>
<td>3 Bytes</td>
<td>(-8 388 608, 8 388 607)</td>
<td>(0, 16 777 215)</td>
<td>大整数值</td>
</tr>
<tr>
<td>INT/INTEGER</td>
<td>4 Bytes</td>
<td>(-2 147 483 648，2 147 483 647)</td>
<td>(0，4 294 967 295)</td>
<td>大整数值</td>
</tr>
<tr>
<td>BIGINT</td>
<td>8 Bytes</td>
<td>(-9,223,372,036,854,775,808，9 223 372 036 854 775 807)</td>
<td>(0，18 446 744 073 709 551 615)</td>
<td>极大整数值</td>
</tr>
<tr>
<td>FLOAT</td>
<td>4 Bytes</td>
<td>(-3.402 823 466 E+38，-1.175 494 351 E-38)，0，(1.175 494 351 E-38，3.402 823 466 351 E+38)</td>
<td>(0,1.175 494 351 E-38，3.402 823 466 E+38 )</td>
<td>单精度浮点数值</td>
</tr>
<tr>
<td>DOUBLE</td>
<td>8 Bytes</td>
<td>(-1.797 693 134 862 315 7 E+308，-2.225 073 858 507 201 4 E-308)，0，(2.225 073 858 507 201 4 E-308，1.797 693 134 862 315 7 E+308)</td>
<td>(0, 2.225 073 858 507 201 4 E-308，1.797 693 134 862 315 7 E+308)</td>
<td>双精度浮点数值</td>
</tr>
<tr>
<td>DECIMAL</td>
<td>对DECIMAL(M,D) ，如果M&gt;D，为M+2否则为D+2</td>
<td>依赖于M和D的值</td>
<td>依赖于M和D的值</td>
<td>小数值</td>
</tr>
</tbody></table>
<h4 id="日期和时间类型："><a href="#日期和时间类型：" class="headerlink" title="日期和时间类型："></a>日期和时间类型：</h4><table>
<thead>
<tr>
<th>类型</th>
<th>大小（bytes）</th>
<th>范围</th>
<th>格式</th>
<th>用途</th>
</tr>
</thead>
<tbody><tr>
<td>DATE</td>
<td>3</td>
<td>1000-01-01/9999-12-31</td>
<td>YYYY-MM-DD</td>
<td>日期值</td>
</tr>
<tr>
<td>TIME</td>
<td>3</td>
<td>‘-838:59:59’/‘838:59:59’</td>
<td>HH:MM:SS</td>
<td>时间值或持续时间</td>
</tr>
<tr>
<td>YEAR</td>
<td>1</td>
<td>1901/2155</td>
<td>YYYY</td>
<td>年份值</td>
</tr>
<tr>
<td>DATETIME</td>
<td>8</td>
<td>1000-01-01 00:00:00/9999-12-31 23:59:59</td>
<td>YYYY-MM-DD HH:MM:SS</td>
<td>混合日期和时间值</td>
</tr>
<tr>
<td>TIMETAMP</td>
<td>4</td>
<td>1970-01-01 00:00:00/2038</td>
<td>YYYYMMDD HHMMS</td>
<td>混合日期和时间值，时间戳</td>
</tr>
</tbody></table>
<h4 id="字符串类型："><a href="#字符串类型：" class="headerlink" title="字符串类型："></a>字符串类型：</h4><table>
<thead>
<tr>
<th>类型</th>
<th>大小</th>
<th>用途</th>
</tr>
</thead>
<tbody><tr>
<td>CHAR</td>
<td>0-255 bytes</td>
<td>定长字符串</td>
</tr>
<tr>
<td>VARCHAR</td>
<td>0-65535 bytes</td>
<td>变长字符串</td>
</tr>
<tr>
<td>TINYBLOB</td>
<td>0-255 bytes</td>
<td>不超过 255 个字符的二进制字符串</td>
</tr>
<tr>
<td>TINYTEXT</td>
<td>0-255 bytes</td>
<td>短文本字符串</td>
</tr>
<tr>
<td>BLOB</td>
<td>0-65 535 bytes</td>
<td>二进制形式的长文本数据</td>
</tr>
<tr>
<td>TEXT</td>
<td>0-65 535 bytes</td>
<td>长文本数据</td>
</tr>
<tr>
<td>MEDIUMBLOB</td>
<td>0-16 777 215 bytes</td>
<td>二进制形式的中等长度文本数据</td>
</tr>
<tr>
<td>MEDIUMTEXT</td>
<td>0-16 777 215 bytes</td>
<td>中等长度文本数据</td>
</tr>
<tr>
<td>LONGBLOB</td>
<td>0-4 294 967 295 bytes</td>
<td>二进制形式的极大文本数据</td>
</tr>
<tr>
<td>LONGTEXT</td>
<td>0-4 294 967 295 bytes</td>
<td>极大文本数据</td>
</tr>
</tbody></table>
<h3 id="MySQL-创建数据表："><a href="#MySQL-创建数据表：" class="headerlink" title="MySQL 创建数据表："></a>MySQL 创建数据表：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">create table 表名（</span><br><span class="line">字段名 字段类型,</span><br><span class="line">字段名 字段类型,</span><br><span class="line">......</span><br><span class="line">）</span><br></pre></td></tr></table></figure>



<ul>
<li>如果你不想字段为 <strong>NULL</strong> 可以设置字段的属性为 <strong>NOT NULL</strong>， 在操作数据库时如果输入该字段的数据为<strong>NULL</strong> ，就会报错。</li>
<li>AUTO_INCREMENT定义列为自增的属性，一般用于主键，数值会自动加1。</li>
<li>PRIMARY KEY关键字用于定义列为主键。 您可以使用多列来定义主键，列间以逗号分隔。</li>
<li>ENGINE 设置存储引擎，CHARSET 设置编码。</li>
</ul>
<p>例如：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mysql&gt; CREATE TABLE runoob_tbl(</span><br><span class="line">   -&gt; runoob_id INT NOT NULL AUTO_INCREMENT,</span><br><span class="line">   -&gt; runoob_title VARCHAR(100) NOT NULL,</span><br><span class="line">   -&gt; runoob_author VARCHAR(40) NOT NULL,</span><br><span class="line">   -&gt; submission_date DATE,</span><br><span class="line">   -&gt; PRIMARY KEY ( runoob_id )</span><br><span class="line">   -&gt; )ENGINE=InnoDB DEFAULT CHARSET=utf8;</span><br></pre></td></tr></table></figure>

<h5 id="查看表结构："><a href="#查看表结构：" class="headerlink" title="查看表结构："></a>查看表结构：</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">desc 表名;</span><br></pre></td></tr></table></figure>



<h3 id="MySQL-删除数据表："><a href="#MySQL-删除数据表：" class="headerlink" title="MySQL 删除数据表："></a>MySQL 删除数据表：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">drop table 表名;</span><br></pre></td></tr></table></figure>



<h3 id="MySQL-插入数据："><a href="#MySQL-插入数据：" class="headerlink" title="MySQL 插入数据："></a>MySQL 插入数据：</h3><p>使用SQL语法向MySQL数据表插入数据：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> </span><br><span class="line">表名(字段名<span class="number">1</span>，字段名<span class="number">2</span>，字段名<span class="number">3</span>，...字段名n)</span><br><span class="line"><span class="keyword">values</span></span><br><span class="line">(数据<span class="number">1</span>，数据<span class="number">2</span>，数据<span class="number">3</span>，...数据n);</span><br></pre></td></tr></table></figure>

<p>实例：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span></span><br><span class="line">user_common(name_common,account_common,password_common)</span><br><span class="line"><span class="keyword">VALUES</span></span><br><span class="line">(&quot;秦始皇&quot;,&quot;root1&quot;,&quot;root1&quot;);</span><br></pre></td></tr></table></figure>





<h3 id="MySQL-查询数据："><a href="#MySQL-查询数据：" class="headerlink" title="MySQL 查询数据："></a>MySQL 查询数据：</h3><p>使用SQL语句查询MySQL数据库的数据</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> 字段名 <span class="keyword">from</span> 表名;</span><br></pre></td></tr></table></figure>

<ul>
<li>查询语句中你可以使用一个或者多个表，表之间使用逗号(,)分割，并使用WHERE语句来设定查询条件。</li>
<li>SELECT 命令可以读取一条或者多条记录。</li>
<li>你可以使用星号（*）来代替其他字段，SELECT语句会返回表的所有字段数据</li>
<li>你可以使用 WHERE 语句来包含任何条件。</li>
<li>你可以使用 LIMIT 属性来设定返回的记录数。</li>
<li>你可以通过OFFSET指定SELECT语句开始查询的数据偏移量。默认情况下偏移量为0。</li>
</ul>
<p>实例：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line">name_common</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">user_common;</span><br></pre></td></tr></table></figure>

<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line"><span class="operator">*</span></span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">user_common;</span><br></pre></td></tr></table></figure>

<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line">name_common,account_common</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">user_common;</span><br></pre></td></tr></table></figure>

<h4 id="AS"><a href="#AS" class="headerlink" title="AS"></a>AS</h4><ul>
<li>重命名一个列</li>
<li>紧跟列名，也可以<strong>在列名和别名之间加入关键字AS，别名使用双引号</strong>，以便在别名中包含空格或特殊的字符并区分别大小写。</li>
<li>AS 可以省略</li>
</ul>
<p>案例：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">number <span class="keyword">AS</span> &quot;序号&quot;,id <span class="keyword">AS</span> &quot;学号&quot;,NAME <span class="keyword">AS</span> &quot;姓名&quot;,age <span class="keyword">AS</span> &quot;年龄&quot;</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">software;</span><br></pre></td></tr></table></figure>

<h4 id="去除重复行："><a href="#去除重复行：" class="headerlink" title="去除重复行："></a>去除重复行：</h4><ul>
<li><p><strong>在 SELECT 语句中使用关键字 DISTINCT去除重复行</strong></p>
</li>
<li><p>**DISTINCT **需要放到所有列名的前面，如果写成</p>
<p>**SELECT **</p>
<p>salary, <strong>DISTINCT</strong> department_id </p>
<p>**FROM **</p>
<p>employees </p>
<p>会报错。</p>
</li>
</ul>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">DISTINCT</span></span><br><span class="line">age <span class="keyword">AS</span> &quot;年龄&quot;</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">software;</span><br></pre></td></tr></table></figure>



<h3 id="MySQL-WHERE语句："><a href="#MySQL-WHERE语句：" class="headerlink" title="MySQL WHERE语句："></a>MySQL WHERE语句：</h3><p>如需有条件地从表中选取数据，可将 WHERE 子句添加到 SELECT 语句中。</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> </span><br><span class="line">字段名 </span><br><span class="line"><span class="keyword">from</span> </span><br><span class="line">表名</span><br><span class="line"><span class="keyword">where</span> 条件<span class="number">1</span>（<span class="keyword">and</span><span class="operator">/</span><span class="keyword">or</span> 条件<span class="number">2.</span>...）;</span><br></pre></td></tr></table></figure>

<p>实例：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line"><span class="operator">*</span></span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">student</span><br><span class="line"><span class="keyword">WHERE</span> grade_student <span class="operator">=</span> &quot;软件工程2001&quot;;</span><br></pre></td></tr></table></figure>

<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line"><span class="operator">*</span></span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">student</span><br><span class="line"><span class="keyword">WHERE</span> grade_student <span class="operator">=</span> &quot;软件工程2001&quot; <span class="keyword">OR</span> grade_student <span class="operator">=</span> &quot;软件工程2003&quot;;</span><br></pre></td></tr></table></figure>

<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line"><span class="operator">*</span></span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">student</span><br><span class="line"><span class="keyword">WHERE</span> grade_student <span class="operator">=</span> &quot;软件工程2001&quot; <span class="keyword">AND</span> age_student <span class="operator">=</span> &quot;20&quot;;</span><br></pre></td></tr></table></figure>



<ul>
<li>查询语句中你可以使用一个或者多个表，表之间使用逗号**,** 分割，并使用WHERE语句来设定查询条件。</li>
<li>你可以在 WHERE 子句中指定任何条件。</li>
<li>你可以使用 AND 或者 OR 指定一个或多个条件。</li>
<li>WHERE 子句也可以运用于 SQL 的 DELETE 或者 UPDATE 命令。</li>
<li>WHERE 子句类似于程序语言中的 if 条件，根据 MySQL 表中的字段值来读取指定的数据。</li>
</ul>
<p>以下为操作符列表，可用于 WHERE 子句中。</p>
<p>下表中实例假定 A 为 10, B 为 20</p>
<table>
<thead>
<tr>
<th align="left">操作符</th>
<th align="left">描述</th>
<th align="left">实例</th>
</tr>
</thead>
<tbody><tr>
<td align="left">=</td>
<td align="left">等号，检测两个值是否相等，如果相等返回true</td>
<td align="left">(A = B) 返回false。</td>
</tr>
<tr>
<td align="left">&lt;&gt;, !=</td>
<td align="left">不等于，检测两个值是否相等，如果不相等返回true</td>
<td align="left">(A != B) 返回 true。</td>
</tr>
<tr>
<td align="left">&gt;</td>
<td align="left">大于号，检测左边的值是否大于右边的值, 如果左边的值大于右边的值返回true</td>
<td align="left">(A &gt; B) 返回false。</td>
</tr>
<tr>
<td align="left">&lt;</td>
<td align="left">小于号，检测左边的值是否小于右边的值, 如果左边的值小于右边的值返回true</td>
<td align="left">(A &lt; B) 返回 true。</td>
</tr>
<tr>
<td align="left">&gt;=</td>
<td align="left">大于等于号，检测左边的值是否大于或等于右边的值, 如果左边的值大于或等于右边的值返回true</td>
<td align="left">(A &gt;= B) 返回false。</td>
</tr>
<tr>
<td align="left">&lt;=</td>
<td align="left">小于等于号，检测左边的值是否小于或等于右边的值, 如果左边的值小于或等于右边的值返回true</td>
<td align="left">(A &lt;= B) 返回 true。</td>
</tr>
</tbody></table>
<h4 id="类型运算符："><a href="#类型运算符：" class="headerlink" title="类型运算符："></a>类型运算符：</h4><table>
<thead>
<tr>
<th>运算符</th>
<th>名称</th>
<th>作用</th>
<th>示例</th>
</tr>
</thead>
<tbody><tr>
<td>IS NULL</td>
<td>为空运算符</td>
<td>判断值、字符串或表达式是否为空</td>
<td><strong>SELECT</strong>   B    <strong>FROM</strong>   TABLE    <strong>WHERE</strong>   A  <strong>IS NULL</strong></td>
</tr>
<tr>
<td>IS NOTNULL</td>
<td>不为空运算符</td>
<td>判断值、字符串或表达式是否不为空</td>
<td><strong>SELECT</strong>   B    <strong>FROM</strong>   TABLE    <strong>WHERE</strong>   A   <strong>IS NOT NULL</strong></td>
</tr>
<tr>
<td>LEAST</td>
<td>最小值运算符</td>
<td>在多个值中返回最小值</td>
<td><strong>SELECT</strong>   D    <strong>FROM</strong>    TABLE   <strong>WHERE</strong>   C   <strong>LEAST(A , B)</strong></td>
</tr>
<tr>
<td>GREATEST</td>
<td>最大值运算符</td>
<td>在多个值中返回最大值</td>
<td><strong>SELECT</strong>   D   <strong>FROM</strong>   TABLE    <strong>WHERE</strong>   C   <strong>GREATEST(A , B)</strong></td>
</tr>
<tr>
<td>BETWEEN AND</td>
<td>两值之间的运算符</td>
<td>判断一个值是否在两个值之间</td>
<td><strong>SELECT</strong>   D   <strong>FROM</strong>   TABLE    <strong>WHERE</strong>   C   <strong>BETWEEN</strong> A <strong>AND</strong> B</td>
</tr>
<tr>
<td>ISNULL</td>
<td>为空运算符</td>
<td>判断一个值、字符串或表达式是否为空</td>
<td><strong>SELECT</strong>   B   <strong>FROM</strong>   TABLE    <strong>WHERE</strong>    A   <strong>ISNULL</strong></td>
</tr>
<tr>
<td>IN</td>
<td>属于运算符</td>
<td>判断一个值是否为列表中的任意一个值</td>
<td><strong>SELECT</strong>   D   <strong>FROM</strong>   TABLE    **WHERE **  C   <strong>IN(<strong>A <strong>,</strong> B</strong>)</strong></td>
</tr>
<tr>
<td>NOT IN</td>
<td>不属于运算符</td>
<td>判断一个值是否不是一个列表中的任意一个值</td>
<td><strong>SELECT</strong>   D   <strong>FROM</strong>   TABLE   <strong>WHERE</strong>   C   <strong>NOT IN(<strong>A <strong>,</strong> B</strong>)</strong></td>
</tr>
<tr>
<td>LIKE</td>
<td>模糊匹配运算符</td>
<td>判断一个值是否符合模糊匹配规则</td>
<td><strong>SELECT</strong>   C   <strong>FROM</strong>   TABLE   <strong>WHERE</strong>   A   <strong>LIKE</strong>   B</td>
</tr>
<tr>
<td>REGEXP</td>
<td>正则表达式运算符</td>
<td>判断一个值是否符合正则表达式的规则</td>
<td><strong>SELECT</strong>   C   <strong>FROM</strong>   TABLE   <strong>WHERE</strong>   A   <strong>REGEXP</strong>   B</td>
</tr>
<tr>
<td>RLIKE</td>
<td>正则表达式运算符</td>
<td>判断一个值是否符合正则表达式的规则</td>
<td><strong>SELECT</strong>   C   <strong>FROM</strong>   TABLE    <strong>WHERE</strong>   A   <strong>RLIKE</strong>   B</td>
</tr>
</tbody></table>
<p>案例：</p>
<ol>
<li><strong>空运算符：</strong></li>
</ol>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span></span><br><span class="line"><span class="operator">*</span></span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">software</span><br><span class="line"><span class="keyword">WHERE</span> NAME <span class="keyword">IS</span> <span class="keyword">NULL</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line"><span class="operator">*</span></span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">software</span><br><span class="line"><span class="keyword">WHERE</span> NAME <span class="keyword">IS</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span>;</span><br></pre></td></tr></table></figure>



<h3 id="MySQL-UPDATE语句："><a href="#MySQL-UPDATE语句：" class="headerlink" title="MySQL UPDATE语句："></a>MySQL UPDATE语句：</h3><p>使用SQL语法修改MySQL中的数据</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">update 表名 </span><br><span class="line"><span class="keyword">set</span> </span><br><span class="line">字段名 <span class="operator">=</span> 新数据,</span><br><span class="line">字段名 <span class="operator">=</span> 新数据,</span><br><span class="line">...</span><br><span class="line"><span class="keyword">where</span> 条件;</span><br></pre></td></tr></table></figure>

<p>案例：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">UPDATE</span><br><span class="line">student</span><br><span class="line"><span class="keyword">SET</span></span><br><span class="line">grade_student <span class="operator">=</span> &quot;计算机科学与技术2003&quot;,</span><br><span class="line">age_student <span class="operator">=</span> &quot;19&quot;</span><br><span class="line"><span class="keyword">WHERE</span> name_student <span class="operator">=</span> &quot;陈某人&quot;;</span><br></pre></td></tr></table></figure>



<h3 id="MySQL-DELETE语句："><a href="#MySQL-DELETE语句：" class="headerlink" title="MySQL DELETE语句："></a>MySQL DELETE语句：</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span></span><br><span class="line">表名</span><br><span class="line"><span class="keyword">where</span> 条件;</span><br></pre></td></tr></table></figure>

<ul>
<li>如果没有 WHERE 条件则会清空指定表内的所有数据</li>
<li>如果想要删除某条或者某几条数据，可以通过添加 WHERE 条件做到</li>
</ul>
<p>案例：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">DELETE</span> <span class="keyword">FROM</span></span><br><span class="line">test</span><br><span class="line"><span class="keyword">WHERE</span> age <span class="operator">=</span> &quot;19&quot;;</span><br></pre></td></tr></table></figure>



<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">DELETE</span> <span class="keyword">FROM</span></span><br><span class="line">test;</span><br></pre></td></tr></table></figure>



<h3 id="MySQL-LIKE子句："><a href="#MySQL-LIKE子句：" class="headerlink" title="MySQL LIKE子句："></a>MySQL LIKE子句：</h3><p>在WHERE语句中我们会通过 字段名 = ？的方式来筛选出数据来进行查询或者删除</p>
<p>但有些时候我们不需要这么精确。比如，我们要查询软件工程专业的所有学生，那么我们就不能通过WHERE grade = “软件工程2001” 这样的条件来进行筛选查询。</p>
<p>我们需要一个能够达到模糊查询的方式来实现查找所有软件工程专业学生的数据。</p>
<p>因此，我们在WHERE语句中引入了LIKE子句，来达到这种目的。</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> </span><br><span class="line">字段名</span><br><span class="line"><span class="keyword">from</span></span><br><span class="line">表名</span><br><span class="line"><span class="keyword">where</span></span><br><span class="line">字段名 <span class="keyword">like</span> ？（<span class="keyword">and</span><span class="operator">/</span><span class="keyword">or</span> 条件<span class="number">2.</span>...）;</span><br></pre></td></tr></table></figure>

<p><strong>注意：</strong></p>
<p>LIKE 子句要搭配 % 和 _ 一起使用，具体使用如下：</p>
<table>
<thead>
<tr>
<th>where 字段 like “x%”</th>
<th>查找以x开头的数据</th>
</tr>
</thead>
<tbody><tr>
<td>where 字段 like “% x”</td>
<td>查找以 x 结尾的数据</td>
</tr>
<tr>
<td>where 字段 like “% x %”</td>
<td>查找该字段中有 x 的数据</td>
</tr>
<tr>
<td>where 字段 like “_ x %”</td>
<td>查找第二个位置为 x 的数据</td>
</tr>
<tr>
<td>where 字段 like “x % y”</td>
<td>查找以 x 开头，以 y 结尾的数据</td>
</tr>
<tr>
<td>where 字段 like “x _ % _%”</td>
<td>查找以 x 开头，且长度至少为3的数据</td>
</tr>
<tr>
<td>where 字段 like “x _% y _%”</td>
<td>查找。。。。。。。（自己猜）</td>
</tr>
</tbody></table>
<p>还有很多，总之 _ 代表的意思是单个字符</p>
<p>案例:</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line"><span class="operator">*</span></span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">student</span><br><span class="line"><span class="keyword">WHERE</span></span><br><span class="line">grade_student <span class="keyword">LIKE</span> &quot;%软件工程%&quot;;</span><br></pre></td></tr></table></figure>



<h3 id="MySQL-UNION操作符："><a href="#MySQL-UNION操作符：" class="headerlink" title="MySQL UNION操作符："></a>MySQL UNION操作符：</h3><p>MySQL UNION 操作符用于连接两个以上的 SELECT 语句的结果组合到一个结果集合中。多个 SELECT 语句会删除重复的数据。</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> </span><br><span class="line">字段<span class="number">1</span></span><br><span class="line"><span class="keyword">from</span></span><br><span class="line">表名</span><br><span class="line"><span class="keyword">where</span> 条件<span class="number">1</span></span><br><span class="line"><span class="keyword">union</span> (参数)</span><br><span class="line"><span class="keyword">select</span></span><br><span class="line">字段<span class="number">2</span></span><br><span class="line"><span class="keyword">from</span></span><br><span class="line">表名</span><br><span class="line"><span class="keyword">where</span> 条件<span class="number">2</span></span><br></pre></td></tr></table></figure>



<p>案例：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line"><span class="operator">*</span></span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">user_common</span><br><span class="line"><span class="keyword">UNION</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line"><span class="operator">*</span></span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">user_manage;</span><br></pre></td></tr></table></figure>

<ul>
<li>参数有 <strong>DISTINCT</strong> 和 <strong>ALL</strong></li>
<li><strong>DISTINCT:</strong> 可选，删除结果集中重复的数据。默认情况下 UNION 操作符已经删除了重复数据，所以 DISTINCT 修饰符对结果没啥影响。</li>
<li><strong>ALL:</strong> 可选，返回所有结果集，包含重复数据。</li>
</ul>
<h3 id="MySQL-排序（ORDER-BY-语句）："><a href="#MySQL-排序（ORDER-BY-语句）：" class="headerlink" title="MySQL 排序（ORDER BY 语句）："></a>MySQL 排序（ORDER BY 语句）：</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> </span><br><span class="line">字段名</span><br><span class="line"><span class="keyword">from</span></span><br><span class="line">表名</span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span> 字段名（参数）</span><br></pre></td></tr></table></figure>

<ul>
<li>参数：ASC 和 DESC（默认ASC）</li>
<li>ASC：升序排列</li>
<li>DESC：降序排列</li>
</ul>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line"><span class="operator">*</span> </span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">student </span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> age_student <span class="keyword">DESC</span>;</span><br></pre></td></tr></table></figure>

<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line"><span class="operator">*</span> </span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">student </span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> age_student;</span><br></pre></td></tr></table></figure>

<p>ORDER BY 也是子句，可以和 WHERE 组合使用。</p>
<h3 id="MySQL-分组（GROUP-BY语句）："><a href="#MySQL-分组（GROUP-BY语句）：" class="headerlink" title="MySQL 分组（GROUP BY语句）："></a>MySQL 分组（GROUP BY语句）：</h3><p>GROUP BY 语句根据一个或多个列对结果集进行分组。</p>
<p>在分组的列上我们可以使用 COUNT, SUM, AVG,等函数。</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure>



<h3 id="MySQL-连接的使用："><a href="#MySQL-连接的使用：" class="headerlink" title="MySQL 连接的使用："></a>MySQL 连接的使用：</h3><h3 id="MySQL-NULL值处理："><a href="#MySQL-NULL值处理：" class="headerlink" title="MySQL NULL值处理："></a>MySQL NULL值处理：</h3><h3 id="MySQL-正则表达式："><a href="#MySQL-正则表达式：" class="headerlink" title="MySQL 正则表达式："></a>MySQL 正则表达式：</h3><h3 id="MySQL-事务："><a href="#MySQL-事务：" class="headerlink" title="MySQL 事务："></a>MySQL 事务：</h3><h3 id="MySQL-ALTER命令："><a href="#MySQL-ALTER命令：" class="headerlink" title="MySQL ALTER命令："></a>MySQL ALTER命令：</h3><h3 id="MySQL-索引："><a href="#MySQL-索引：" class="headerlink" title="MySQL 索引："></a>MySQL 索引：</h3><h3 id="MySQL-临时表："><a href="#MySQL-临时表：" class="headerlink" title="MySQL 临时表："></a>MySQL 临时表：</h3><h3 id="MySQL-复制表："><a href="#MySQL-复制表：" class="headerlink" title="MySQL 复制表："></a>MySQL 复制表：</h3><h3 id="MySQL-元数据："><a href="#MySQL-元数据：" class="headerlink" title="MySQL 元数据："></a>MySQL 元数据：</h3><h3 id="MySQL-序列使用："><a href="#MySQL-序列使用：" class="headerlink" title="MySQL 序列使用："></a>MySQL 序列使用：</h3><h3 id="MySQL-处理重复数据："><a href="#MySQL-处理重复数据：" class="headerlink" title="MySQL 处理重复数据："></a>MySQL 处理重复数据：</h3><h3 id="MySQL-及SQL注入："><a href="#MySQL-及SQL注入：" class="headerlink" title="MySQL 及SQL注入："></a>MySQL 及SQL注入：</h3><h3 id="MySQL-导出数据："><a href="#MySQL-导出数据：" class="headerlink" title="MySQL 导出数据："></a>MySQL 导出数据：</h3><h3 id="MySQL-导入数据："><a href="#MySQL-导入数据：" class="headerlink" title="MySQL 导入数据："></a>MySQL 导入数据：</h3><h3 id="MySQL-函数："><a href="#MySQL-函数：" class="headerlink" title="MySQL 函数："></a>MySQL 函数：</h3><h3 id="MySQL-运算符："><a href="#MySQL-运算符：" class="headerlink" title="MySQL 运算符："></a>MySQL 运算符：</h3><h2 id="高级语言连接数据库"><a href="#高级语言连接数据库" class="headerlink" title="高级语言连接数据库:"></a>高级语言连接数据库:</h2><h2 id="Flask-Rest-API-构建："><a href="#Flask-Rest-API-构建：" class="headerlink" title="Flask Rest API 构建："></a>Flask Rest API 构建：</h2><h2 id="数据库设计："><a href="#数据库设计：" class="headerlink" title="数据库设计："></a>数据库设计：</h2>]]></content>
      <categories>
        <category>数据库</category>
      </categories>
      <tags>
        <tag>MySQL</tag>
        <tag>数据库</tag>
      </tags>
  </entry>
  <entry>
    <title>Java面向对象之关键字Interface(未完)</title>
    <url>/2021/11/11/Java%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E4%B9%8B%E5%85%B3%E9%94%AE%E5%AD%97Interface/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><h2 id="为什么引入了接口？"><a href="#为什么引入了接口？" class="headerlink" title="为什么引入了接口？"></a>为什么引入了接口？</h2><p>Java为了令结构更加简单，易于使用，放弃了 C++ 的多继承，使用了单继承的特性，而这也导致了Java中的类功能并不完善，或者为了完善功能会导致大量的代码冗余。</p>
<p>例如：火箭类的父类是武器类，飞机类的父类是交通工具类，然而武器类和交通工具类都没用飞行这个方法。那么如果我们想要令火箭具有</p>
<h2 id="接口有什么用？"><a href="#接口有什么用？" class="headerlink" title="接口有什么用？"></a>接口有什么用？</h2><h2 id="接口怎么使用？"><a href="#接口怎么使用？" class="headerlink" title="接口怎么使用？"></a>接口怎么使用？</h2><h3 id="标准使用："><a href="#标准使用：" class="headerlink" title="标准使用："></a>标准使用：</h3><h3 id="匿名方式的使用："><a href="#匿名方式的使用：" class="headerlink" title="匿名方式的使用："></a>匿名方式的使用：</h3><h2 id="Java-8-新特性为接口增添了什么功能？"><a href="#Java-8-新特性为接口增添了什么功能？" class="headerlink" title="Java 8 新特性为接口增添了什么功能？"></a>Java 8 新特性为接口增添了什么功能？</h2>]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>学习笔记</tag>
        <tag>java面向对象</tag>
      </tags>
  </entry>
  <entry>
    <title>MySQL的常见命令和语法规范</title>
    <url>/2021/11/08/MySQL%E7%9A%84%E5%B8%B8%E8%A7%81%E5%91%BD%E4%BB%A4%E5%92%8C%E8%AF%AD%E6%B3%95%E8%A7%84%E8%8C%83/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><h2 id="MySQL的常见命令："><a href="#MySQL的常见命令：" class="headerlink" title="MySQL的常见命令："></a>MySQL的常见命令：</h2><ol>
<li><p>查看当前所有数据库：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">show databases;</span><br></pre></td></tr></table></figure></li>
<li><p>打开指定的库：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">use 库名;</span><br></pre></td></tr></table></figure></li>
<li><p>查看当前库所有表：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">show tables;</span><br></pre></td></tr></table></figure></li>
<li><p>查看其它库的所有表：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">show tables from 库名;</span><br></pre></td></tr></table></figure></li>
<li><p>创建表：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">create table 表名(</span><br><span class="line">	列名 列类型;</span><br><span class="line">    列名 列类型;</span><br><span class="line">    ...</span><br><span class="line">);</span><br></pre></td></tr></table></figure></li>
<li><p>查看表结构：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">desc 表名;</span><br></pre></td></tr></table></figure></li>
<li><p>查看服务器版本：</p>
<p>方式一：登录到MySQL服务端</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select version();</span><br></pre></td></tr></table></figure>

<p>方式二：未登陆到MySQL服务端</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mysql --version</span><br><span class="line">或</span><br><span class="line">mysql --V</span><br></pre></td></tr></table></figure></li>
</ol>
<h2 id="MySQL的语法规范："><a href="#MySQL的语法规范：" class="headerlink" title="MySQL的语法规范："></a>MySQL的语法规范：</h2><ol>
<li><p>不区分大小写，但建议关键字大写，表明，列名小写</p>
</li>
<li><p>每条命令最好用分号结尾</p>
</li>
<li><p>每条命令根据需要，可以进行缩进或换行</p>
</li>
<li><p>注释：</p>
<p>单行注释：#注释文字</p>
<p>单行注释：– 注释文字</p>
</li>
</ol>
]]></content>
      <categories>
        <category>数据库</category>
      </categories>
      <tags>
        <tag>MySQL</tag>
        <tag>数据库</tag>
      </tags>
  </entry>
  <entry>
    <title>计算机科班生大学期间应该做什么？</title>
    <url>/2021/11/06/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E7%8F%AD%E7%94%9F%E5%A4%A7%E5%AD%A6%E5%BA%94%E8%AF%A5%E5%81%9A%E4%BB%80%E4%B9%88%EF%BC%9F/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><blockquote>
<p>参考价值：极高</p>
</blockquote>
<blockquote>
<p>观前说明：本人曾通过QQ、微信、音频通话、私信等各种方式与十多位在职程序员一对一沟通交流过。他们之中有IT行业的，有通信行业的，有刚毕业的大厂程序员，有工作十几年的老程序员甚至还有两个培训班的程序员。并且查阅IT行业相关资料视频200+。因此本篇文章虽是根据本人经验撰写，但依旧具有很大的参考价值。</p>
</blockquote>
<hr>
<h2 id="本篇文章会回答以下问题："><a href="#本篇文章会回答以下问题：" class="headerlink" title="本篇文章会回答以下问题："></a>本篇文章会回答以下问题：</h2><ol>
<li>大学生应不应该参加社团？</li>
<li>大学的课程到底应不应该学？</li>
<li>大学生应不应该去拿奖学金？</li>
<li>大学生应不应该谈恋爱？</li>
<li>大学生应不应该打游戏？</li>
<li>大学生应不应该参加竞赛？</li>
<li>大学生应不应该考证？</li>
<li>大学生应不应该实习？</li>
<li>大学生应不应该做项目？</li>
<li>大学生应不应该追求热门技术？</li>
<li>大学生应不应该刷算法？</li>
<li>大学生应不应该钻研底层？</li>
</ol>
<hr>
<h2 id="通论："><a href="#通论：" class="headerlink" title="通论："></a>通论：</h2><p>计算机科班生大学期间到底应该干什么？这个问题并没有一个通用的解答。在我们明确自己的目标之前，任何人都无法给你准确的建议。因此在回答这个问题之前，我们必须先确定一个目标。</p>
<p>首先我们必须确定我们是要保研、考研、还是选择本科就业。怎么选择呢？</p>
<p>首先要看哪一个能满足我们的需求。如果我们的目标是从事人工智能、大数据等算法岗位，那么没得选，只能选择考研或者保研考进211、985大学。因为算法岗位的门槛要求就是211、985研究生。其次就是看自己的条件，如果家里有关系，或者说自己有关系，那么保研会非常适合。如果认为自己在顶尖分数阶段的考试很厉害，那么考研会是一个比较好的选择，如果我们不太适合考试但对技术有很强烈的追求，那么本科就业会是一个很好的选择。</p>
<blockquote>
<p>提醒各位：在顶尖分数层次，能力强并不等同于考试能考高分。举一个例子，我高中的时候到高考前，班里前30都能够做到对所有的知识点倒背如流，并且几乎所有人只要有充足的时间几乎能把所有的题都做对。但是这30人中依旧有一半多无论怎么考都考不上600分（模拟考试），平时讨论能够和稳定600分以上的同学打的有来有回，平分秋色，但是考试分数就是考不上去，永远卡在550到600之间。谁敢说他们的知识能力水平不如600分以上的同学吗？他们只是在做题技巧，做题思维上不够熟练，不够通达。在高分层次大家的能力水平都差不多，拼的是心态、做题手感、做题技巧、考试节奏等外在因素。</p>
<p>所以大家不要以为只要自己知识底蕴足够浑厚就一定能够考上985、211的计算机研究生。以计算机考研如此之卷的现状，能考上985、211计算机专业研究生的学生知识储备必然都是顶尖，而且他们一个个都是考试大神。所以我说有些人天生不适合计算机考研，因为并不是每一个人都适合研究考试技巧的，在考试技巧上大幅度弱于竞争者的情况下，我不认为这些人能竞争过考研211、985的计算机研究生，如果他们做到了，那么他们的知识储备得有多高，大家觉得可能吗？</p>
</blockquote>
<p>我们选定了方向，就知道接下来的四年该做什么了。</p>
<p>如果我们选择保研这条路，那么我们就需要尽自己所能让自己绩点排名专业前几，无论是考试尽量考满分，还是参加各种竞赛各种活动，其根本的目的都是提高绩点，提高在本专业的排名。考研的话就是立马去查资料，搞清楚计算机考研要考哪几门课，接下来的日子就是尽自己所能让自己在考研时尽量考一个高分。无论是刷题也好，夯实基础知识也罢亦或是学习做题技巧，根本目的都是在考研的时候考一个高分。</p>
<p>由于我本人走的是本科就业这条路，因此对考验和保研并没有深入研究过，以上建议仅是一个大概的方向，具体规划还是要去询问考研和保研的大佬。</p>
<p>接下来，我来谈谈本科就业该做什么。</p>
<p>本科就业需要做以下几件事：</p>
<ol>
<li>确定自己的主语言</li>
<li>学习计算机四大基础课（数据结构与算法、计算机网络、计算机系统（操作系统）、计算机组成原理）</li>
<li>前端</li>
<li>后端</li>
<li>竞赛</li>
<li>项目经验</li>
<li>实习</li>
</ol>
<p>然后，我们结合职位（没有算法岗位）选择和工作的公司期望来说一下每一个需要达到那种程度。</p>
<hr>
<p>职位：后端开发                            公司：大厂</p>
<ol>
<li><p>主语言：</p>
<p>至少掌握java或者C语言，且必须达到熟练掌握（需要自学，并进行大量练习）并且至少对主语言原理的理解达到内存层面。以Java为例，至少要通读一遍《Java核心技术 卷一》，不要求完全理解，但是不能囫囵吞枣的读，有能力的话去读一下《java编程思想》</p>
</li>
<li><p>计算机四大基础课：</p>
<p>数据结构熟练掌握，算法达到 LeetCode 800+题的程度(或者达到能够稳定做出LeetCode中等题的水平），计算机网络掌握基础即可，主要是辅助理解前端知识，操作系统和计算机组成原理需要熟练掌握（要求没有算法那么高），需要能够把这两门的知识运用到后端的功能优化中。</p>
</li>
<li><p>前端技能：</p>
<p>掌握前端基础三大件（html、css、JavaScript），不要求像主语言那么熟练，但至少要结合计算机网络知识自己手写几个web页面（跟着教程走也可以），不用追求页面多么精美，能写出来即可。学会使用vue、react等框架中的一个，不用熟练掌握，能够做到边百度边用的水平就够。（严格来说vue和react不算是框架）</p>
</li>
<li><p>后端：</p>
<p>数据库方面掌握MySQL，熟练运用SQL语句，并且逐渐培养设计数据库的能力；</p>
<p>框架方面需要学习基本使用，不用深入，但要多使用，主要用来优化自己的烂代码；</p>
<p>掌握Git工具的使用，会用即可；</p>
<p>熟悉Linux操作；</p>
<p>学习使用设计模式；</p>
<p>微服务、网络编程、容器也要学习（头疼）。</p>
</li>
<li><p>竞赛：</p>
<p>没有要求，如果在ACM上拿了比较好的名次，是加分项</p>
</li>
<li><p>项目经验：<br>无论是自己找项目做也好还是进实验室找项目做也罢亦或者实习期间参与的项目，至少要有一个运用到以上所有知识的项目，并且自己通过对底层知识（语言基础和计算机四大基础课）的理解对项目进行各种优化。在这之外也要做一些各种各样的小项目，目的是巩固自己学到的知识。</p>
</li>
<li><p>实习：</p>
<p>最好还是要在大二暑假去互联网公司进行一次暑假实习。目的主要是开拓眼界，为大三的学习和大三暑假找实习铺路。大三暑假一定要去实习，可能的话尝试一下去大厂实习。</p>
</li>
</ol>
<blockquote>
<p>其中最重要的是主语言基础和计算机四大基础课，这五个必须在学会的基础上通读一遍经典书籍并且应用到实际项目当中。其他的一些技术向数据库、html、JS、css、框架等，跟着视频教程做几个案例和小项目运用熟练即可。</p>
</blockquote>
<p>小厂对语言基础和计算机四大基础课的要求会低一些，对项目的要求也会低一些，但是其他技能该学还是得学。</p>
<p>前端的的话，本身不太了解，不敢乱说。</p>
<h2 id="常见问题："><a href="#常见问题：" class="headerlink" title="常见问题："></a>常见问题：</h2><ol>
<li><p>大学生应不应该参加社团？</p>
<p>感兴趣的话，可以参加，但是不要跟风参加社团，而且不要在社团上花费过多的时间而没有得到什么收益，或者说得到了一些没什么用的收益。</p>
</li>
<li><p>大学的课程到底应不应该学？</p>
<p>保研的话，由于需要保证拿到高绩点，没有办法，必须要学，而且还要学好。</p>
<p>考研的话，考研不考的科目没必要学，划划水把精力放在考研的科目上，考研不考的科目最后混一个及格即可（千万别挂科）</p>
<p>本科就业的话，理论上来讲学校的课都可以不听，但是重要的课必须自学，自学一般学的会更加牢固，但是注意自学速度会比较慢，而自学的进程必须要比学校的课程进度快，这就意味着我们在课下必须花费大量的时间在自学上（比如我每天课下自学时间在5~10个小时左右，人称两点战神），所有课必须保证千万别挂科（一旦挂科会耽误大量的时间）更不要重修。</p>
</li>
<li><p>大学生应不应该去拿奖学金？</p>
<p>如果家庭不特别贫困的话，可以顺手拿，比如保研的同学一般专业排名很高，奖学金不拿白不拿。</p>
<p>本科就业的学生不要为了拿奖学金而参加各种无意义的活动和竞赛，有那时间多学点技术，多巩固自己的基础来提升自己会是一个更好的选择。</p>
</li>
<li><p>大学生应不应该谈恋爱？</p>
<p>看有没有时间，如果我们完成了一天的目标还有充裕的时间，那么能谈就谈，大学不是寺庙，不要主动的活成禁欲系学生，进入社会谈恋爱就不容易了。</p>
<p>但是，如果我们为了自己的目标而奋斗，导致每天没有空余的时间，自然也就谈不了恋爱。这个时候只能放弃一个，要么放弃谈恋爱，要么降低自己的目标，空出一点时间来谈恋爱。都是成年人了，别总想着全都要，不要太天真，有些时候必须舍弃一个。</p>
<p>像我，每天学到半夜两点，哪有时间谈恋爱？（无奈、被迫出家-_-）</p>
</li>
<li><p>大学生应不应该打游戏？</p>
<p>和谈恋爱一样有时间就打，没时间自然也就没办法打。</p>
</li>
<li><p>大学生应不应该参加竞赛？</p>
<p>保研的话，只要能加绩点能参加就参加。</p>
<p>考研的话不清楚</p>
<p>本科就业的话，如果目标是大厂，只推荐参加ACM，蓝桥杯<strong>不推荐参加</strong>。蓝桥杯地位比较尴尬，蓝桥杯国赛的水平差不多就是LeetCode中等题的水平，而大厂的算法测试题差不多也就是LeetCode中等题的水平，因此，即便我们拿了蓝桥杯国一，也并不能体现出我们比其他通过大厂算法测试的人更强。大厂招聘也一般不将蓝桥杯国一当作加分项。</p>
</li>
<li><p>大学生应不应该考证？</p>
<p>四六级必考。</p>
<p>其他证如果感兴趣且有时间可以考，但一般没什么用，比如普通话证不会对你找一个程序员的工作有什么帮助。</p>
</li>
<li><p>大学生应不应该实习？</p>
<p>保研考研不需要实习，除非想体验生活。</p>
<p>本科就业必须实习，有能力的话，大二暑假就可以去实习了。</p>
<p>实习要尽量去互联网公司实习，不要去传统行业实习</p>
</li>
<li><p>大学生应不应该做项目？</p>
<p>保研考研不清楚，但本科就业的学生必须实习，想躺平的话当我没说。</p>
</li>
<li><p>大学生应不应该追求热门技术？</p>
<p>首先我们要知道什么是热门技术，什么是基础知识。</p>
<p>不严谨的说框架就是热门技术，语言、计算机四大基础课、前端三大件是基础知识。</p>
<p>保研和考研的同学不需要追求技术也不需要把基础知识学那么深</p>
<p>但本科就业的同学，热门技术是要学的，但只用学个皮毛，会使用即可，不要深入去学。要时刻记得自己是Java后端开发工程师，而不是spring后端开发工程师。如果语言基础雄厚的话学习框架之学个皮毛的话还是很快的。</p>
</li>
<li><p>大学生应不应该刷算法？</p>
<p>保研、考研的同学没必要刷算法。</p>
<p>本科就业的同学需要刷算法题，量根据自己的目标决定，大厂对算法要求比较高，小厂会比较低一些。</p>
</li>
<li><p>大学生应不应该钻研底层？</p>
<p>保研考研的同学没必要钻研底层。</p>
<p>本科就业的同学需要研究一下计算机底层知识（实际上就是深度学习计算机四大基础课，并尽可能应用到实际项目开发当中）</p>
</li>
</ol>
]]></content>
      <categories>
        <category>规划</category>
      </categories>
      <tags>
        <tag>规划</tag>
      </tags>
  </entry>
  <entry>
    <title>把地狱当家的过往</title>
    <url>/2021/11/05/%E6%8A%8A%E5%9C%B0%E7%8B%B1%E5%BD%93%E4%BD%9C%E5%AE%B6%E7%9A%84%E8%BF%87%E5%BE%80/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><blockquote>
<p>参考价值：无参考价值</p>
</blockquote>
<p>今天翻了翻手机，发现了高考成绩单，一时间五味杂陈，难得的回忆起了过往，于是便有了这篇文章。</p>
<p><img src="https://i.loli.net/2021/11/05/YdZqJUoFv8EwGaH.jpg"></p>
<p>不知该从何是说起，那就从小时候开始说吧。</p>
<h2 id="地狱开局，暗淡无光（出生）"><a href="#地狱开局，暗淡无光（出生）" class="headerlink" title="地狱开局，暗淡无光（出生）"></a><strong>地狱开局，暗淡无光</strong>（出生）</h2><p>作为一位非酋，在这场 “地球 online” 的游戏中，我开了一个地狱级的帐号。</p>
<p>似乎是贫困县农民家庭的标配，家境贫穷，穷到我刚出生时，连上户口的钱的没有。家庭也不算和睦，父亲的野心和能力之间的矛盾令这个家庭遭受不少打击，虽然都被父亲抗下了，并没有过多波及家人。但记忆中的小时候，父母总是在吵架，我总是躲在被窝里。</p>
<p>我也不争气，性格自卑、懦弱的同时脑子也不太灵光，乘法口诀也是从一年级背到了二年级才背会。</p>
<p>如此看来，我这辈子可能就这么废了，但人生是有转折的。在我缩在黑暗墙角时，两个人为我点亮起了明灯，成为了我最初的希望。</p>
<h2 id="两盏明灯，教会了我奔跑（小学）"><a href="#两盏明灯，教会了我奔跑（小学）" class="headerlink" title="两盏明灯，教会了我奔跑（小学）"></a><strong>两盏明灯，教会了我奔跑</strong>（小学）</h2><p>一个对未来没有任何希望的自卑的孩子是不会奔跑的，只会独自一人缩在角落，过完一生，如果没有转折的话 . . . . . .</p>
<p><strong>第一盏明灯，第一次转折：</strong></p>
<p>三年级之前，我对学习大概是没有兴趣的，也不认为自己能学好，直到她的出现 。。。</p>
<p>她是我的三年级班主任，是我小学三年以来第一个认为我能学好的人（包括我父母，哭死）。我也是第一次开始尝试带着希望的主动去学习。并没有小说里的一飞冲天式的进展，我也并没有因此发奋图强直接拿下全班第一，只是从班级倒数来到了班级中游。虽然没有一飞冲天，但是这次转变也有着非常的意义，因为这是一个开始 。 </p>
<blockquote>
<p>后来听老爹说，老师那么照顾我可能是我报了老师的补习班 . . . . . . (哭晕在厕所)</p>
</blockquote>
<p>之后，也只是不温不火的学习，一直排在班级中游，直到那个男人的到来 ！</p>
<p><strong>第二盏明灯，双龙戏珠，共争巅峰：</strong></p>
<p>六年级，我前桌来了一位同学：潘池，他对我的影响我此生难忘，他也是我此生最感激的人之一。</p>
<p>潘池：学习很差，无法形容有多差，总之就是很差。性格活泼，爱开玩笑、爱挑衅别人（特指我）。</p>
<p>我：没有特点、略有自卑、各方面都很平庸、学习也很平庸。</p>
<p>不知道为什么，数学老师一段时间好像盯上了潘池，总是提问他，他也自然而然的啥也不会。嘻嘻哈哈的站起来，被老师骂一顿，又嘻嘻哈哈的坐下，还向后桌的我做个鬼脸（我也不知道他为什么要做鬼脸，可能只是单纯好玩）。</p>
<p>突然有一天，潘池转过来对我说：“今天数学老师提问，敢不敢和我一起举手，不举手是小狗。” 我当时大概认为他已经疯了，但最终我还是同意了。果然，上课数学老师提问，潘池立马举手，我一惊，也跟着举手，老师自然提问了潘池（老师当时应该也很惊讶），最离谱的是，他竟然答对了。</p>
<p>然后，一道神奇的风景线一直持续到小学毕业。</p>
<p>每一次数学老师提问后潘池都开始举手（也不知道有啥大病），然后用后背撞一下我的桌子，我也无奈跟着举手。之后越来越离谱，从老师刚说完问题立马举手到后来老师还没说问题他就举手，我也从一开始被他带着举手到后来和他竞速谁举手更快。我们从一开始总是说错到最后除非其他人不举手老师就不提问我俩。</p>
<p>逐渐的，一个差生和一个平庸的学生竟然成为了班级里的数学双星，每次数学考试都接近满分。（现在回想起来，这段经历挺梦幻的）</p>
<p>当然，我们也就数学强，语文英语烂的一塌糊涂。</p>
<h2 id="晨光初现，努力奔跑（初中）"><a href="#晨光初现，努力奔跑（初中）" class="headerlink" title="晨光初现，努力奔跑（初中）"></a>晨光初现，努力奔跑（初中）</h2><p>初一的第一次考试数学考了118（满分120），英语考了120（满分120）。</p>
<p>可能是我六年级总是与潘池和数学老师 battle 的原因，我的逻辑思维一直比同龄人要强上一些，要缜密一些。因此，数学数学强上一些也挺正常。</p>
<p>我数学是确实很强，但我小学英语可是从来都没及格过的。那么为什么英语能考这么高呢？这就要倒回去讲了。</p>
<p>我小学的时候英语很差，因此家里在我五年级、六年级寒暑假期间花了两三百（好像是，记不清了）报了三次大山的英语辅导班。可惜的是，我小学的英语成绩一直都没有进步，永远都维持在及格线以下（我也不理解家里为什么在这种情况下还能坚持给我报辅导班）。当然，我在大山里的学习成绩那是相当的强的，每次考试都能考116到118之间（班级第一的水平）。</p>
<blockquote>
<p>那么为什么我小学英语还是一踏糊涂呢 ，有两个原因：</p>
<ol>
<li><p>小学英语老师教的太烂，试卷出的也太烂，不愿意学</p>
<p>小学老师的英语发音很离谱，我在大山补习班是学过音标的，因此对于英语老师奇怪的发音一直很反感，连带着对学校的英语也很反感（小学生嘛，就是这么 ” 爱屋及乌 “ ）。</p>
<p>小学的英语考试也是全靠背来考试的，语法什么的都不考，我大山学的就是语法和音标，就弄的我挺没兴致的，于是小学英语就一直应付到了毕业，</p>
</li>
<li><p>相比于英语、语文、我觉得和数学老师 battle 更有意思一点，因此也就没功夫管学校的英语</p>
</li>
</ol>
</blockquote>
<p>因为我小学期间就掌握了英语音标和英语基础语法和语句，所以初一的时候我的英语学习算是快人一步拿下了第一次英语考试的满分。</p>
<p>就这样手捧英语数学两大块金砖，我升到了八年级的 “ 普通班 ” ，至于为什么是普通班。。。</p>
<p>别问，问就是偏科。</p>
<p>八年级成绩一直稳定在班级前五的水平，也遇到了我的另一位仁兄 “ 李周兴 ”，我与这位是两个极端，我是理解型战士，他是记忆型战士，平时一起玩得很开心，我当时也一直调侃他 纯靠记忆是走不远的（最后这位高考好像考的也还不错，去上海了，具体没怎么了解）挺怀念的。</p>
<h3 id="壮士断腕，一刀两断"><a href="#壮士断腕，一刀两断" class="headerlink" title="壮士断腕，一刀两断"></a>壮士断腕，一刀两断</h3><p>八年级暗恋了一位女生，当时我各方面还是很 OK 的，学习全班前几， 长得人高马大（当时也没现在这么胖，挺正常的身材，有点偏壮），人挺随和的，在班里人际关系也不错。那姑娘也没什么特别亮眼的地方，那个时候如果我想追，应该是很容易追到手的，但是我却一直没有开始行动。</p>
<p>我这个人思维是比较缜密的，说人话就是做事之前想的多。</p>
<p>当时所有学生最大的目标就是考上 “ 一高 ”（县里最好的高中），因为考上一高就意味着能考上大学。由于偏科的缘故，我当时的总成绩是没有信心考到一高的。因此我在不断权衡这段恋爱对我有什么影响。</p>
<ul>
<li><p>这段恋爱注定不能长久</p>
<p>初中生的恋爱 99% 最终都会走向死亡，这个我是很讨厌的，注定没有结果的恋爱就是浪费时间，虽然过程是美好的但但如果注定没有结果就意味着注定最后两手空空，最后收获了什么？经验？曾经的快乐？美好的回忆？对我来说都是空谈。如果没有<strong>可能</strong>把恋爱的时间拉到永恒，我是不会开始的，因为注定两手空空。</p>
</li>
<li><p>会影响我的成绩</p>
<p>这个很正常，我的主业还是学习，争取考上一高。如果我花费精力到谈恋爱上，考上一高的可能型性就会降低，这是我无法容忍的。</p>
</li>
<li><p>影响心境</p>
<p>我学习时有一种心境，通过这种心境我能进入到一种极为专一的状态，不知道你们有没有体会，那种状态相当的强悍。而我有预感，如果我谈恋爱，以我对恋爱的重视程度，这种心境很可能会受到影响。</p>
</li>
</ul>
<p>基于以上种种原因，我一直处于暗恋的状态，没前进也没后退。抱着处理不了就不处理的心态就一直这么吊着。</p>
<p>之后，最离谱的事情发生了！</p>
<p>老师调座位也不知道怎么想的，把她调成我同桌了，我靠墙坐，她坐中间，另一个女生坐旁边。</p>
<p>女生总是喜欢打打闹闹的，两个女生玩闹，我坐旁边自然难免会被 “ 波及 ”。</p>
<p>当时虽然很” 爽 “（心爱女生总是被迫入怀了解一下），但特别纠结，当时我的心境也受到了影响。</p>
<p><em>必须做出决断了</em></p>
<p>当时我是这么想的，也是这么做的。</p>
<p>谈过恋爱或者暗恋过别人的人应该都知道，在喜欢一个人的前提下如何让自己不喜欢对方是一件很困难的事，甚至是一件基本不可能的事。</p>
<p>但我做到了，<em>壮士断腕，一刀两断。</em></p>
<p>具体怎么断的就不细说了，那女孩最终也不知道我暗恋她。我还被这件事整自闭了，也是老爹发现提醒了我，我才发觉，逐渐走出自闭的。</p>
<blockquote>
<p>这次经历对我影响很大，我现在当断则断不受任何沉默成本影响的处事风格也很大程度上受这件事影响。</p>
</blockquote>
<h3 id="逍遥神仙逍遥王，一年不动心境藏"><a href="#逍遥神仙逍遥王，一年不动心境藏" class="headerlink" title="逍遥神仙逍遥王，一年不动心境藏"></a>逍遥神仙逍遥王，一年不动心境藏</h3><p>升到九年级，学校取消了重点班制度，我本应该掉出前十（我英语成绩逐年下滑，九年级时只稳定在100到110之间，数学也因为各种因素下滑到110左右）的。</p>
<p>但是好巧不巧，新增了一门叫<strong>物理</strong>的课。</p>
<p>可能是因为我思维比较通达的缘故，我物理也总是接近满分，经常和物理老师 battle ，但是从没赢过（怪可惜的）。</p>
<p>总体来说，成绩一直稳定在班级前十，去一高是稳了的。</p>
<p>这一年中有一件很有趣的事。</p>
<p>一般来说，好学生总会和好学生扎堆，坏学生总会和坏学生扎堆，我们班也一样，班里前十无论怎么调座位都有九个坐在中间前四排。剩下那一个没有扎堆坐的人就是我。</p>
<p>这一年时间里，无论座位怎么调，我都坐在左边第三排靠靠墙的位置。我这么坐大概有两个原因：</p>
<p>第一个原因是懒得动，换位置搬东西挺麻烦的。</p>
<p>第二个就和我的心境有关，我属于那种能静得下心的人，往凳子上一坐就能立马进入专一状态，然后一坐四五个小时、八九个小时都没什么问题（就和现在的我一样，一坐七八个小时也不感觉枯燥）。</p>
<p>但是如果我和老师坐一起我就达不到这种心境，因为老师的存在感太强了，不得不让我分神。那些个前十也是如此，存在感太强，我担心和他们坐在一起维持不住这种心境，于是也就不敢和他们扎堆坐。</p>
<p>因为当时已经能稳稳进一高，所以这一年也挺平和的。最后我膝盖出了点小问题，去市里做手术住院了，没参加体育测试，只拿了个及格分。当时我也并不着急，因为哪怕只拿及格分我也稳稳进一高重点班了。</p>
<p>万万没想到，又有意外发生了了 . . . . . .</p>
<p>我在病床上接到了班主任的电话，说我进了一高实验班（最高等级的班）。这个实验班是通过小中招招人的（类似于自主招生，不知道别的地方有没有），好像只看理科成绩（我也不太清楚）。全班招了9个人，我是其中一个（我记得那一年好像我们班被招的人最多）。</p>
<blockquote>
<p>9年级我同桌也一直没换过，不知道为什么他也一直跟着我跟了我一年，最后他也考上一高了。小学的那个潘池也进一高了，我在一高的期末成绩排行榜上还看见过他。</p>
</blockquote>
<blockquote>
<p>家里的关系也缓和了很多，也不知道什么时候，家里父母逐渐不怎么吵架了，上高中的时候我基本没有父母吵架的印象了，顶多也就是互相埋怨，可能是有了希望？</p>
</blockquote>
<h2 id="天堂开局，拥抱地狱（高中）"><a href="#天堂开局，拥抱地狱（高中）" class="headerlink" title="天堂开局，拥抱地狱（高中）"></a>天堂开局，拥抱地狱（高中）</h2><p>到了我梦想中的学校，想都不敢想的班级，这次可谓是天堂开局。</p>
<p>观察了周围的人，周围的同学简直一个个都是奇人异士。相比之下，我专一心境和通达思维的特点反而很平庸。</p>
<p>高中也没什么什么可说的。</p>
<p>物理从前1、2下滑到前十再下滑到前二十。</p>
<p>英语从一开始的拖后腿（100多），到后来的脱裤子（八九十），再到最后的奋勇直追（115左右，依然班级倒数，班里同学们英语普遍120以上）。</p>
<p>总成绩从班级前十，滑到前二十，再到中游，再到班级倒数，在到最后的中游。</p>
<p>其实也不是我差，是其他人过于离谱，我最差的时候也能高一本线三四十分。临近高考的时后，几乎班里一半多的人对于知识点都是倒背如流。</p>
<p>至于高中到底有多苦，不是河南考生不知道河南考生有多苦，甚至河南考生都不知道自己有多苦，未见天堂的地狱之人又怎能知道地狱之苦。</p>
<p>直接放数据吧，各位按照自己的经验自行体会河南考生有多么痛苦，河南为什么盛产卷王。</p>
<p>2020年河南高考：</p>
<ul>
<li>全国一卷</li>
<li>应届考生：115万  复读生：16万</li>
<li>一本分数线：544分</li>
<li>576分上不了河南以大学结尾的大学（也就是一本）</li>
<li>贫困县debuff</li>
</ul>
<p>到底有多苦，各位结合自己情况，自己感觉。</p>
<h3 id="虽然不适合，但有时候别无选择"><a href="#虽然不适合，但有时候别无选择" class="headerlink" title="虽然不适合，但有时候别无选择"></a>虽然不适合，但有时候别无选择</h3><p>有很多次我去问题：</p>
<p>我：“老师这个题为什么不会是这种情况？”</p>
<p>数学老师：“考试不会这么考，想那么多干啥”</p>
<p>我：“但是有这种情况啊”</p>
<p>数学老师：”你怎么这么死脑筋，这种情况考试根本不会考，别人都不会这么想，就你会这么想，你咋这么笨“</p>
<p>我：”. . . . . . .“</p>
<p>以上类似的交谈数次在我身上发生，我也逐渐意识到不是我的思维有问题，只不过我的思维不是为了考试而生，换句话说就是我这种人不太适合考试模式，但是高考只有这一条路，我无路可选。</p>
<p>这也是为什么本科就业难度比考研大（指两者取得同样的成就），我依旧宁愿花费几倍的努力也要放弃考研的原因。因为我很可能并不适合考研。</p>
<h2 id="风云变幻，沉沙折戟（高考）"><a href="#风云变幻，沉沙折戟（高考）" class="headerlink" title="风云变幻，沉沙折戟（高考）"></a>风云变幻，沉沙折戟（高考）</h2><p>高考出题风格大变，导致考试前几周的准备全白费了。</p>
<p>英语手感全无，作文乱写，最后得分102分（之前已经稳定在115分上下）。</p>
<p>化学选择错了4道（平时不错或者只错一道）</p>
<p>物理最后一道大题第一问错误，全盘崩溃</p>
<p>汇成一句话：<strong>高考失利</strong></p>
<p>一本分数线出来的那一晚，彻夜难眠，一本分数线544分。</p>
<p>这有多恐怖？</p>
<p>我的分数576，在河南连一本都上不了。班里有个600分以上的同学复读了（好像是两个）。130万的考生在优秀大学数量稀少的河南省同时竞争，结果是什么？这就是结果。</p>
<p>当时，我萌生过复读的念头，但老爹问我：如果下一次再失利，你扛得住吗？</p>
<p>我扛不住。</p>
<p>于是，我出省了，我逃离了河南省。以本科二批招生上了咱们学校的宇宙机专业。（这里我钻了一本院校在外省某些专业是本科二批招生的空子，还算是一个不错的结果）</p>
<h2 id="懵懵懂懂，连续栽坑（大一）"><a href="#懵懵懂懂，连续栽坑（大一）" class="headerlink" title="懵懵懂懂，连续栽坑（大一）"></a>懵懵懂懂，连续栽坑（大一）</h2><p>由于过去的18年我一直在为高考做准备，因此我对大学的信息一无所知，这也导致了我在大一频频栽坑。</p>
<p>最大的坑还是在学习上，当时我的思维还停留在高中时期，认为基础很重要。于是我开始事无巨细的钻研高数。结果整个大一被高数活活拖死，最后还挂了两科。</p>
<p>唯一庆幸的是两点：</p>
<ol>
<li>专业分流时我选专业选了软工，没有跟风选择计科</li>
<li>我专一的心境和承受苦难的特性并没有因为享乐而丢失（一直在与高数 battle 和查东墙补西墙，实际上也没有享乐）</li>
</ol>
<h2 id="登高望远，吹云见日（大一暑假）"><a href="#登高望远，吹云见日（大一暑假）" class="headerlink" title="登高望远，吹云见日（大一暑假）"></a>登高望远，吹云见日（大一暑假）</h2><p>出于我在大一的栽坑经历，我深刻意识到了信息的重要性。</p>
<p>我开始疯狂在各大平台查阅各种信息，主要包括考研，本科就业和IT行业相关信息。（其实有很多我大一就开始查阅）</p>
<p>在这个暑假，我确立了大学四年的大体规划，搭建了我自己的个人博客网站，通过QQ、微信、音频通话、私信等各种方式与十多位在职程序员一对一沟通交流。他们之中有IT行业的，有通信行业的，有刚毕业的大厂程序员，有工作十几年的老程序员甚至还有两个培训班的程序员。并且查阅了上百个IT行业相关资料与视频。令我对未来和IT行业（程序员方向）有了一个大概的轮廓。不再像大一时那么迷茫，十分清楚自己缺少什么，该干什么，该做到什么程度。</p>
<p>这个暑假花了我不少钱（好心痛）。</p>
<h2 id="以地狱为家，以烈火为食（大二）"><a href="#以地狱为家，以烈火为食（大二）" class="headerlink" title="以地狱为家，以烈火为食（大二）"></a>以地狱为家，以烈火为食（大二）</h2><p>大二开始按着规划进行着学习，一直保持着上课查阅各种相关资料不断微调学习计划，下课开始潜心学习的状态。</p>
<p>每天6~10个小时的自学时间使我的规划有条不紊的进行着，专一的心境和对苦难的天然抗性也令我能够安静的在椅子上一坐就是四五个小时。</p>
<p><em>一个卷王就这么诞生了，一个两点战神就这么诞生了。。。</em></p>
<blockquote>
<p>其实我倒不认为我是卷王，不考研导致我很难给其他人造成阻力，也产生不了恶性竞争，卷自然也就无从谈起。</p>
</blockquote>
<p><img src="https://i.loli.net/2021/11/06/Ipzc64vwYFoiQ8S.jpg"></p>
]]></content>
      <categories>
        <category>生活</category>
      </categories>
      <tags>
        <tag>生活</tag>
      </tags>
  </entry>
  <entry>
    <title>前端学习路线（转载）</title>
    <url>/2021/11/05/%E5%89%8D%E7%AB%AF%E5%AD%A6%E4%B9%A0%E8%B7%AF%E7%BA%BF%EF%BC%88%E8%BD%AC%E8%BD%BD%EF%BC%89/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><blockquote>
<p>参考价值：极高</p>
</blockquote>
<blockquote>
<p>声明：本篇博客完全转载自B站up主技术胖的开源项目</p>
</blockquote>
<p><a href="https://www.bilibili.com/video/BV1ub4y1h7ZY?from=search&seid=5619403419360623642&spm_id_from=333.337.0.0">程序员前端知识图谱+B站自学资源整合 新手自学无忧 老手查缺补漏 </a></p>
<p>@<a href="https://space.bilibili.com/165659472?spm_id_from=333.788.b_765f7570696e666f.2"><strong>技术胖</strong></a></p>
<hr>
<h1 id="技术胖的前端学习路径"><a href="#技术胖的前端学习路径" class="headerlink" title="技术胖的前端学习路径"></a>技术胖的前端学习路径</h1><p>B站学习资源整合</p>
<h2 id="网络知识"><a href="#网络知识" class="headerlink" title="网络知识"></a>网络知识</h2><p>（Internet）</p>
<h3 id="1-网络工作原理"><a href="#1-网络工作原理" class="headerlink" title="1. 网络工作原理"></a>1. 网络工作原理</h3><h3 id="计算机网络原理：https-www-bilibili-com-video-BV1xJ41137Q3"><a href="#计算机网络原理：https-www-bilibili-com-video-BV1xJ41137Q3" class="headerlink" title="计算机网络原理：https://www.bilibili.com/video/BV1xJ41137Q3"></a>计算机网络原理：<a href="https://www.bilibili.com/video/BV1xJ41137Q3">https://www.bilibili.com/video/BV1xJ41137Q3</a></h3><h3 id="2-什么是HTTP"><a href="#2-什么是HTTP" class="headerlink" title="2. 什么是HTTP"></a>2. 什么是HTTP</h3><h3 id="HTTP协议详解：https-www-bilibili-com-video-BV1js411g7Fw"><a href="#HTTP协议详解：https-www-bilibili-com-video-BV1js411g7Fw" class="headerlink" title="HTTP协议详解：https://www.bilibili.com/video/BV1js411g7Fw"></a>HTTP协议详解：<a href="https://www.bilibili.com/video/BV1js411g7Fw">https://www.bilibili.com/video/BV1js411g7Fw</a></h3><h3 id="3-浏览器及工作方式"><a href="#3-浏览器及工作方式" class="headerlink" title="3. 浏览器及工作方式"></a>3. 浏览器及工作方式</h3><h3 id="浏览器是如何运作的？：https-www-bilibili-com-video-BV1x54y1B7RE"><a href="#浏览器是如何运作的？：https-www-bilibili-com-video-BV1x54y1B7RE" class="headerlink" title="浏览器是如何运作的？：https://www.bilibili.com/video/BV1x54y1B7RE"></a>浏览器是如何运作的？：<a href="https://www.bilibili.com/video/BV1x54y1B7RE">https://www.bilibili.com/video/BV1x54y1B7RE</a></h3><h3 id="4-DNS-及其工作原理"><a href="#4-DNS-及其工作原理" class="headerlink" title="4. DNS 及其工作原理"></a>4. DNS 及其工作原理</h3><h3 id="DNS基本工作原理：https-www-bilibili-com-video-BV1GW411j7Ts"><a href="#DNS基本工作原理：https-www-bilibili-com-video-BV1GW411j7Ts" class="headerlink" title="DNS基本工作原理：https://www.bilibili.com/video/BV1GW411j7Ts"></a>DNS基本工作原理：<a href="https://www.bilibili.com/video/BV1GW411j7Ts">https://www.bilibili.com/video/BV1GW411j7Ts</a></h3><h3 id="直观DNS科普：https-www-bilibili-com-video-BV1F54y1R7BC"><a href="#直观DNS科普：https-www-bilibili-com-video-BV1F54y1R7BC" class="headerlink" title="直观DNS科普：https://www.bilibili.com/video/BV1F54y1R7BC"></a>直观DNS科普：<a href="https://www.bilibili.com/video/BV1F54y1R7BC">https://www.bilibili.com/video/BV1F54y1R7BC</a></h3><h3 id="5-域名相关知识"><a href="#5-域名相关知识" class="headerlink" title="5. 域名相关知识"></a>5. 域名相关知识</h3><h3 id="域名解析完整讲解：https-www-bilibili-com-video-BV1zA411x7Pj"><a href="#域名解析完整讲解：https-www-bilibili-com-video-BV1zA411x7Pj" class="headerlink" title="域名解析完整讲解：https://www.bilibili.com/video/BV1zA411x7Pj"></a>域名解析完整讲解：<a href="https://www.bilibili.com/video/BV1zA411x7Pj">https://www.bilibili.com/video/BV1zA411x7Pj</a></h3><h3 id="6-云服务相关知识"><a href="#6-云服务相关知识" class="headerlink" title="6. 云服务相关知识"></a>6. 云服务相关知识</h3><h3 id="揭秘阿里云服务器：https-www-bilibili-com-video-BV1Rt411u7k4"><a href="#揭秘阿里云服务器：https-www-bilibili-com-video-BV1Rt411u7k4" class="headerlink" title="揭秘阿里云服务器：https://www.bilibili.com/video/BV1Rt411u7k4"></a>揭秘阿里云服务器：<a href="https://www.bilibili.com/video/BV1Rt411u7k4">https://www.bilibili.com/video/BV1Rt411u7k4</a></h3><h2 id="超文本标记语言"><a href="#超文本标记语言" class="headerlink" title="超文本标记语言"></a>超文本标记语言</h2><p>（HTML）</p>
<h3 id="1-HTML基础知识学习"><a href="#1-HTML基础知识学习" class="headerlink" title="1. HTML基础知识学习"></a>1. HTML基础知识学习</h3><h3 id="HTML全套基础教程：https-www-bilibili-com-video-BV11t411K74Q"><a href="#HTML全套基础教程：https-www-bilibili-com-video-BV11t411K74Q" class="headerlink" title="HTML全套基础教程：https://www.bilibili.com/video/BV11t411K74Q"></a>HTML全套基础教程：<a href="https://www.bilibili.com/video/BV11t411K74Q">https://www.bilibili.com/video/BV11t411K74Q</a></h3><h3 id="2-HTML-编写规则-和语义化写法"><a href="#2-HTML-编写规则-和语义化写法" class="headerlink" title="2. HTML 编写规则 和语义化写法"></a>2. HTML 编写规则 和语义化写法</h3><h3 id="HTML-速成：https-www-bilibili-com-video-BV1vs411M7aT"><a href="#HTML-速成：https-www-bilibili-com-video-BV1vs411M7aT" class="headerlink" title="HTML 速成：https://www.bilibili.com/video/BV1vs411M7aT"></a>HTML 速成：<a href="https://www.bilibili.com/video/BV1vs411M7aT">https://www.bilibili.com/video/BV1vs411M7aT</a></h3><h3 id="3-表单和验证"><a href="#3-表单和验证" class="headerlink" title="3. 表单和验证"></a>3. 表单和验证</h3><h3 id="html5表单验证：https-www-bilibili-com-video-BV16K4y1Z7Gb"><a href="#html5表单验证：https-www-bilibili-com-video-BV16K4y1Z7Gb" class="headerlink" title="html5表单验证：https://www.bilibili.com/video/BV16K4y1Z7Gb"></a>html5表单验证：<a href="https://www.bilibili.com/video/BV16K4y1Z7Gb">https://www.bilibili.com/video/BV16K4y1Z7Gb</a></h3><h3 id="4-公约和最佳实践方法"><a href="#4-公约和最佳实践方法" class="headerlink" title="4. 公约和最佳实践方法"></a>4. 公约和最佳实践方法</h3><h3 id="前端代码规范秘籍：https-www-bilibili-com-video-BV19P4y147Jz"><a href="#前端代码规范秘籍：https-www-bilibili-com-video-BV19P4y147Jz" class="headerlink" title="前端代码规范秘籍：https://www.bilibili.com/video/BV19P4y147Jz"></a>前端代码规范秘籍：<a href="https://www.bilibili.com/video/BV19P4y147Jz">https://www.bilibili.com/video/BV19P4y147Jz</a></h3><h3 id="5-SEO-基础知识"><a href="#5-SEO-基础知识" class="headerlink" title="5. SEO 基础知识"></a>5. SEO 基础知识</h3><h3 id="SEO优化学习教程：https-www-bilibili-com-video-BV1fE411J7ya"><a href="#SEO优化学习教程：https-www-bilibili-com-video-BV1fE411J7ya" class="headerlink" title="SEO优化学习教程：https://www.bilibili.com/video/BV1fE411J7ya"></a>SEO优化学习教程：<a href="https://www.bilibili.com/video/BV1fE411J7ya">https://www.bilibili.com/video/BV1fE411J7ya</a></h3><h2 id="层叠样式表"><a href="#层叠样式表" class="headerlink" title="层叠样式表"></a>层叠样式表</h2><p>（CSS)</p>
<h3 id="1-CSS-基础知识学习"><a href="#1-CSS-基础知识学习" class="headerlink" title="1. CSS 基础知识学习"></a>1. CSS 基础知识学习</h3><h3 id="CSS3基础教程：https-www-bilibili-com-video-BV1Bx411u7cS"><a href="#CSS3基础教程：https-www-bilibili-com-video-BV1Bx411u7cS" class="headerlink" title="CSS3基础教程：https://www.bilibili.com/video/BV1Bx411u7cS"></a>CSS3基础教程：<a href="https://www.bilibili.com/video/BV1Bx411u7cS">https://www.bilibili.com/video/BV1Bx411u7cS</a></h3><h3 id="CSS3全套教程：https-www-bilibili-com-video-BV1et411q74F"><a href="#CSS3全套教程：https-www-bilibili-com-video-BV1et411q74F" class="headerlink" title="CSS3全套教程：https://www.bilibili.com/video/BV1et411q74F"></a>CSS3全套教程：<a href="https://www.bilibili.com/video/BV1et411q74F">https://www.bilibili.com/video/BV1et411q74F</a></h3><h3 id="2-页面切图和布局实现"><a href="#2-页面切图和布局实现" class="headerlink" title="2. 页面切图和布局实现"></a>2. 页面切图和布局实现</h3><ul>
<li>浮动布局</li>
<li>浮动布局：<a href="https://www.bilibili.com/video/BV1Zs411j7Z3">https://www.bilibili.com/video/BV1Zs411j7Z3</a></li>
<li>定位布局</li>
<li>CSS定位布局：<a href="https://www.bilibili.com/video/BV1ni4y1g7tc">https://www.bilibili.com/video/BV1ni4y1g7tc</a></li>
<li>Display</li>
<li>display&amp;visibility：<a href="https://www.bilibili.com/video/BV1HJ411M7CM">https://www.bilibili.com/video/BV1HJ411M7CM</a></li>
<li>盒子模型</li>
<li>CSS盒子模型与定位：<a href="https://www.bilibili.com/video/BV1P7411G7BW">https://www.bilibili.com/video/BV1P7411G7BW</a></li>
<li>Grid 布局</li>
<li>如何用grid：<a href="https://www.bilibili.com/video/BV14C4y1W7oA">https://www.bilibili.com/video/BV14C4y1W7oA</a></li>
<li>Flex 布局</li>
<li>Flex伸缩布局：<a href="https://www.bilibili.com/video/BV1BJ41197XE">https://www.bilibili.com/video/BV1BJ41197XE</a><h3 id="3-页面响应式布局设计"><a href="#3-页面响应式布局设计" class="headerlink" title="3. 页面响应式布局设计"></a>3. 页面响应式布局设计</h3><h3 id="六个案例学会响应式布局：https-www-bilibili-com-video-BV1ov411k7sm"><a href="#六个案例学会响应式布局：https-www-bilibili-com-video-BV1ov411k7sm" class="headerlink" title="六个案例学会响应式布局：https://www.bilibili.com/video/BV1ov411k7sm"></a>六个案例学会响应式布局：<a href="https://www.bilibili.com/video/BV1ov411k7sm">https://www.bilibili.com/video/BV1ov411k7sm</a></h3><h2 id="浏览器脚本语言"><a href="#浏览器脚本语言" class="headerlink" title="浏览器脚本语言"></a>浏览器脚本语言</h2>(JavaScript)<h3 id="1-JavaScript基础语法和知识"><a href="#1-JavaScript基础语法和知识" class="headerlink" title="1. JavaScript基础语法和知识"></a>1. JavaScript基础语法和知识</h3><h3 id="JavaScript基础语法：https-www-bilibili-com-video-BV1Sy4y1C7ha"><a href="#JavaScript基础语法：https-www-bilibili-com-video-BV1Sy4y1C7ha" class="headerlink" title="JavaScript基础语法：https://www.bilibili.com/video/BV1Sy4y1C7ha"></a>JavaScript基础语法：<a href="https://www.bilibili.com/video/BV1Sy4y1C7ha">https://www.bilibili.com/video/BV1Sy4y1C7ha</a></h3><h3 id="2-使用JavaScript-操作-DOM元素"><a href="#2-使用JavaScript-操作-DOM元素" class="headerlink" title="2. 使用JavaScript 操作 DOM元素"></a>2. 使用JavaScript 操作 DOM元素</h3><h3 id="JS必会的DOM-BOM操作：https-www-bilibili-com-video-BV1k4411w7sV"><a href="#JS必会的DOM-BOM操作：https-www-bilibili-com-video-BV1k4411w7sV" class="headerlink" title="JS必会的DOM BOM操作：https://www.bilibili.com/video/BV1k4411w7sV"></a>JS必会的DOM BOM操作：<a href="https://www.bilibili.com/video/BV1k4411w7sV">https://www.bilibili.com/video/BV1k4411w7sV</a></h3><h3 id="3-Ajax-异步请求相关知识学习"><a href="#3-Ajax-异步请求相关知识学习" class="headerlink" title="3. Ajax 异步请求相关知识学习"></a>3. Ajax 异步请求相关知识学习</h3><h3 id="Ajax入门到精通：https-www-bilibili-com-video-BV1WC4y1b78y"><a href="#Ajax入门到精通：https-www-bilibili-com-video-BV1WC4y1b78y" class="headerlink" title="Ajax入门到精通：https://www.bilibili.com/video/BV1WC4y1b78y"></a>Ajax入门到精通：<a href="https://www.bilibili.com/video/BV1WC4y1b78y">https://www.bilibili.com/video/BV1WC4y1b78y</a></h3><h3 id="4-ES6-以上版本-的JavaScript"><a href="#4-ES6-以上版本-的JavaScript" class="headerlink" title="4. ES6 以上版本 的JavaScript"></a>4. ES6 以上版本 的JavaScript</h3><h3 id="ES6-ES11新特性：https-www-bilibili-com-video-BV1uK411H7on"><a href="#ES6-ES11新特性：https-www-bilibili-com-video-BV1uK411H7on" class="headerlink" title="ES6-ES11新特性：https://www.bilibili.com/video/BV1uK411H7on"></a>ES6-ES11新特性：<a href="https://www.bilibili.com/video/BV1uK411H7on">https://www.bilibili.com/video/BV1uK411H7on</a></h3><h2 id="版本控制管理系统"><a href="#版本控制管理系统" class="headerlink" title="版本控制管理系统"></a>版本控制管理系统</h2>Version Control System<h3 id="1-Git的基本用法"><a href="#1-Git的基本用法" class="headerlink" title="1.  Git的基本用法"></a>1.  Git的基本用法</h3><h3 id="Git最新教程：https-www-bilibili-com-video-BV1FE411P7B3"><a href="#Git最新教程：https-www-bilibili-com-video-BV1FE411P7B3" class="headerlink" title="Git最新教程：https://www.bilibili.com/video/BV1FE411P7B3"></a>Git最新教程：<a href="https://www.bilibili.com/video/BV1FE411P7B3">https://www.bilibili.com/video/BV1FE411P7B3</a></h3><h3 id="2-相关平台-软件的使用"><a href="#2-相关平台-软件的使用" class="headerlink" title="2.  相关平台/软件的使用"></a>2.  相关平台/软件的使用</h3></li>
<li>GitHub</li>
<li>十分钟学会Github：<a href="https://www.bilibili.com/video/BV1yo4y1d7UK">https://www.bilibili.com/video/BV1yo4y1d7UK</a></li>
<li>GitLab</li>
<li>gitlab使用说明：<a href="https://www.bilibili.com/video/BV11E411x7Uv">https://www.bilibili.com/video/BV11E411x7Uv</a></li>
<li>Gitee</li>
<li>这个看中文网址就可以了，目前B站还没有很好的视频介绍<h2 id="网络安全相关知识"><a href="#网络安全相关知识" class="headerlink" title="网络安全相关知识"></a>网络安全相关知识</h2>Web Security Knowledge<h3 id="1-HTTPS-原理和使用"><a href="#1-HTTPS-原理和使用" class="headerlink" title="1. HTTPS 原理和使用"></a>1. HTTPS 原理和使用</h3><h3 id="你连HTTPS原理都不懂：https-www-bilibili-com-video-BV1Up4y1i7PG"><a href="#你连HTTPS原理都不懂：https-www-bilibili-com-video-BV1Up4y1i7PG" class="headerlink" title="你连HTTPS原理都不懂：https://www.bilibili.com/video/BV1Up4y1i7PG"></a>你连HTTPS原理都不懂：<a href="https://www.bilibili.com/video/BV1Up4y1i7PG">https://www.bilibili.com/video/BV1Up4y1i7PG</a></h3><h3 id="2-CORS-跨域请求和安全知识"><a href="#2-CORS-跨域请求和安全知识" class="headerlink" title="2. CORS 跨域请求和安全知识"></a>2. CORS 跨域请求和安全知识</h3><h3 id="什么是CORS：https-www-bilibili-com-video-BV1Kt411E76z"><a href="#什么是CORS：https-www-bilibili-com-video-BV1Kt411E76z" class="headerlink" title="什么是CORS：https://www.bilibili.com/video/BV1Kt411E76z"></a>什么是CORS：<a href="https://www.bilibili.com/video/BV1Kt411E76z">https://www.bilibili.com/video/BV1Kt411E76z</a></h3><h3 id="3-内容安全策略"><a href="#3-内容安全策略" class="headerlink" title="3. 内容安全策略"></a>3. 内容安全策略</h3><h3 id="网络渗透：https-www-bilibili-com-video-BV1kh411W7Vv"><a href="#网络渗透：https-www-bilibili-com-video-BV1kh411W7Vv" class="headerlink" title="网络渗透：https://www.bilibili.com/video/BV1kh411W7Vv"></a>网络渗透：<a href="https://www.bilibili.com/video/BV1kh411W7Vv">https://www.bilibili.com/video/BV1kh411W7Vv</a></h3><h3 id="4-OWASP-安全风险知识"><a href="#4-OWASP-安全风险知识" class="headerlink" title="4. OWASP 安全风险知识"></a>4. OWASP 安全风险知识</h3><h3 id="OWASP-TOP10：https-www-bilibili-com-video-BV1ey4y1V7Jj"><a href="#OWASP-TOP10：https-www-bilibili-com-video-BV1ey4y1V7Jj" class="headerlink" title="OWASP  TOP10：https://www.bilibili.com/video/BV1ey4y1V7Jj"></a>OWASP  TOP10：<a href="https://www.bilibili.com/video/BV1ey4y1V7Jj">https://www.bilibili.com/video/BV1ey4y1V7Jj</a></h3><h2 id="包管理工具"><a href="#包管理工具" class="headerlink" title="包管理工具"></a>包管理工具</h2>Package Managers<h3 id="1-npm"><a href="#1-npm" class="headerlink" title="1. npm"></a>1. npm</h3><h3 id="包管理工具：https-www-bilibili-com-video-BV1Dv411W7XP"><a href="#包管理工具：https-www-bilibili-com-video-BV1Dv411W7XP" class="headerlink" title="包管理工具：https://www.bilibili.com/video/BV1Dv411W7XP"></a>包管理工具：<a href="https://www.bilibili.com/video/BV1Dv411W7XP">https://www.bilibili.com/video/BV1Dv411W7XP</a></h3><h3 id="2-yarn"><a href="#2-yarn" class="headerlink" title="2. yarn"></a>2. yarn</h3><h3 id="Yarn入门：https-www-imooc-com-learn-766-B站没有，推荐这个免费"><a href="#Yarn入门：https-www-imooc-com-learn-766-B站没有，推荐这个免费" class="headerlink" title="Yarn入门：https://www.imooc.com/learn/766  (B站没有，推荐这个免费)"></a>Yarn入门：<a href="https://www.imooc.com/learn/766">https://www.imooc.com/learn/766</a>  (B站没有，推荐这个免费)</h3><h2 id="CSS-预处理-语言"><a href="#CSS-预处理-语言" class="headerlink" title="CSS 预处理 语言"></a>CSS 预处理 语言</h2>CSS Preprocessors<h3 id="1-Sass"><a href="#1-Sass" class="headerlink" title="1. Sass"></a>1. Sass</h3><h3 id="SCSS从入门到实战：https-www-bilibili-com-video-BV1Zg4y1v75U"><a href="#SCSS从入门到实战：https-www-bilibili-com-video-BV1Zg4y1v75U" class="headerlink" title="SCSS从入门到实战：https://www.bilibili.com/video/BV1Zg4y1v75U"></a>SCSS从入门到实战：<a href="https://www.bilibili.com/video/BV1Zg4y1v75U">https://www.bilibili.com/video/BV1Zg4y1v75U</a></h3><h3 id="2-PostCSS"><a href="#2-PostCSS" class="headerlink" title="2. PostCSS"></a>2. PostCSS</h3><h3 id="B站没太好的视频，建议买书《深入PostCSS-Web设计》"><a href="#B站没太好的视频，建议买书《深入PostCSS-Web设计》" class="headerlink" title="B站没太好的视频，建议买书《深入PostCSS Web设计》"></a>B站没太好的视频，建议买书《深入PostCSS Web设计》</h3><h3 id="3-Less"><a href="#3-Less" class="headerlink" title="3. Less"></a>3. Less</h3><h3 id="前端less教程：https-www-bilibili-com-video-BV1YW411T7vd"><a href="#前端less教程：https-www-bilibili-com-video-BV1YW411T7vd" class="headerlink" title="前端less教程：https://www.bilibili.com/video/BV1YW411T7vd"></a>前端less教程：<a href="https://www.bilibili.com/video/BV1YW411T7vd">https://www.bilibili.com/video/BV1YW411T7vd</a></h3><h2 id="构建工具"><a href="#构建工具" class="headerlink" title="构建工具"></a>构建工具</h2>Build Tools<h3 id="1-任务执行命令"><a href="#1-任务执行命令" class="headerlink" title="1. 任务执行命令"></a>1. 任务执行命令</h3>[Task Runners]</li>
<li>npm scripts</li>
<li>npm包管理应用：<a href="https://www.bilibili.com/video/BV1Dv411W7XP">https://www.bilibili.com/video/BV1Dv411W7XP</a></li>
<li>Gulp</li>
<li>Gulp入门：<a href="https://www.bilibili.com/video/BV1yA411s72G">https://www.bilibili.com/video/BV1yA411s72G</a><h3 id="2-打包工具"><a href="#2-打包工具" class="headerlink" title="2. 打包工具"></a>2. 打包工具</h3></li>
<li>Webpack</li>
<li>Webpack从入门到精通：<a href="https://www.bilibili.com/video/BV1e7411j7T5">https://www.bilibili.com/video/BV1e7411j7T5</a></li>
<li>Parcel</li>
<li>Parcel初体验：<a href="https://www.bilibili.com/video/BV1Pa4y147Kf">https://www.bilibili.com/video/BV1Pa4y147Kf</a><h3 id="3-代码格式化工具"><a href="#3-代码格式化工具" class="headerlink" title="3. 代码格式化工具"></a>3. 代码格式化工具</h3></li>
<li>Prettier</li>
<li>Prettier和ESLint使用：<a href="https://www.bilibili.com/video/BV183411r7YK">https://www.bilibili.com/video/BV183411r7YK</a></li>
<li>ESLint</li>
<li>ESLint基础入门：<a href="https://space.bilibili.com/390120104/search/video?keyword=ESLint">https://space.bilibili.com/390120104/search/video?keyword=ESLint</a><h2 id="三大前端框架"><a href="#三大前端框架" class="headerlink" title="三大前端框架"></a>三大前端框架</h2>Web Framework<h3 id="React-js"><a href="#React-js" class="headerlink" title="React.js"></a>React.js</h3><h3 id="React基础视频：https-www-bilibili-com-video-BV1g4411i7po"><a href="#React基础视频：https-www-bilibili-com-video-BV1g4411i7po" class="headerlink" title="React基础视频：https://www.bilibili.com/video/BV1g4411i7po"></a>React基础视频：<a href="https://www.bilibili.com/video/BV1g4411i7po">https://www.bilibili.com/video/BV1g4411i7po</a></h3><h3 id="React全家桶：https-www-bilibili-com-video-BV1wy4y1D7JT"><a href="#React全家桶：https-www-bilibili-com-video-BV1wy4y1D7JT" class="headerlink" title="React全家桶：https://www.bilibili.com/video/BV1wy4y1D7JT"></a>React全家桶：<a href="https://www.bilibili.com/video/BV1wy4y1D7JT">https://www.bilibili.com/video/BV1wy4y1D7JT</a></h3><h3 id="React实战博客：https-www-bilibili-com-video-BV1CJ411377B"><a href="#React实战博客：https-www-bilibili-com-video-BV1CJ411377B" class="headerlink" title="React实战博客：https://www.bilibili.com/video/BV1CJ411377B"></a>React实战博客：<a href="https://www.bilibili.com/video/BV1CJ411377B">https://www.bilibili.com/video/BV1CJ411377B</a></h3><h3 id="React商城实战：https-www-bilibili-com-video-BV1i5411c7xp"><a href="#React商城实战：https-www-bilibili-com-video-BV1i5411c7xp" class="headerlink" title="React商城实战：https://www.bilibili.com/video/BV1i5411c7xp"></a>React商城实战：<a href="https://www.bilibili.com/video/BV1i5411c7xp">https://www.bilibili.com/video/BV1i5411c7xp</a></h3><h3 id="Vue-js"><a href="#Vue-js" class="headerlink" title="Vue.js"></a>Vue.js</h3><h3 id="Vue2全家桶：https-www-jspang-com-detailed-id-57"><a href="#Vue2全家桶：https-www-jspang-com-detailed-id-57" class="headerlink" title="Vue2全家桶：https://www.jspang.com/detailed?id=57"></a>Vue2全家桶：<a href="https://www.jspang.com/detailed?id=57">https://www.jspang.com/detailed?id=57</a></h3><h3 id="Vue3全家桶：https-www-jspang-com-detailed-id-67"><a href="#Vue3全家桶：https-www-jspang-com-detailed-id-67" class="headerlink" title="Vue3全家桶：https://www.jspang.com/detailed?id=67"></a>Vue3全家桶：<a href="https://www.jspang.com/detailed?id=67">https://www.jspang.com/detailed?id=67</a></h3><h3 id="vuejs从入门到精通：https-www-bilibili-com-video-BV1Zy4y1K7SH"><a href="#vuejs从入门到精通：https-www-bilibili-com-video-BV1Zy4y1K7SH" class="headerlink" title="vuejs从入门到精通：https://www.bilibili.com/video/BV1Zy4y1K7SH"></a>vuejs从入门到精通：<a href="https://www.bilibili.com/video/BV1Zy4y1K7SH">https://www.bilibili.com/video/BV1Zy4y1K7SH</a></h3><h3 id="Angular"><a href="#Angular" class="headerlink" title="Angular"></a>Angular</h3><h3 id="Angular基础：https-www-bilibili-com-video-BV1Wx411R7qt"><a href="#Angular基础：https-www-bilibili-com-video-BV1Wx411R7qt" class="headerlink" title="Angular基础：https://www.bilibili.com/video/BV1Wx411R7qt"></a>Angular基础：<a href="https://www.bilibili.com/video/BV1Wx411R7qt">https://www.bilibili.com/video/BV1Wx411R7qt</a></h3><h2 id="Web-组件化编程"><a href="#Web-组件化编程" class="headerlink" title="Web 组件化编程"></a>Web 组件化编程</h2>Web Components<h3 id="HTML-Templates"><a href="#HTML-Templates" class="headerlink" title="HTML Templates"></a>HTML Templates</h3><h3 id="Custom-Elements"><a href="#Custom-Elements" class="headerlink" title="Custom Elements"></a>Custom Elements</h3><h3 id="Shadow-DOM"><a href="#Shadow-DOM" class="headerlink" title="Shadow DOM"></a>Shadow DOM</h3><h3 id="概要-此部分内容没有找到合适视频"><a href="#概要-此部分内容没有找到合适视频" class="headerlink" title="概要: 此部分内容没有找到合适视频"></a>概要: 此部分内容没有找到合适视频</h3><h2 id="CSS-相关框架"><a href="#CSS-相关框架" class="headerlink" title="CSS 相关框架"></a>CSS 相关框架</h2>CSS Frameworks<h3 id="BootStrap"><a href="#BootStrap" class="headerlink" title="BootStrap"></a>BootStrap</h3><h3 id="一周学会BootStrap：https-www-bilibili-com-video-BV1Lx411v73k"><a href="#一周学会BootStrap：https-www-bilibili-com-video-BV1Lx411v73k" class="headerlink" title="一周学会BootStrap：https://www.bilibili.com/video/BV1Lx411v73k"></a>一周学会BootStrap：<a href="https://www.bilibili.com/video/BV1Lx411v73k">https://www.bilibili.com/video/BV1Lx411v73k</a></h3><h3 id="Material-UI"><a href="#Material-UI" class="headerlink" title="Material UI"></a>Material UI</h3><h3 id="Material-UI入门教程：https-www-bilibili-com-video-BV12J411s75b"><a href="#Material-UI入门教程：https-www-bilibili-com-video-BV12J411s75b" class="headerlink" title="Material  UI入门教程：https://www.bilibili.com/video/BV12J411s75b"></a>Material  UI入门教程：<a href="https://www.bilibili.com/video/BV12J411s75b">https://www.bilibili.com/video/BV12J411s75b</a></h3><h3 id="Materialize-CSS"><a href="#Materialize-CSS" class="headerlink" title="Materialize CSS"></a>Materialize CSS</h3><h3 id="Materialize-CSS-Crash-Course：https-www-bilibili-com-video-BV1gx411h7Y5"><a href="#Materialize-CSS-Crash-Course：https-www-bilibili-com-video-BV1gx411h7Y5" class="headerlink" title="Materialize CSS Crash Course：https://www.bilibili.com/video/BV1gx411h7Y5"></a>Materialize CSS Crash Course：<a href="https://www.bilibili.com/video/BV1gx411h7Y5">https://www.bilibili.com/video/BV1gx411h7Y5</a></h3><h3 id="ReactStrap"><a href="#ReactStrap" class="headerlink" title="ReactStrap"></a>ReactStrap</h3><h2 id="JavaScript-语法糖"><a href="#JavaScript-语法糖" class="headerlink" title="JavaScript 语法糖"></a>JavaScript 语法糖</h2>Type Checkers<h3 id="TypeScript"><a href="#TypeScript" class="headerlink" title="TypeScript"></a>TypeScript</h3><h3 id="TypeScript从入门到精通：https-www-bilibili-com-video-BV1qV41167VD"><a href="#TypeScript从入门到精通：https-www-bilibili-com-video-BV1qV41167VD" class="headerlink" title="TypeScript从入门到精通：https://www.bilibili.com/video/BV1qV41167VD"></a>TypeScript从入门到精通：<a href="https://www.bilibili.com/video/BV1qV41167VD">https://www.bilibili.com/video/BV1qV41167VD</a></h3><h3 id="Flow"><a href="#Flow" class="headerlink" title="Flow"></a>Flow</h3><h2 id="服务端渲染"><a href="#服务端渲染" class="headerlink" title="服务端渲染"></a>服务端渲染</h2>Server Side  Rendering （SSR）<h3 id="React-js-1"><a href="#React-js-1" class="headerlink" title="React.js"></a>React.js</h3></li>
<li>Next.js</li>
<li>Next.js入门教程：<a href="https://www.bilibili.com/video/BV13441117KK">https://www.bilibili.com/video/BV13441117KK</a></li>
<li>GatsbyJS</li>
<li> GatsbyJS 实战：<a href="https://www.bilibili.com/video/BV1i4411T7AR">https://www.bilibili.com/video/BV1i4411T7AR</a> （英文）<h3 id="Vue-js-1"><a href="#Vue-js-1" class="headerlink" title="Vue.js"></a>Vue.js</h3></li>
<li>Nuxt.js</li>
<li>Nuxt.js入门：<a href="https://www.bilibili.com/video/BV1Xt41117Kg">https://www.bilibili.com/video/BV1Xt41117Kg</a><h3 id="Angular-1"><a href="#Angular-1" class="headerlink" title="Angular"></a>Angular</h3></li>
<li>Universal<h2 id="图形化编程"><a href="#图形化编程" class="headerlink" title="图形化编程"></a>图形化编程</h2>GraphQL<h3 id="Cocos-Creator"><a href="#Cocos-Creator" class="headerlink" title="Cocos Creator"></a>Cocos Creator</h3><h3 id="Cocos-图形游戏开发：https-www-bilibili-com-video-BV1sA411Y7x4"><a href="#Cocos-图形游戏开发：https-www-bilibili-com-video-BV1sA411Y7x4" class="headerlink" title="Cocos 图形游戏开发：https://www.bilibili.com/video/BV1sA411Y7x4"></a>Cocos 图形游戏开发：<a href="https://www.bilibili.com/video/BV1sA411Y7x4">https://www.bilibili.com/video/BV1sA411Y7x4</a></h3><h3 id="Three-js"><a href="#Three-js" class="headerlink" title="Three.js"></a>Three.js</h3><h3 id="Three-js基础教程-英文：https-www-bilibili-com-video-BV1ks411W78i"><a href="#Three-js基础教程-英文：https-www-bilibili-com-video-BV1ks411W78i" class="headerlink" title="Three.js基础教程-英文：https://www.bilibili.com/video/BV1ks411W78i"></a>Three.js基础教程-英文：<a href="https://www.bilibili.com/video/BV1ks411W78i">https://www.bilibili.com/video/BV1ks411W78i</a></h3><h3 id="Three-js教程：https-www-bilibili-com-video-BV1va4y1p7QB"><a href="#Three-js教程：https-www-bilibili-com-video-BV1va4y1p7QB" class="headerlink" title="Three.js教程：https://www.bilibili.com/video/BV1va4y1p7QB"></a>Three.js教程：<a href="https://www.bilibili.com/video/BV1va4y1p7QB">https://www.bilibili.com/video/BV1va4y1p7QB</a></h3><h2 id="静态站点生成器"><a href="#静态站点生成器" class="headerlink" title="静态站点生成器"></a>静态站点生成器</h2>Static Site Generators<h3 id="Next-js"><a href="#Next-js" class="headerlink" title="Next.js"></a>Next.js</h3><h3 id="Next-js入门教程：https-www-bilibili-com-video-BV13441117KK"><a href="#Next-js入门教程：https-www-bilibili-com-video-BV13441117KK" class="headerlink" title="Next.js入门教程：https://www.bilibili.com/video/BV13441117KK"></a>Next.js入门教程：<a href="https://www.bilibili.com/video/BV13441117KK">https://www.bilibili.com/video/BV13441117KK</a></h3><h3 id="GatsbyJS"><a href="#GatsbyJS" class="headerlink" title="GatsbyJS"></a>GatsbyJS</h3><h3 id="GatsbyJS-实战：https-www-bilibili-com-video-BV1i4411T7AR-（英文）"><a href="#GatsbyJS-实战：https-www-bilibili-com-video-BV1i4411T7AR-（英文）" class="headerlink" title="GatsbyJS 实战：https://www.bilibili.com/video/BV1i4411T7AR （英文）"></a>GatsbyJS 实战：<a href="https://www.bilibili.com/video/BV1i4411T7AR">https://www.bilibili.com/video/BV1i4411T7AR</a> （英文）</h3><h3 id="Nuxt-js"><a href="#Nuxt-js" class="headerlink" title="Nuxt.js"></a>Nuxt.js</h3><h3 id="Nuxt-js入门：https-www-bilibili-com-video-BV1Xt41117Kg"><a href="#Nuxt-js入门：https-www-bilibili-com-video-BV1Xt41117Kg" class="headerlink" title="Nuxt.js入门：https://www.bilibili.com/video/BV1Xt41117Kg"></a>Nuxt.js入门：<a href="https://www.bilibili.com/video/BV1Xt41117Kg">https://www.bilibili.com/video/BV1Xt41117Kg</a></h3><h3 id="Vuepress"><a href="#Vuepress" class="headerlink" title="Vuepress"></a>Vuepress</h3><h3 id="Vuepress入门到精通：https-www-bilibili-com-video-BV1vb411m7NY"><a href="#Vuepress入门到精通：https-www-bilibili-com-video-BV1vb411m7NY" class="headerlink" title="Vuepress入门到精通：https://www.bilibili.com/video/BV1vb411m7NY"></a>Vuepress入门到精通：<a href="https://www.bilibili.com/video/BV1vb411m7NY">https://www.bilibili.com/video/BV1vb411m7NY</a></h3><h3 id="Hugo"><a href="#Hugo" class="headerlink" title="Hugo"></a>Hugo</h3><h3 id="10分钟搭建个人网站：https-www-bilibili-com-video-BV1x64y117PX"><a href="#10分钟搭建个人网站：https-www-bilibili-com-video-BV1x64y117PX" class="headerlink" title="10分钟搭建个人网站：https://www.bilibili.com/video/BV1x64y117PX"></a>10分钟搭建个人网站：<a href="https://www.bilibili.com/video/BV1x64y117PX">https://www.bilibili.com/video/BV1x64y117PX</a></h3><h2 id="移动App开发"><a href="#移动App开发" class="headerlink" title="移动App开发"></a>移动App开发</h2>Mobile Applications<h3 id="React-Native"><a href="#React-Native" class="headerlink" title="React  Native"></a>React  Native</h3><h3 id="ReactNatvie基础：https-www-bilibili-com-video-BV1Eg4y16735"><a href="#ReactNatvie基础：https-www-bilibili-com-video-BV1Eg4y16735" class="headerlink" title="ReactNatvie基础：https://www.bilibili.com/video/BV1Eg4y16735"></a>ReactNatvie基础：<a href="https://www.bilibili.com/video/BV1Eg4y16735">https://www.bilibili.com/video/BV1Eg4y16735</a></h3><h3 id="ReactNatvie实战：https-www-bilibili-com-video-BV15K411s75p"><a href="#ReactNatvie实战：https-www-bilibili-com-video-BV15K411s75p" class="headerlink" title="ReactNatvie实战：https://www.bilibili.com/video/BV15K411s75p"></a>ReactNatvie实战：<a href="https://www.bilibili.com/video/BV15K411s75p">https://www.bilibili.com/video/BV15K411s75p</a></h3><h3 id="UniApp"><a href="#UniApp" class="headerlink" title="UniApp"></a>UniApp</h3><h3 id="Uni-App从入门到实战：https-www-bilibili-com-video-BV1BJ411W7pX"><a href="#Uni-App从入门到实战：https-www-bilibili-com-video-BV1BJ411W7pX" class="headerlink" title="Uni-App从入门到实战：https://www.bilibili.com/video/BV1BJ411W7pX"></a>Uni-App从入门到实战：<a href="https://www.bilibili.com/video/BV1BJ411W7pX">https://www.bilibili.com/video/BV1BJ411W7pX</a></h3><h3 id="Uni-App美团外卖：https-www-bilibili-com-video-BV1Zt4y117RR"><a href="#Uni-App美团外卖：https-www-bilibili-com-video-BV1Zt4y117RR" class="headerlink" title="Uni-App美团外卖：https://www.bilibili.com/video/BV1Zt4y117RR"></a>Uni-App美团外卖：<a href="https://www.bilibili.com/video/BV1Zt4y117RR">https://www.bilibili.com/video/BV1Zt4y117RR</a></h3><h3 id="Flutter"><a href="#Flutter" class="headerlink" title="Flutter"></a>Flutter</h3><h3 id="Flutter基础：https-www-bilibili-com-video-BV15t411U7yf"><a href="#Flutter基础：https-www-bilibili-com-video-BV15t411U7yf" class="headerlink" title="Flutter基础：https://www.bilibili.com/video/BV15t411U7yf"></a>Flutter基础：<a href="https://www.bilibili.com/video/BV15t411U7yf">https://www.bilibili.com/video/BV15t411U7yf</a></h3><h3 id="Flutter实战：https-www-bilibili-com-video-BV1kt411B7mu"><a href="#Flutter实战：https-www-bilibili-com-video-BV1kt411B7mu" class="headerlink" title="Flutter实战：https://www.bilibili.com/video/BV1kt411B7mu"></a>Flutter实战：<a href="https://www.bilibili.com/video/BV1kt411B7mu">https://www.bilibili.com/video/BV1kt411B7mu</a></h3><h3 id="Ionic"><a href="#Ionic" class="headerlink" title="Ionic"></a>Ionic</h3><h3 id="Ionic入门：https-www-bilibili-com-video-BV1Ub41117q5"><a href="#Ionic入门：https-www-bilibili-com-video-BV1Ub41117q5" class="headerlink" title="Ionic入门：https://www.bilibili.com/video/BV1Ub41117q5"></a>Ionic入门：<a href="https://www.bilibili.com/video/BV1Ub41117q5">https://www.bilibili.com/video/BV1Ub41117q5</a></h3><h2 id="桌面应用开发"><a href="#桌面应用开发" class="headerlink" title="桌面应用开发"></a>桌面应用开发</h2>Desktop Applications<h3 id="Electron"><a href="#Electron" class="headerlink" title="Electron"></a>Electron</h3><h3 id="Electron入门：https-www-bilibili-com-video-BV1QB4y1F722"><a href="#Electron入门：https-www-bilibili-com-video-BV1QB4y1F722" class="headerlink" title="Electron入门：https://www.bilibili.com/video/BV1QB4y1F722"></a>Electron入门：<a href="https://www.bilibili.com/video/BV1QB4y1F722">https://www.bilibili.com/video/BV1QB4y1F722</a></h3><h3 id="Electron基础：https-www-bilibili-com-video-BV177411s7Lt"><a href="#Electron基础：https-www-bilibili-com-video-BV177411s7Lt" class="headerlink" title="Electron基础：https://www.bilibili.com/video/BV177411s7Lt"></a>Electron基础：<a href="https://www.bilibili.com/video/BV177411s7Lt">https://www.bilibili.com/video/BV177411s7Lt</a></h3><h2 id="学到此处，基础部分学习已经全部完成。"><a href="#学到此处，基础部分学习已经全部完成。" class="headerlink" title="学到此处，基础部分学习已经全部完成。"></a>学到此处，基础部分学习已经全部完成。</h2><h2 id="学习重要程度说明"><a href="#学习重要程度说明" class="headerlink" title="学习重要程度说明"></a>学习重要程度说明</h2><h3 id="红色-精通：非常重要，需要达到精通、并有实战经验"><a href="#红色-精通：非常重要，需要达到精通、并有实战经验" class="headerlink" title="红色-精通：非常重要，需要达到精通、并有实战经验"></a>红色-精通：非常重要，需要达到精通、并有实战经验</h3><h3 id="蓝色-熟练：需要达到熟练，达到一定的基础练习量"><a href="#蓝色-熟练：需要达到熟练，达到一定的基础练习量" class="headerlink" title="蓝色-熟练：需要达到熟练，达到一定的基础练习量"></a>蓝色-熟练：需要达到熟练，达到一定的基础练习量</h3><h3 id="灰色-了解：需要了解，把整个课程听完，作几个小练习即可"><a href="#灰色-了解：需要了解，把整个课程听完，作几个小练习即可" class="headerlink" title="灰色-了解：需要了解，把整个课程听完，作几个小练习即可"></a>灰色-了解：需要了解，把整个课程听完，作几个小练习即可</h3><h3 id="视频学习地址：复制后浏览器打开就可以学习"><a href="#视频学习地址：复制后浏览器打开就可以学习" class="headerlink" title="视频学习地址：复制后浏览器打开就可以学习"></a>视频学习地址：复制后浏览器打开就可以学习</h3></li>
</ul>
<h2 id="图："><a href="#图：" class="headerlink" title="图："></a>图：</h2><p><img src="https://i.loli.net/2021/11/05/KgMmkqE6HsZzNfe.jpg"></p>
]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>规划</tag>
      </tags>
  </entry>
  <entry>
    <title>Java面向对象之关键字（二）static</title>
    <url>/2021/11/03/Java%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E4%B9%8B%E5%85%B3%E9%94%AE%E5%AD%97%EF%BC%88%E4%BA%8C%EF%BC%89static/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><blockquote>
<p>参考价值：已完结、可参考、等待重置</p>
</blockquote>
<hr>
<p><strong>目录：</strong></p>
<ol>
<li><strong>为什么引入了static关键字？</strong></li>
<li><strong>怎么使用static关键字？</strong></li>
<li><strong>static的原理是什么？</strong></li>
<li><strong>什么时候使用static？</strong></li>
</ol>
<hr>
<h2 id="为什么引入static关键字？"><a href="#为什么引入static关键字？" class="headerlink" title="为什么引入static关键字？"></a>为什么引入static关键字？</h2><p>我们都知道，每new一个对象都会把其属性和方法在内存里加载一遍。但是如果某个属性所有的对象都一样，那么每new一个对象都把这个属性加载依次就会产生不小的内存浪费。比如：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">staff</span></span>&#123;</span><br><span class="line">    <span class="comment">//属性:</span></span><br><span class="line">    String name;</span><br><span class="line">    <span class="keyword">int</span> age;</span><br><span class="line">    String nation;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>如果我们声明了一个staff类来表示公司的员工，公司200个员工，都是中国人难道我们要在内存里加载200个nation=CHN吗？显然不可能。</p>
<p>为了解决这个问题，static关键字应运而生。</p>
<h2 id="怎么使用static关键字？"><a href="#怎么使用static关键字？" class="headerlink" title="怎么使用static关键字？"></a>怎么使用static关键字？</h2><ul>
<li><p><strong>static的作用：</strong></p>
<p>static能把修饰的类的成员变成所有对象共用的，只需要在内存中加载一次。</p>
</li>
<li><p><strong>static的修饰范围：</strong></p>
<p>属性、方法、代码块、内部类</p>
</li>
<li><p><strong>static修饰属性:</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">staff</span></span>&#123;</span><br><span class="line">    <span class="comment">//属性:</span></span><br><span class="line">    String name;</span><br><span class="line">    <span class="keyword">int</span> age;</span><br><span class="line">    <span class="keyword">static</span> String nation;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>被static修饰的属性可以被类和所有的对象调用。</p>
</li>
<li><p><strong>static修饰方法：</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">staff</span></span>&#123;</span><br><span class="line">    <span class="comment">//属性:</span></span><br><span class="line">    String name;</span><br><span class="line">    <span class="keyword">int</span> age;</span><br><span class="line">    <span class="keyword">static</span> String nation;</span><br><span class="line">	<span class="comment">//方法：</span></span><br><span class="line">    <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">talk</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;我说汉语&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<p>被static修饰的方法可以被类和所有的对象调用。</p>
<p>static修饰的方法只能调用被static修饰的方法、属性或者其它类成员。</p>
<p>static修饰的方法不能使用this关键字和supper关键字</p>
</li>
</ul>
<h2 id="static的原理是什么？"><a href="#static的原理是什么？" class="headerlink" title="static的原理是什么？"></a>static的原理是什么？</h2><p>我们知道类声明的时候并加载到<strong>堆</strong>里面但是会被加载到<strong>方法区</strong>里面。当类没有用的时候就会被垃圾回收。而建立对象时，对象会被加载到<strong>堆</strong>里面，当<strong>栈</strong>里没有指向对象的时候，对象就会被回收。</p>
<p>而被static修饰的类的成员就会和类一起加载在<strong>方法区</strong>，知道类被垃圾回收，static修饰的成员才会跟着被回收。这也是为什么static修饰的方法不能调用未被static修饰的成员，因为被static修饰的方法被加载的时候，对象还没有创建，内存中根本就没有未被static修饰的成员，调用也就无从谈起。</p>
<h2 id="什么时候使用static？"><a href="#什么时候使用static？" class="headerlink" title="什么时候使用static？"></a>什么时候使用static？</h2><p>static的作用就是节省内存空间，因此在程序复杂度不提高的情况下尽量都用static修饰，因此就衍生了以下原则：</p>
<ol>
<li>所有对象都相同的属性用static修饰</li>
<li>未直接或间接调用未被static修饰的成员的方法用static修饰</li>
<li>Utility工具类里的所有方法用static修饰</li>
</ol>
]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>学习笔记</tag>
        <tag>java面向对象</tag>
      </tags>
  </entry>
  <entry>
    <title>Java面向对象之多态性的理解</title>
    <url>/2021/10/30/Java%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E4%B9%8B%E5%A4%9A%E6%80%81%E6%80%A7%E7%9A%84%E7%90%86%E8%A7%A3/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><blockquote>
<p>前言：</p>
<p>其实我一直不太敢写这篇文章，原因是多态性牵扯的比较多，不太好写。</p>
<p>多态性本身其实很简单，其定义只有一句。但掌握多态性却并不容易，因为它本身看起来没什么用，却是很多结构的基石。比如接口和抽象类。因此，多态性的应用是非常广泛的。</p>
<p>本身没什么用，但十分重要，应用还十分广泛这就导致多态性有种“形散神聚”的意思，不太好学</p>
</blockquote>
<blockquote>
<p>参考价值：已完结、但不一定正确、仅供参考、但不能作为标准答案、等待重置</p>
</blockquote>
<hr>
<h2 id="目录："><a href="#目录：" class="headerlink" title="目录："></a>目录：</h2><ol>
<li><p><strong>什么是多态性？</strong></p>
</li>
<li><p><strong>多态性和继承有什么关系？</strong></p>
</li>
<li><p><strong>多态性怎么使用？</strong></p>
</li>
</ol>
<h2 id="什么是多态性"><a href="#什么是多态性" class="headerlink" title="什么是多态性?"></a>什么是多态性?</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">What</span> </span>&#123;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">		Person p1 = <span class="keyword">new</span> Chinese();<span class="comment">//多态性</span></span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span></span>&#123;</span><br><span class="line">	<span class="comment">//属性：</span></span><br><span class="line">	String name;</span><br><span class="line">	String sex;</span><br><span class="line">	<span class="keyword">int</span> age;</span><br><span class="line">	<span class="comment">//方法：</span></span><br><span class="line">	<span class="function"><span class="keyword">void</span> <span class="title">talk</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		System.out.println(<span class="string">&quot;人会说话&quot;</span>);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Chinese</span> <span class="keyword">extends</span> <span class="title">Person</span></span>&#123;</span><br><span class="line">	<span class="comment">//方法：</span></span><br><span class="line">	<span class="function"><span class="keyword">void</span> <span class="title">talk</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		System.out.println(<span class="string">&quot;中国人会说汉语！&quot;</span>);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>==Person p1 = new Chinese();==就是多态性(也被称为对象的<strong>多态性</strong>)。</p>
<p>简单来说就是：声明一个父类的引用变量指向子类的对象。</p>
<h2 id="多态和继承有什么关系？"><a href="#多态和继承有什么关系？" class="headerlink" title="多态和继承有什么关系？"></a>多态和继承有什么关系？</h2><p>继承是多态性的基石。或者说继承的方法重写是多态的基石</p>
<h2 id="怎么使用多态性？"><a href="#怎么使用多态性？" class="headerlink" title="怎么使用多态性？"></a>怎么使用多态性？</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">What</span> </span>&#123;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">		Person p1 = <span class="keyword">new</span> Chinese();<span class="comment">//多态性</span></span><br><span class="line">		p1.talk();<span class="comment">//使用</span></span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span></span>&#123;</span><br><span class="line">	<span class="comment">//属性：</span></span><br><span class="line">	String name;</span><br><span class="line">	String sex;</span><br><span class="line">	<span class="keyword">int</span> age;</span><br><span class="line">	<span class="comment">//方法：</span></span><br><span class="line">	<span class="function"><span class="keyword">void</span> <span class="title">talk</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		System.out.println(<span class="string">&quot;人会说话&quot;</span>);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Chinese</span> <span class="keyword">extends</span> <span class="title">Person</span></span>&#123;</span><br><span class="line">	<span class="comment">//方法：</span></span><br><span class="line">	<span class="function"><span class="keyword">void</span> <span class="title">talk</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		System.out.println(<span class="string">&quot;中国人会说汉语！&quot;</span>);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><img src="https://i.loli.net/2021/10/30/s3JXQ97SnYeyMqK.jpg"></p>
<p>多态性的使用也被称为<strong>虚拟方法</strong>的使用。</p>
<ul>
<li><strong>要点：</strong><ol>
<li>类型是父类</li>
<li>对象是子类</li>
<li>调用重写的方法调用的是子类的方法</li>
</ol>
</li>
</ul>
]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>学习笔记</tag>
        <tag>java面向对象</tag>
      </tags>
  </entry>
  <entry>
    <title>All My Life 计划</title>
    <url>/2021/10/28/All-My-Life-%E8%AE%A1%E5%88%92/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><blockquote>
<p>参考价值：未完成、个人计划、没有参考价值</p>
</blockquote>
<h2 id="All-My-Life-计划的大概描述："><a href="#All-My-Life-计划的大概描述：" class="headerlink" title="All My Life 计划的大概描述："></a>All My Life 计划的大概描述：</h2><p>在大二暑假之前，设计并搭建一个能够记录自己<strong>所有生活信息</strong>的网站——<strong>All My Life</strong>。并以此作为自己大二暑假找暑期实习的项目经验。并且，在大三对网站的部分进行性能优化，作为大四实习的主要项目经验之一。</p>
<h2 id="All-My-Life-计划的起因："><a href="#All-My-Life-计划的起因：" class="headerlink" title="All My  Life 计划的起因："></a>All My  Life 计划的起因：</h2><ol>
<li><p><strong>调用各种组件搭建的傻瓜式博客不能满足当下的需求：</strong></p>
<p>我在大一暑假期间搭建了一个傻瓜式的静态博客，总体来说还算不错，但是各个方面的槽点很多。</p>
<p><img src="https://i.loli.net/2021/10/28/yXI8vL172QkMmao.jpg"></p>
<p><img src="https://i.loli.net/2021/10/28/JWMfDhdGrn1C49z.jpg"></p>
<p>随便列举几个：</p>
<ol>
<li><p>文章分区鸡肋：</p>
<p>目前这个傻瓜式博客只能通过分类和标签来对文章进行分区。当各个类型的文章较多时，这种简单的分类会显得特别鸡肋，基本只能通过搜索功能查找文章，让人脑壳疼。</p>
<p>我理想当中的分类应该是像B站那样分为科技区、知识区、搞笑区（鬼畜区）、生活区、游戏区、电影区、音乐区、番剧区、吐槽区（牢骚区），每一分区下分为视频和专栏等。不同的是B站存储的是不同人的生活。而All My Life存储的是一个人的生活信息。</p>
</li>
<li><p>文章显示让人难受：</p>
<ul>
<li><p>可能是个人审美原因，这个标题显示看多了真的让我头疼</p>
<p><img src="https://i.loli.net/2021/10/28/QYTzj5qLmScIG2s.jpg"></p>
<p>相比之下，CSDN的标题显示就要好很多。</p>
<p><img src="https://i.loli.net/2021/10/28/p3ROoZdwrvqhx2Y.jpg"></p>
</li>
<li><p>代码块显示拉跨：</p>
<p>这个傻瓜式博客的代码块显示让我一直很难受。</p>
<p><img src="https://i.loli.net/2021/10/28/DXogmOCUNbknRq5.jpg"></p>
<p>我心目中的代码块显示是这样的：</p>
<p><img src="https://i.loli.net/2021/10/28/wP8LY7lUnDKqBx4.jpg"></p>
</li>
</ul>
</li>
</ol>
<p>还有其他各种槽点，我就不一一列举了。</p>
<p>一开始我还想直接改源码，但随着后来各种不满意越来越多，我反而懒得改了。与其去看别人的源码一点点去改（看别人的源码好头疼），还不如自己写一个网站。而且自己写的网站还可以作为一个项目写到简历上。</p>
</li>
<li><p><strong>客观需求：</strong></p>
<ol>
<li><p>目前确实需要一个项目来辅助知识的学习：</p>
<p>我的学习方式是 <em>入门-&gt;实战-&gt;深度学习-&gt;优化代码-&gt;写博客</em> 这样的方式。比如说：我在学习面向对象期间（还没结束）就写了<strong>4000+<strong>行的代码以及</strong>27.624k</strong>字的博客。</p>
<p><img src="https://i.loli.net/2021/10/28/ctXu8yFl2UnfhOs.jpg"></p>
<p>因此，在大二寒假以及大二下学期的学习当中，我需要一个可以涵盖我所有所需的学习知识点的较大型项目。并且这个项目能够支持我在大三深挖底层熟悉各种技术的需求，也就是有优化的必要。</p>
</li>
<li><p>大二暑期实习需求：</p>
<p>在我的计划当中，实习有大二暑假和大四（大三暑假开始）两次。两次实习都不可或缺，两次实习的目的也不同。为了让我能够在大二更加容易地找到实习工作，在暑假前拥有一个拿得出手的项目是非常有必要的。</p>
</li>
</ol>
</li>
</ol>
<h2 id="All-My-Life的设计构想："><a href="#All-My-Life的设计构想：" class="headerlink" title="All My Life的设计构想："></a>All My Life的设计构想：</h2><p>目前其实只有一个大概的设想：以目前这个傻瓜式博客为基石，以B站的大体设计框架对其进行重构，再增添一些个性化的功能。细节方面到开始动手实施的事后再仔细考虑。</p>
<h2 id="顺口提一下别的一些事："><a href="#顺口提一下别的一些事：" class="headerlink" title="顺口提一下别的一些事："></a>顺口提一下别的一些事：</h2><p>我并不是大二暑假前要全身心投入到这个项目上，All My Life作为一个大的工程会一直不断驱动我去锻炼学习新的知识，并且成为一把一直悬在我头上的一把刀(就是那种紧迫感)。像平时算法题该刷还是得刷，学校的一些作业该”应付“还是得继续”应付“。甚至还要去做天猫商城之类的网红项目练手</p>
]]></content>
      <categories>
        <category>规划</category>
      </categories>
      <tags>
        <tag>项目</tag>
        <tag>规划</tag>
      </tags>
  </entry>
  <entry>
    <title>Java面向对象之继承性的理解（关键字super）</title>
    <url>/2021/10/27/Java%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E4%B9%8B%E7%BB%A7%E6%89%BF%E6%80%A7%E7%9A%84%E7%90%86%E8%A7%A3%EF%BC%88%E5%85%B3%E9%94%AE%E5%AD%97super%EF%BC%89/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><blockquote>
<p>参考价值：已完结、但不一定正确、仅供参考、但不能作为标准答案、等待重置</p>
</blockquote>
<h2 id="什么是继承性？"><a href="#什么是继承性？" class="headerlink" title="什么是继承性？"></a>什么是继承性？</h2><p>就是字面上的意思，一个类继承了另一个类的属性和方法就叫继承。继承的是子类被继承的是父类。</p>
<h2 id="继承有什么好处？"><a href="#继承有什么好处？" class="headerlink" title="继承有什么好处？"></a>继承有什么好处？</h2><ol>
<li>减少了代码的冗余，增强了代码的复用性。</li>
<li>便于扩展代码的功能</li>
<li>增强类之间的联系，为多态性创造了基石。</li>
</ol>
<h2 id="子类继承父类是直接将父类代码copy到子类里吗？"><a href="#子类继承父类是直接将父类代码copy到子类里吗？" class="headerlink" title="子类继承父类是直接将父类代码copy到子类里吗？"></a>子类继承父类是直接将父类代码copy到子类里吗？</h2><p>不是。</p>
<p>子类依旧不能直接调用父类里私有的属性或方法。至于为什么可以跳转到最下面看继承的原理。</p>
<h2 id="怎么实现继承？"><a href="#怎么实现继承？" class="headerlink" title="怎么实现继承？"></a>怎么实现继承？</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Father</span></span>&#123;</span><br><span class="line">    <span class="comment">//属性:</span></span><br><span class="line">    <span class="comment">//构造器：</span></span><br><span class="line">    <span class="comment">//方法：</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Son</span> <span class="keyword">extends</span> <span class="title">Father</span></span>&#123;</span><br><span class="line">    <span class="comment">//属性：</span></span><br><span class="line">    <span class="comment">//构造器：</span></span><br><span class="line">    <span class="comment">//方法：</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h2 id="方法的重写有什么意义？"><a href="#方法的重写有什么意义？" class="headerlink" title="方法的重写有什么意义？"></a>方法的重写有什么意义？</h2><p>有时候父类的方法不能满足子类的需求，我们通常会重写这个方法以达到子类的需求。</p>
<h2 id="方法重写的原则是什么？"><a href="#方法重写的原则是什么？" class="headerlink" title="方法重写的原则是什么？"></a>方法重写的原则是什么？</h2><ol>
<li>子类重写的方法必须与父类被重写的方法具有相同的方法名称和参数列表</li>
<li>子类重写的方法不能比父类被重写的方法权限低</li>
<li>子类重写的方法返回值类型不能大于父类被重写的方法<ul>
<li>父类的是void，子类的也必须是void</li>
<li>父类的是引用数据类型，子类的也必须是引用数据类型</li>
<li>父类的是基本数据类型，子类的也必须是基本数据类型</li>
</ul>
</li>
<li>子类重写的方法抛出的异常不能大于父类被重写的方法抛出的异常</li>
</ol>
<h2 id="子类怎么调用父类的属性、构造器和方法？"><a href="#子类怎么调用父类的属性、构造器和方法？" class="headerlink" title="子类怎么调用父类的属性、构造器和方法？"></a>子类怎么调用父类的属性、构造器和方法？</h2><p>类调用属性构造器和方法是通过<strong>this</strong>关键字来调用，而子类调用父类的属性、方法和构造器是通过<strong>super</strong>关键字，用法和this差不多。</p>
<p><img src="https://i.loli.net/2021/10/28/vCEopGIqNX9THs5.jpg"></p>
<p><a href="https://dengxiayouhun.github.io/2021/10/19/Java%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E4%B9%8B%E5%85%B3%E9%94%AE%E5%AD%97%EF%BC%88%E4%B8%80%EF%BC%89this/">Java面向对象之关键字  this</a></p>
<h2 id="继承的原理是什么？"><a href="#继承的原理是什么？" class="headerlink" title="继承的原理是什么？"></a>继承的原理是什么？</h2><p>通过<strong>extends关键字</strong>使子类在调用构造器的同时，以对象的地址为对象直接调用父类中的无参构造器（不是用了隐藏的super关键字）</p>
<p>因此，当父类当中构造器被重载，并且没有重载无参构造器时，需要用super关键字在子类构造器中调用父类构造器，否则就无法继承。</p>
<p>这也是为什么子类无法直接调用父类中私有的属性或者方法。</p>
<h2 id="根父类Object类："><a href="#根父类Object类：" class="headerlink" title="根父类Object类："></a>根父类Object类：</h2><p>如果一个类没有显示继承某个父类，那么它会默认继承根父类<strong>Object类</strong>。</p>
<p>因此，除了Object类所有的类都是有父类的。</p>
<h3 id="Object类存在的意义："><a href="#Object类存在的意义：" class="headerlink" title="Object类存在的意义："></a>Object类存在的意义：</h3><p>Object类里写了大量的通用的方法，这些方法都会被其子类继承，这导致Java中所有的类都具有丰富的功能。</p>
]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>学习笔记</tag>
        <tag>java面向对象</tag>
      </tags>
  </entry>
  <entry>
    <title>Java面向对象之关键字（一）this、package、import</title>
    <url>/2021/10/19/Java%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E4%B9%8B%E5%85%B3%E9%94%AE%E5%AD%97%EF%BC%88%E4%B8%80%EF%BC%89this/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><blockquote>
<p>参考价值：已完结、可以参考、等待重置</p>
</blockquote>
<h1 id="this关键字："><a href="#this关键字：" class="headerlink" title="this关键字："></a>this关键字：</h1><h2 id="this关键字有什么用？"><a href="#this关键字有什么用？" class="headerlink" title="this关键字有什么用？"></a>this关键字有什么用？</h2><p>this关键字的作用就是调用，作为一个动态的对象调用当前类的成员，也就是属性，构造器和方法。</p>
<h2 id="this的使用区域是什么？"><a href="#this的使用区域是什么？" class="headerlink" title="this的使用区域是什么？"></a>this的使用区域是什么？</h2><p>类内的方法和构造器内都可以用this。</p>
<h2 id="不怎么见this，是不是this不常用？"><a href="#不怎么见this，是不是this不常用？" class="headerlink" title="不怎么见this，是不是this不常用？"></a>不怎么见this，是不是this不常用？</h2><p>不是，这是因为类内的this是默认隐藏的。比如：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span></span>&#123;</span><br><span class="line">    <span class="comment">//属性：</span></span><br><span class="line">    String name;</span><br><span class="line">    <span class="keyword">int</span> age;</span><br><span class="line">    <span class="comment">//方法：</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">setName</span><span class="params">(String e)</span></span>&#123;</span><br><span class="line">        name = e;<span class="comment">//①</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>①号中的name实际上就是 this.name 只不过name被默认隐藏了。</p>
<h2 id="this怎么调用？"><a href="#this怎么调用？" class="headerlink" title="this怎么调用？"></a>this怎么调用？</h2><ol>
<li><p><strong>调用属性：</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">this</span>.name</span><br></pre></td></tr></table></figure>

<p>一般不用this，用于强调属性或者参数和属性同名时可以用</p>
</li>
<li><p><strong>调用方法：</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">this</span>.setName(<span class="string">&quot;老王&quot;</span>);</span><br></pre></td></tr></table></figure>

<p>一般不用，一般出于强调作用才会用。</p>
</li>
<li><p><strong>调用构造器：</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span></span>&#123;</span><br><span class="line">    <span class="comment">//属性：</span></span><br><span class="line">    String name;</span><br><span class="line">    <span class="keyword">int</span> age;</span><br><span class="line">    <span class="comment">//构造器：</span></span><br><span class="line">    Person()</span><br><span class="line">    &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;调用了构造器&quot;</span>);</span><br><span class="line">	&#125;</span><br><span class="line">   	Person(String e)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">this</span>();</span><br><span class="line">        name = e;</span><br><span class="line">	&#125;</span><br><span class="line">    Person(String e, <span class="keyword">int</span> n)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">this</span>(e);</span><br><span class="line">        age = n;</span><br><span class="line">	&#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//方法：</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">setName</span><span class="params">(String e)</span></span>&#123;</span><br><span class="line">        name = e;<span class="comment">//①</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>根据参数调用不同的构造器，效果是调用构造器内的逻辑代码，并不会再创建一次对象。</p>
<p>有两个要求：</p>
<ol>
<li>调用语句必须放在第一行</li>
<li>不能一个构造器调用多个构造器</li>
<li>调用构造器不能形成递归</li>
</ol>
</li>
</ol>
<h1 id="package关键字："><a href="#package关键字：" class="headerlink" title="package关键字："></a>package关键字：</h1><h2 id="package有什么作用"><a href="#package有什么作用" class="headerlink" title="package有什么作用?"></a>package有什么作用?</h2><ol>
<li>划分层次，方便管理</li>
<li>可以更轻松的设置访问权限</li>
<li>可以有效解决类重名的问题</li>
</ol>
<h2 id="package怎么用？"><a href="#package怎么用？" class="headerlink" title="package怎么用？"></a>package怎么用？</h2><p>package 包名.子包名.子包名  。。。; </p>
<h1 id="import关键字："><a href="#import关键字：" class="headerlink" title="import关键字："></a>import关键字：</h1><h2 id="import有什么用？"><a href="#import有什么用？" class="headerlink" title="import有什么用？"></a>import有什么用？</h2><p>导入指定包或者子包下的某个类或者全部类</p>
<h2 id="import怎么用？"><a href="#import怎么用？" class="headerlink" title="import怎么用？"></a>import怎么用？</h2><ol>
<li><p><strong>导入某个类：</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> javax.swing.JFrame;</span><br></pre></td></tr></table></figure></li>
<li><p><strong>导入所有类：</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> javax.swing.*;</span><br></pre></td></tr></table></figure></li>
</ol>
]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>学习笔记</tag>
        <tag>java面向对象</tag>
      </tags>
  </entry>
  <entry>
    <title>Java面向对象之类的成员：构造器</title>
    <url>/2021/10/18/Java%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E4%B9%8B%E7%B1%BB%E7%9A%84%E6%88%90%E5%91%98%EF%BC%9A%E6%9E%84%E9%80%A0%E5%99%A8/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><blockquote>
<p>参考价值：已完结、可以参考、等待重置</p>
</blockquote>
<h2 id="什么是构造器？"><a href="#什么是构造器？" class="headerlink" title="什么是构造器？"></a>什么是构造器？</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span></span>&#123;</span><br><span class="line">    <span class="comment">//属性：</span></span><br><span class="line">    String name;</span><br><span class="line">    <span class="keyword">int</span> age;</span><br><span class="line">    <span class="keyword">boolean</span> isMale;</span><br><span class="line">    <span class="comment">//构造器：</span></span><br><span class="line">    Person()&#123;</span><br><span class="line">    </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//方法：</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Print</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(name);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>其中Person(){}就是一个构造器（空构造器）。</p>
<h2 id="构造器有什么用？"><a href="#构造器有什么用？" class="headerlink" title="构造器有什么用？"></a>构造器有什么用？</h2><p>两个作用，<strong>创建对象</strong>和<strong>对象属性的初始化赋值</strong>。</p>
<ol>
<li><p><strong>创建对象：</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">    Person p1 = <span class="keyword">new</span> Person();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>这个功能其实我们一直在用，new Person()就是调用了构造器，不过调用的是默认的空构造器。</p>
</li>
<li><p><strong>对象属性的初始化赋值：</strong></p>
<p>默认的空构造器是不具备这个功能的，但是我们可以写一个可以赋值的构造器。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">    Person p1 = <span class="keyword">new</span> Person(<span class="string">&quot;老王&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span></span>&#123;</span><br><span class="line">    <span class="comment">//属性：</span></span><br><span class="line">    String name;</span><br><span class="line">    <span class="keyword">int</span> age;</span><br><span class="line">    <span class="keyword">boolean</span> isMale;</span><br><span class="line">    <span class="comment">//构造器：</span></span><br><span class="line">    Person(String e)&#123;</span><br><span class="line">    	name = e;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//方法：</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Print</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(name);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>如此我们就可以在创建对象的同时对对象的属性进行初始化赋值操作。</p>
</li>
</ol>
<h2 id="用不用写构造器，怎么写构造器？"><a href="#用不用写构造器，怎么写构造器？" class="headerlink" title="用不用写构造器，怎么写构造器？"></a>用不用写构造器，怎么写构造器？</h2><p>这个问题要看我们用不用对对象的属性进行初始化赋值。</p>
<ol>
<li><p><strong>不写构造器：</strong></p>
<p>当我们不需要对类的对象的属性进行赋值时，我们就没必要写构造器，默认的构造器就够用。</p>
</li>
<li><p><strong>写一个构造器：</strong></p>
<p>如果我们有明确的属性初始化赋值需求那么我们就需要写一个构造器。</p>
</li>
<li><p><strong>重载多个构造器：</strong></p>
<p>可能一些大型的程序要创建多个对象，有的需要初始化赋值一个属性，有的需要初始化赋值两个，有的需要初始化赋值多个。这个时候我们就需要重载多个构造器，以应对不同对象的需求。</p>
<blockquote>
<p>友情提示：当我们写一个构造器时，默认构造器就不会被提供。</p>
</blockquote>
</li>
<li><p><strong>特殊情况：</strong></p>
<p>某些特殊情况下，我们也需要自己写一个构造器，就是一些要求在创建对象的同时输出一些语句或者堆属性进行处理之类的。</p>
</li>
</ol>
<h2 id="构造器是不是特殊的方法？"><a href="#构造器是不是特殊的方法？" class="headerlink" title="构造器是不是特殊的方法？"></a>构造器是不是特殊的方法？</h2><p>好多人都认为构造器是一种特殊的方法，主要原因就是因为它们长得比较像。</p>
<p>我认为他们没有关系：</p>
<ul>
<li><p><strong>从功能上讲：</strong></p>
<p>构造器的创建对象功能是方法不能办到的（可能能办到，只是我不知道）。</p>
</li>
<li><p><strong>从使用上来讲：</strong></p>
<p>方法不能用new调用，构造器也不能用 对象.构造器的方式调用。</p>
</li>
</ul>
<p>因此，两者并没有谁包含于谁的关系，各有各的作用，只不过在某些方面有一点点的交叉而已，并不能说构造器是一种特殊的方法。</p>
<p>构造器就是构造器，和方法一样是类的一个成员，并不属于类其他的某个成员。</p>
]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>学习笔记</tag>
        <tag>java面向对象</tag>
      </tags>
  </entry>
  <entry>
    <title>Java面向对象之封装的理解</title>
    <url>/2021/10/17/Java%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E4%B9%8B%E5%B0%81%E8%A3%85%E6%80%A7%E7%9A%84%E7%90%86%E8%A7%A3/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><blockquote>
<p>参考价值：已完结、但不一定正确、参考价值较高、但不能作为标准答案、等待重置</p>
</blockquote>
<hr>
<h2 id="什么才算是Java面向对象？"><a href="#什么才算是Java面向对象？" class="headerlink" title="什么才算是Java面向对象？"></a>什么才算是Java面向对象？</h2><p>很多人把面向对象的内容学完了都搞不懂这个问题。</p>
<p>Java面向对象的知识大概分为三个部分<strong>类以及其成员</strong>、<strong>关键字</strong>和<strong>面向对象的特征</strong>。</p>
<p>那么，用类和关键字写的程序就是面向对象吗？</p>
<p>显然不是，Java也是可以写面型过程的，比如我就经常用Java的类和关键字写面向过程。</p>
<p><strong>那么，究竟什么样的程序才称得上是面向对象呢？</strong></p>
<p><strong>答案：</strong>用类和关键字写的具有<strong>面向对象特征</strong>的程序是面向对象的程序。</p>
<p>所以说面向对象的知识中，类和关键字只是工具，面向对象的特征才是灵魂。</p>
<p>那么，这篇文章我们来谈谈面向对象中的<strong>封装</strong>特性。</p>
<h2 id="什么是封装？"><a href="#什么是封装？" class="headerlink" title="什么是封装？"></a>什么是封装？</h2><p>封装就是字面上的意思，就是打包。</p>
<p>然而，严格上来说，这里的封装还有<strong>隐藏</strong>的意思。</p>
<p>也就是打包的同时不能让“包”外面的人看到包里面的东西，更不能让包外面的人私自动包里的东西。也就是很多老程序员所说的黑盒。</p>
<h2 id="封装有什么好处？"><a href="#封装有什么好处？" class="headerlink" title="封装有什么好处？"></a>封装有什么好处？</h2><ol>
<li><p><strong>不容易出那种很恐怖的bug:</strong></p>
<p>有一种很恐怖的bug相信很多人都遇到过：改好了这里，那边就出问题了，那边改好了，另一边又出问题了。</p>
<p>封装就能很好的解决这种问题，因为被封装的个体相互独立型很强，不容易出现那种连锁的bug。就算出现了，由于封装性低耦合的特点也很容易顺藤摸瓜找到bug。</p>
</li>
<li><p><strong>安全性高：</strong></p>
<p>因为，封装具有隐藏的特点，所以黑盒内部的代码权限被限制的死死的外界想要随意调用是不可能的。因此，黑盒内的信息只要权限限制的好，安全性都会非常的高。</p>
</li>
<li><p><strong>便于修改：</strong></p>
<p>因为各种功能都被封装成一个个的黑盒，彼此之间相互独立。所以当我们需要为程序添加新功能时，只需要新建一个黑盒即可，不需要考虑太多别的代码的影响。</p>
</li>
</ol>
<h2 id="封装的要求是什么？"><a href="#封装的要求是什么？" class="headerlink" title="封装的要求是什么？"></a>封装的要求是什么？</h2><p>说到封装的要求就需要分成<strong>封装</strong>和<strong>隐藏</strong>两个部分展开。</p>
<ol>
<li><p><strong>封装的要求:</strong></p>
<p>也就是怎么把功能打包成盒子。</p>
<p>把功能打包要遵循<strong>高内聚</strong>和<strong>低耦合</strong>的原则：</p>
<p><strong>内聚：</strong></p>
<p>内聚是指黑盒内代码的联系性。</p>
<p>==高内聚==是指黑盒内部的代码必须保持高度的联系性，如果联系性不高，那就删掉，不能删就拆成两个或者多个黑盒。以此来提高内聚性。</p>
<p><strong>耦合：</strong></p>
<p>耦合就是指模块与模块之间的联系，也就是黑盒与黑盒之间的联系。</p>
<p>==低耦合==就是尽量减少黑盒之间的联系，如果耦合很强，并且降低不了你，那就合并成一个黑盒。</p>
<blockquote>
<p>高内聚和低耦合的目的就是让打包起来的黑盒具有高度的独立性。</p>
</blockquote>
</li>
<li><p><strong>隐藏的要求：</strong></p>
<p>一句话概括：<strong>用不到的权限就别给！</strong></p>
<p>隐藏的主要目的是为了安全，防止在黑盒外通过除了黑盒提供的接口（不是关键字那个接口）以外的途径调用黑盒内部的信息。因此，在黑盒内的代码要严格限制其权限不要闭着眼都给public，能少给就少给，千万别多给。</p>
</li>
</ol>
<h2 id="怎么完成封装？"><a href="#怎么完成封装？" class="headerlink" title="怎么完成封装？"></a>怎么完成封装？</h2><p>还是分为<strong>封装</strong>和<strong>隐藏</strong>两个部分来讲：</p>
<ol>
<li><p><strong>封装：</strong></p>
<p>其实没啥可说的，就是遵循<strong>高内聚</strong>、<strong>低耦合</strong>的原则进行封装，内聚低了就拆，耦合高了就合并。用多了就有经验了。</p>
</li>
<li><p><strong>隐藏：</strong></p>
<p>隐藏说白了也就是权限的事，知道怎么限制权限也就知道了怎么隐藏。</p>
<p>权限限制通过四个权限修饰符来实现，分别是：<strong>private</strong>、<strong>缺省</strong>、<strong>protected</strong>和<strong>public</strong>。</p>
<p>他们对权限的限制如下图所示：</p>
<p><img src="https://i.loli.net/2021/10/17/2FRLvGi3tsHY6q5.png"></p>
<p>特别提醒：</p>
<p>类的属性必须设置成private</p>
<p>类的方法因其需要给与不同的权限，用不到的地方不要给。</p>
<p>类（不包括内部类）的权限不能是private。</p>
</li>
</ol>
<h2 id="特别提醒："><a href="#特别提醒：" class="headerlink" title="特别提醒："></a>特别提醒：</h2><ol>
<li><p><strong>黑盒到底是啥？</strong></p>
<p>有的同学疑问黑盒到底是类还是方法？</p>
<p>其实都是，只要是被封装了，都是黑盒。而且黑盒一般都是黑盒套黑盒。比如说，我设计一个学生信息管理系统，其中学生成绩管理是一个黑盒，而学生成绩管理下的增删改查也都是一个一个的黑盒，甚至存储学生信息的线性表也是一个黑盒。只不过他们有的是方法、有的是类。这也是为什么说面向对象里万物皆对象，万物皆黑盒（不用去百度，后面这句是我加的）的原因。</p>
</li>
<li><p><strong>面向对象的程序设计的规范</strong></p>
<p>初次接触面向对象的小伙伴们可能会觉的面向对象好自由，万物皆对象，想把谁当对象都行，爱咋封装咋封装。这也导致很多程序写的五花八门，有的简直没眼看。</p>
<p>实际上，面向对象确实自由，但也不是无限自由，封装的好叫黑盒，封装的不好，写了一个高耦合低内聚的程序，那就不叫黑盒了，那叫透明玻璃缸（比如刚学面向对象时的我）。</p>
<p>所以说，当大家严格遵守封装的特性去设计面向对象的程序时，我们的程序的质量就会提升起来。这也是为什么有的人写的面向对象的程序说不出来哪里好，但就是感觉比自己高级，实际上是他们把握住了面向对象的三大特性，其中之一就有封装。</p>
</li>
</ol>
<p>给大家一个学生成绩管理系统的代码，看看大家能不能体会到面向对象的奥妙。其中有标准版、Plus版和Plus+版，分别对应面向过程、粗糙的面向对象、和具有封装特性的面向对象。</p>
<p><a href="https://dengxiayouhun.github.io/2021/10/14/%E5%AD%A6%E7%94%9F%E6%88%90%E7%BB%A9%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F/">学生成绩管理系统</a></p>
<p><img src="https://i.loli.net/2021/10/17/6NpUSQegfTVo3XZ.gif"></p>
]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>学习笔记</tag>
        <tag>java面向对象</tag>
      </tags>
  </entry>
  <entry>
    <title>关于我与厌学情绪斗智斗勇的那些事</title>
    <url>/2021/10/08/%E5%85%B3%E4%BA%8E%E6%88%91%E4%B8%8E%E5%8E%8C%E5%AD%A6%E6%83%85%E7%BB%AA%E6%96%97%E6%99%BA%E6%96%97%E5%8B%87%E7%9A%84%E9%82%A3%E4%BA%9B%E4%BA%8B/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><blockquote>
<p>这篇文章类似于“谈谈自己”的生活分享类文章，所以就不怎么注重排版了，只会把重点的地方加粗，加高亮。</p>
</blockquote>
<blockquote>
<p>参考价值：已完结、个人经验分享、可参考，但不一定适合每一个人。</p>
</blockquote>
<hr>
<p>厌学情绪相信大家都遇到过，就是那种不知道为什么整个人就陷入了一种比较颓废的状态当中，身体也不怎么累，但就是提不起力气，提不起精神，什么都不想干，更不想学习。</p>
<p>这种状态其实我也经常遇到。作为一位<strong>高考卷王大省</strong>——<strong>河南</strong>高中毕业的学子，以及目前每天自学时间高达6~10个小时的“奋斗”大学生，我和厌学情绪可谓是斗智斗勇，也算是经验丰富了。</p>
<p>首先说说我厌学的频率。上高中的时候，可能是学习环境的原因，虽然很累（参照衡水那个程度，比那个低一点）但是基本没有什么厌学的时候。大多会在考试前后有一段时间会厌学。至于现在大学生活，没有环境逼迫外加确实比较苦，基本每隔3、4天就会产生厌学情绪，啥都不想干，无精打采的。</p>
<p><strong>应对措施：</strong></p>
<ol>
<li><p><strong>陷入极端情绪：</strong></p>
<p>基本做法是通过想一些事（可以是过去的事，可以是自己幻想的事），将自己陷入一种极端情绪（我经常转化成愤怒），然后，将这种极端情绪转化为斗志。基本原理就是：用极端从精神上跳出无精打采的状态。</p>
<p>我一直认为这种方法比较费身体，对身体不太好（没有依据，就是一种感觉）。所以我一般在比较紧急的时候，才会用这种方法，比如：高中、还有其他一些比较紧急的时候。</p>
</li>
<li><p><strong>先让身体劳累，然后睡一觉：</strong></p>
<p>基本做法是通过锻炼令身体劳累，或者干一些特别难受的事，令精神劳累，然后睡3个小时左右（这个看人，我一般睡3个小时）或者睡一晚，然后起来后会特别舒服，基本逃离无精打采的状态。这个原理应该和深度睡眠有关。睡前加重身体和精神上的疲惫，睡觉时更容易进如深度睡眠状态（我的华为智能手表用监测数据告诉我确实如此+-+）。</p>
<p>如果我直接睡觉，一觉醒来会更加无精打采。</p>
<p>这个方法也是我目前最常用的方法。</p>
</li>
<li><p><strong>躺平，开始玩：</strong></p>
<p>也没啥的，就是玩，看视频也行，追番也行，打游戏也行，直接干到晚上11点然后睡觉第二天再学。原理应该和转移注意力有关。</p>
<p>这个一般在时间非常充裕的时候使用。比如今年国庆第二天我打了半天游戏，追了半天的番剧。nice !</p>
</li>
</ol>
<p>当然，以上的方法并不能让我们鼓起兴趣去学习，只是让我们从颓废的状态下解放出来，重新提起精神。如果我们本身就不愿意学习，那么即便提起精神，我们更大的可能应该是去打游戏（-_-）.</p>
<p><img src="https://i.loli.net/2021/10/08/JmLubDn7Tq2jE4G.jpg"></p>
]]></content>
      <categories>
        <category>生活</category>
      </categories>
      <tags>
        <tag>生活</tag>
      </tags>
  </entry>
  <entry>
    <title>Java面向对象之面向对象的理解</title>
    <url>/2021/10/06/Java%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E4%B9%8B%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E4%B8%8E%E9%9D%A2%E5%90%91%E8%BF%87%E7%A8%8B/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><blockquote>
<p>前言：</p>
<p>面向对象时Java中十分重要的一个概念，很多工作多年的程序员也很难说清楚什么是面向对象。我在这里也只是阐述一下当下我对面向对象的理解。</p>
</blockquote>
<blockquote>
<p>参考价值：已完结、但不一定正确、仅供参考、但不能作为标准答案、等待重置</p>
</blockquote>
<hr>
<h2 id="什么是面向对象？"><a href="#什么是面向对象？" class="headerlink" title="什么是面向对象？"></a>什么是面向对象？</h2><h3 id="面向对象的本质是什么？"><a href="#面向对象的本质是什么？" class="headerlink" title="面向对象的本质是什么？"></a>面向对象的本质是什么？</h3><p>面向对象的本质是一种思想。</p>
<h3 id="什么是思想？"><a href="#什么是思想？" class="headerlink" title="什么是思想？"></a>什么是思想？</h3><p>思想是一个人面对问题时选择解决方法的指导原则。</p>
<p>比如：</p>
<p>要解决一个问题：赚钱。</p>
<p>不同人会选择不同的方法：</p>
<ol>
<li>选择创业赚钱</li>
<li>选择打工当社畜赚钱</li>
<li>选择烧杀抢掠赚钱</li>
</ol>
<p>这些方法都能解决赚钱的问题，但为什么不同的人会选择不同的方法？这是因为不同的人选择方法时，思想不同，有的人敢拼敢闯、不怕失败，他就更偏向于创业赚钱；有的人追求安稳，他就更偏向于打工赚钱；有的人没有道德底线，心狠手辣，想快速赚钱，那么他就更偏向于烧杀抢掠赚钱。</p>
<p>当我们遇到困难时，我们的思想会决定我们选择什么样的方法去解决。这就是思想的作用。</p>
<h3 id="面向过程的思想和面向对象的思想是什么？"><a href="#面向过程的思想和面向对象的思想是什么？" class="headerlink" title="面向过程的思想和面向对象的思想是什么？"></a>面向过程的思想和面向对象的思想是什么？</h3><p>编程的目的是解决问题，解决问题需要设计方法。而在编程中设计算法有两种指导思想，就是<strong>面向过程</strong>和<strong>面向对象</strong>。</p>
<h3 id="面向过程的思想和面向对象的思想有什么区别？"><a href="#面向过程的思想和面向对象的思想有什么区别？" class="headerlink" title="面向过程的思想和面向对象的思想有什么区别？"></a>面向过程的思想和面向对象的思想有什么区别？</h3><p>面向过程的思想在设计算法（或者是代码逻辑）时，一般遵循走一步看一步，兵来将挡水来土掩，缺什么添什么的原则。</p>
<p>面向对象的思想在设计算法（或者是代码逻辑）时，一般遵循着眼大局，分割分配的原则。</p>
<p>举例：甲方提出任务：移走一座山</p>
<h4 id="方法一："><a href="#方法一：" class="headerlink" title="方法一："></a><strong>方法一：</strong></h4><p><strong>思想：</strong>面向过程</p>
<p><strong>概述：</strong></p>
<p>确定移山需要的技术，带上需要的人，上去就干，需要驱赶动物就驱赶动物，需要砍树就砍树，需要爆破就爆破，需要运输就运输，直到最后把山移走。</p>
<blockquote>
<p>说的比较模糊，但毕竟面向对象时主要对象。因此，面向过程的内容大致说一下就行，重点还是放在面向对象上</p>
</blockquote>
<h4 id="方法二："><a href="#方法二：" class="headerlink" title="方法二："></a><strong>方法二：</strong></h4><p><strong>思想：</strong>面向对象</p>
<p><strong>概述：</strong></p>
<p>先分析分割任务，然后设计如何分配，设立各种部们精准分配任务。</p>
<p>设计三个阶段分配给三个部门：</p>
<ol>
<li><p>准备阶段，设立准备部门：</p>
<p>分配给准备部门任务并设立相应的部门分配工作：</p>
<ol>
<li><p>遣散民众：设立民众部门</p>
<ol>
<li><p>处理外来旅客：设立旅客部门</p>
<ol>
<li><p>驱散工作</p>
<p>分配给安保人员，设计安保人员的属性并设计其各种方法去完成分割后的具体任务</p>
</li>
<li><p>警示工作</p>
<p>分配给工人，设计工人的属性并设计其各种方法去完成分割后的具体任务</p>
</li>
<li><p>宣传工作</p>
<p>任务转接给辅助部门</p>
</li>
</ol>
</li>
<li><p>处理本地居民：设立居民部门</p>
<ol>
<li><p>拆迁工作</p>
<p>分配给拆迁大队，设计拆迁大队的属性并设计其各种方法去完成分割后的具体任务</p>
</li>
<li><p>沟通工作</p>
<p>转接给辅助部门</p>
</li>
</ol>
</li>
</ol>
</li>
<li><p>驱赶动物：设立动物部门</p>
<ol>
<li><p>分类工作</p>
<p>分配给专家，设计专家的属性并设计其各种方法去完成分割后的具体任务</p>
</li>
<li><p>转移工作</p>
<p>分配给转移大队，设计转移大队的属性并设计其各种方法去完成分割后的具体任务保护工作</p>
</li>
<li><p>捕杀工作</p>
<p>分配给捕杀大队，设计拆迁队的属性并设计其各种方法去完成分割后的具体任务</p>
</li>
</ol>
</li>
<li><p>移走树木：设立林木部门</p>
<ol>
<li><p>向政府申请：</p>
<p>转接给辅助部门</p>
</li>
<li><p>分类工作：</p>
<p>分配给专家，设计专家的属性并设计其各种方法去完成分割后的具体任务</p>
</li>
<li><p>移植工作：</p>
<p>分配给工人，设计工人的属性并设计其各种方法去完成分割后的具体任务</p>
</li>
<li><p>砍伐工作：</p>
<p>分配给砍伐大队，设计砍伐大队的属性并设计其各种方法去完成分割后的具体任务</p>
</li>
</ol>
</li>
</ol>
</li>
<li><p>移山阶段：设立移山部门：</p>
<ol>
<li><p>挖土工作：</p>
<p>分配给挖掘机大队，设计挖掘机大队的属性并设计其各种方法去完成分割后的具体任务</p>
</li>
<li><p>爆破工作：</p>
<p>分配给爆破大队，设计爆破大队的属性并设计其各种方法去完成分割后的具体任务</p>
</li>
<li><p>运输工作：</p>
<p>分配给货车大队，设计货车大队的属性并设计其各种方法去完成分割后的具体任务</p>
</li>
</ol>
</li>
<li><p>收尾阶段：设立收尾部门：</p>
<ol>
<li><p>工资发放;</p>
<p>分配给文职人员，设计文职人员的属性并设计其各种方法去完成分割后的具体任务</p>
</li>
<li><p>设备安置：</p>
<p>分配给工人，设计工人的属性并设计其各种方法去完成分割后的具体任务</p>
</li>
</ol>
</li>
<li><p>辅助全阶段：设立辅助部门</p>
<ol>
<li><p>设立文宣部门：</p>
<ol>
<li><p>宣传工作</p>
<p>分配给文职人员，设计文职人员的属性并设计其各种方法去完成分割后的具体任务</p>
</li>
</ol>
</li>
<li><p>设立沟通部门：</p>
<ol>
<li><p>内部沟通：</p>
<p>分配给文职人员，设计文职人员的属性并设计其各种方法去完成分割后的具体任务</p>
</li>
<li><p>外部沟通：</p>
<p>分配给文职人员，设计文职人员的属性并设计其各种方法去完成分割后的具体任务</p>
</li>
</ol>
</li>
<li><p>设立政府交接部门：</p>
<ul>
<li><p>与政府完成各种许可上的申请：</p>
<p>分配给外交人员，设计外交人员的属性并设计其各种方法去完成分割后的具体任务</p>
</li>
</ul>
</li>
<li><p>设立统计部门：</p>
<ol>
<li><p>统计工程进度：</p>
<p>分配给文职人员，设计文职人员的属性并设计其各种方法去完成分割后的具体任务</p>
</li>
<li><p>统计资金流动：</p>
<p>分配给文职人员，设计文职人员的属性并设计其各种方法去完成分割后的具体任务</p>
</li>
<li><p>统计人员信息、人员变动</p>
<p>分配给文职人员，设计文职人员的属性并设计其各种方法去完成分割后的具体任务</p>
</li>
</ol>
</li>
</ol>
</li>
</ol>
<p><strong>思维导图：</strong></p>
<p><img src="https://i.loli.net/2021/10/07/8Sn7beQPYflqDgo.jpg"></p>
<p>这样，通过面向对象的思想设计的方法就完成了。（我不是专业移山的，有些地方分割的比较详细，有些地方分割的就比较草率）</p>
<h4 id="总结："><a href="#总结：" class="headerlink" title="总结："></a><strong>总结：</strong></h4><p>面向过程思考的是怎么解决问题。</p>
<p>面向过程思考的是怎么分配问题和谁能解决问题。</p>
<h2 id="Java面向对象的知识："><a href="#Java面向对象的知识：" class="headerlink" title="Java面向对象的知识："></a>Java面向对象的知识：</h2><p>Java基础编程基本分为<strong>Java基础程序设计</strong>和<strong>Java面向对象</strong>。</p>
<p>Java基础程序设计的知识是数据类型、输入输出、流程控制和数组等。</p>
<h3 id="Java面向对象的知识是什么？"><a href="#Java面向对象的知识是什么？" class="headerlink" title="Java面向对象的知识是什么？"></a>Java面向对象的知识是什么？</h3><p> 简单来说能够把使用面向对象思想设计的方法变成Java代码的知识就是Java面向对象的知识。</p>
<p> 因此，Java面向对象的知识包括：</p>
<ol>
<li><p>类和类的成员</p>
<p>属性、方法、构造器、代码块、内部类</p>
</li>
<li><p>面向对象的特征：</p>
<p>封装、继承、多态</p>
</li>
<li><p>关键字</p>
<p>this package import super static final interface(接口)等</p>
</li>
</ol>
<p>学完以上的内容Java面向对象的内容也基本就学完了。</p>
<h2 id="面向对象和面向过程哪个更高级？"><a href="#面向对象和面向过程哪个更高级？" class="headerlink" title="面向对象和面向过程哪个更高级？"></a>面向对象和面向过程哪个更高级？</h2><p>很多同学可能总是听别人说面向对象更高级，但自己写代码时却感觉面向对象好麻烦，完全感觉不到面向对象比面向过程好用到哪里。</p>
<p>以下为我的观点：</p>
<ol>
<li><p><strong>面向对象和面向过程是同级的</strong></p>
<p>面向对象和面向过程都是一种思想，没有高低之分。</p>
</li>
<li><p><strong>大学生编程阶段大部分时间面向过程的确更好用</strong></p>
<p>百行之内，过程绝杀。</p>
<p>千行之内，不分伯仲。</p>
<p>千行之上，对象为王。</p>
<p>以上就是面向对象和面向过程在代码编写时的优势大致比较。总体上来看，代码量越大面向对象的思想更占优。</p>
<p>同时，也因为大学生阶段很多学生都没有机会一次性写千行以上的代码（个别大佬除外），所以对于大学生来说，的确大部分时候会觉得面向过程的思想更加方便。</p>
</li>
<li><p><strong>选择用面向对象还是用面向过程看自己的需求</strong></p>
<p>究竟是选择面向对象的思想还是选择面向过程的思想并不是看我们用哪个更顺手就用哪个，而是看我们的需求。比如说：如果你是机械专业，顺道学了一点C语言，那就老老实实选择面向过程，机械专业本身的性质就决定你不会写过长的代码。还是用面向过程更加方便。</p>
<p>如果你是计算机专业并且和我一样选的Java后端开发路线，那么无论你多么讨厌面向对象，你也必须选择面向对象编程。除非你是学着玩的，那 . . . 你随便选，爱咋选择就咋选择，就当是培养兴趣了。</p>
</li>
</ol>
<h2 id="我学会了类的相关知识是不是就学会了面向对象？"><a href="#我学会了类的相关知识是不是就学会了面向对象？" class="headerlink" title="我学会了类的相关知识是不是就学会了面向对象？"></a>我学会了类的相关知识是不是就学会了面向对象？</h2><p>不是。</p>
<p>我也能用Java类的知识写一个面向过程设计的程序。类不等于面向对象。</p>
<p>学会面向对象是指你会用面向对象的思想设计代码逻辑，然后用类相关知识将代码逻辑实现为实际的代码。两者都很重要，缺一不可。</p>
]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>学习笔记</tag>
        <tag>java面向对象</tag>
      </tags>
  </entry>
  <entry>
    <title>Java基础程序设计之数组(未完)</title>
    <url>/2021/10/05/Java%E5%9F%BA%E7%A1%80%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E4%B9%8B%E6%95%B0%E7%BB%84/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><blockquote>
<p>参考价值：未完善，无错误、不建议参考，等待重置</p>
</blockquote>
<hr>
<h2 id="什么是数组？"><a href="#什么是数组？" class="headerlink" title="什么是数组？"></a>什么是数组？</h2><h3 id="数组的基本属性："><a href="#数组的基本属性：" class="headerlink" title="数组的基本属性："></a>数组的基本属性：</h3><ol>
<li><p><strong>类型：</strong></p>
<ul>
<li>数组的类型：引用数据类型</li>
<li>元素的类型：既可以是基本数据类型也可以是引用数据类型</li>
</ul>
</li>
<li><p><strong>数组名</strong></p>
</li>
<li><p><strong>索引（下标）</strong></p>
</li>
<li><p><strong>元素</strong></p>
</li>
<li><p><strong>长度</strong>：指数组在初始化时开辟的空间的个数。</p>
</li>
</ol>
<h3 id="数组的分类："><a href="#数组的分类：" class="headerlink" title="数组的分类："></a>数组的分类：</h3><ul>
<li><strong>按照维数：</strong>一维数组、二维数组（也可以有三维数组，但不常用）</li>
<li><strong>按照元素数据类型：</strong>整型数组、char型数组、String型数组等</li>
</ul>
<h2 id="一维数组："><a href="#一维数组：" class="headerlink" title="一维数组："></a>一维数组：</h2><ol>
<li><p><strong>数组的声明：</strong></p>
<ol>
<li><p>静态声明：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span>[] num = &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>&#125;;</span><br><span class="line"><span class="keyword">int</span> num[] = &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>&#125;;</span><br></pre></td></tr></table></figure>

<p>静态声明是在声明的同时初始化了数组。</p>
</li>
<li><p>动态声明：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span>[] num;</span><br><span class="line"><span class="keyword">int</span> num[];</span><br></pre></td></tr></table></figure></li>
</ol>
</li>
<li><p><strong>数组的初始化：</strong></p>
<ol>
<li><p>静态声明的初始化：</p>
<p>在声明的同时已经完成了初始化。</p>
</li>
<li><p>动态声明的初始化：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">num = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">3</span>];</span><br></pre></td></tr></table></figure></li>
<li><p>动态声明的同时初始化：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span>[] num = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">3</span>];</span><br><span class="line"><span class="keyword">int</span> num[] = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">3</span>];</span><br></pre></td></tr></table></figure></li>
<li><p>数组的初始化默认值：</p>
<ol>
<li>整型：0</li>
<li>浮点型：0.0</li>
<li>char型：0或者’\0’</li>
<li>布尔型：false</li>
<li>String型：null</li>
</ol>
<p><strong>检验代码：</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">int</span>[] num1 = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">2</span>];</span><br><span class="line">		System.out.println(<span class="string">&quot;*********&quot;</span>);</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= num1.length - <span class="number">1</span>; i ++) &#123;</span><br><span class="line">			System.out.println(<span class="string">&quot;----&quot;</span> + num1[i] + <span class="string">&quot;----&quot;</span>);</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">short</span>[] num2 = <span class="keyword">new</span> <span class="keyword">short</span>[<span class="number">2</span>];</span><br><span class="line">		System.out.println(<span class="string">&quot;*********&quot;</span>);</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= num2.length - <span class="number">1</span>; i ++) &#123;</span><br><span class="line">			System.out.println(<span class="string">&quot;----&quot;</span> + num2[i] + <span class="string">&quot;----&quot;</span>);</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">byte</span>[] num3 = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">2</span>];</span><br><span class="line">		System.out.println(<span class="string">&quot;*********&quot;</span>);</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= num3.length - <span class="number">1</span>; i ++) &#123;</span><br><span class="line">			System.out.println(<span class="string">&quot;----&quot;</span> + num3[i] + <span class="string">&quot;----&quot;</span>);</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">long</span>[] num4 = <span class="keyword">new</span> <span class="keyword">long</span>[<span class="number">2</span>];</span><br><span class="line">		System.out.println(<span class="string">&quot;*********&quot;</span>);</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= num4.length - <span class="number">1</span>; i ++) &#123;</span><br><span class="line">			System.out.println(<span class="string">&quot;----&quot;</span> + num4[i] + <span class="string">&quot;----&quot;</span>);</span><br><span class="line">		&#125;</span><br><span class="line">		System.out.println(<span class="string">&quot;整型数组的初始化默认值是0吗？（yes/no）&quot;</span>);</span><br><span class="line">		<span class="keyword">if</span>(num1[<span class="number">0</span>] == <span class="number">0</span> &amp;&amp; num2[<span class="number">0</span>] == <span class="number">0</span> &amp;&amp; num3[<span class="number">0</span>] == <span class="number">0</span> &amp;&amp; num4[<span class="number">0</span>] == <span class="number">0</span>) </span><br><span class="line">			System.out.println(<span class="string">&quot;yes&quot;</span>);</span><br><span class="line">		<span class="keyword">else</span></span><br><span class="line">			System.out.println(<span class="string">&quot;no&quot;</span>);</span><br><span class="line">		</span><br><span class="line">		<span class="keyword">double</span>[] dou = <span class="keyword">new</span> <span class="keyword">double</span>[<span class="number">2</span>];</span><br><span class="line">		System.out.println(<span class="string">&quot;*********&quot;</span>);</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= dou.length - <span class="number">1</span>; i ++) &#123;</span><br><span class="line">			System.out.println(<span class="string">&quot;----&quot;</span> + dou[i] + <span class="string">&quot;----&quot;</span>);</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">float</span>[] flo = <span class="keyword">new</span> <span class="keyword">float</span>[<span class="number">2</span>];</span><br><span class="line">		System.out.println(<span class="string">&quot;*********&quot;</span>);</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= flo.length - <span class="number">1</span>; i ++) &#123;</span><br><span class="line">			System.out.println(<span class="string">&quot;----&quot;</span> + flo[i] + <span class="string">&quot;----&quot;</span>);</span><br><span class="line">		&#125;</span><br><span class="line">		System.out.println(<span class="string">&quot;浮点型数组的初始化默认值是0.0吗？（yes/no）&quot;</span>);</span><br><span class="line">		<span class="keyword">if</span>(flo[<span class="number">0</span>] == <span class="number">0</span> &amp;&amp; dou[<span class="number">0</span>] == <span class="number">0</span>) </span><br><span class="line">			System.out.println(<span class="string">&quot;yes&quot;</span>);</span><br><span class="line">		<span class="keyword">else</span></span><br><span class="line">			System.out.println(<span class="string">&quot;no&quot;</span>);</span><br><span class="line">		<span class="keyword">boolean</span>[] bool = <span class="keyword">new</span> <span class="keyword">boolean</span>[<span class="number">2</span>];</span><br><span class="line">		System.out.println(<span class="string">&quot;*********&quot;</span>);</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= bool.length - <span class="number">1</span>; i ++) &#123;</span><br><span class="line">			System.out.println(<span class="string">&quot;----&quot;</span> + bool[i] + <span class="string">&quot;----&quot;</span>);</span><br><span class="line">		&#125;</span><br><span class="line">		System.out.println(<span class="string">&quot;布尔型数组的初始化默认值是false吗？（yes/no）&quot;</span>);</span><br><span class="line">		<span class="keyword">if</span>(bool[<span class="number">0</span>] == <span class="keyword">false</span>) </span><br><span class="line">			System.out.println(<span class="string">&quot;yes&quot;</span>);</span><br><span class="line">		<span class="keyword">else</span></span><br><span class="line">			System.out.println(<span class="string">&quot;no&quot;</span>);</span><br><span class="line">		<span class="keyword">char</span>[] chr = <span class="keyword">new</span> <span class="keyword">char</span>[<span class="number">2</span>];</span><br><span class="line">		System.out.println(<span class="string">&quot;*********&quot;</span>);</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= chr.length - <span class="number">1</span>; i ++) &#123;</span><br><span class="line">			System.out.println(<span class="string">&quot;----&quot;</span> + chr[i] + <span class="string">&quot;----&quot;</span>);</span><br><span class="line">		&#125;</span><br><span class="line">		System.out.println(<span class="string">&quot;char型数组的初始化默认值是0或着是&#x27;\0&#x27;吗？（yes/no）&quot;</span>);</span><br><span class="line">		<span class="keyword">if</span>(chr[<span class="number">0</span>] == <span class="number">0</span> &amp;&amp; chr[<span class="number">0</span>] == <span class="string">&#x27;\0&#x27;</span>) </span><br><span class="line">			System.out.println(<span class="string">&quot;yes&quot;</span>);</span><br><span class="line">		<span class="keyword">else</span></span><br><span class="line">			System.out.println(<span class="string">&quot;no&quot;</span>);</span><br><span class="line">		</span><br><span class="line">		String[] str = <span class="keyword">new</span> String[<span class="number">2</span>];</span><br><span class="line">		System.out.println(<span class="string">&quot;*********&quot;</span>);</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= str.length - <span class="number">1</span>; i ++) &#123;</span><br><span class="line">			System.out.println(<span class="string">&quot;----&quot;</span> + str[i] + <span class="string">&quot;----&quot;</span>);</span><br><span class="line">		&#125;</span><br><span class="line">		System.out.println(<span class="string">&quot;String型数组的初始化默认值是null吗？（yes/no）&quot;</span>);</span><br><span class="line">		<span class="keyword">if</span>(str[<span class="number">0</span>] == <span class="keyword">null</span>) </span><br><span class="line">			System.out.println(<span class="string">&quot;yes&quot;</span>);</span><br><span class="line">		<span class="keyword">else</span></span><br><span class="line">			System.out.println(<span class="string">&quot;no&quot;</span>);</span><br><span class="line">	&#125;</span><br></pre></td></tr></table></figure>

<p><strong>运行结果：</strong></p>
<p><img src="https://i.loli.net/2021/10/09/ku2C6yNvdmbRpSI.jpg"></p>
<p><img src="https://i.loli.net/2021/10/09/Fodt7mlwveBxU9h.jpg"></p>
</li>
</ol>
</li>
<li><p><strong>数组的调用：</strong></p>
<p>通过索引(下标)调用。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">num[<span class="number">0</span>] = <span class="number">1</span>;<span class="comment">//调用第一个元素并赋值</span></span><br><span class="line">num[<span class="number">1</span>] = <span class="number">2</span>;<span class="comment">//调用第二个元素并赋值</span></span><br><span class="line">num[<span class="number">2</span>] = <span class="number">2</span>;<span class="comment">//调用第三个元素并赋值</span></span><br></pre></td></tr></table></figure></li>
<li><p><strong>数组的长度：</strong></p>
<p>通过调用方法获取。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">System.out.println(<span class="string">&quot;数组num的长度是：&quot;</span> + num.length);</span><br></pre></td></tr></table></figure></li>
<li><p><strong>数组的遍历：</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= num.length - <span class="number">1</span>; i ++) &#123;</span><br><span class="line">	System.out.printf(<span class="string">&quot;数组的第%d个元素是：%d\n&quot;</span>,i + <span class="number">1</span>,num[i]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>通过循环语句进行遍历。</p>
</li>
</ol>
<h2 id="一维数组在内存中的解析："><a href="#一维数组在内存中的解析：" class="headerlink" title="一维数组在内存中的解析："></a>一维数组在内存中的解析：</h2><p>首先我们要说一下内存的构成。</p>
<h3 id="内存的构成："><a href="#内存的构成：" class="headerlink" title="内存的构成："></a>内存的构成：</h3><p>内存并不是一个整块可以随意地存储数据。它分为栈、堆和其他结构（本次解析不涉及，暂且不提）。</p>
<p>就像这样：</p>
<p><img src="https://i.loli.net/2021/10/09/kDOejrdQACTt3fu.jpg"></p>
<p>其中，栈用来存储局部变量，也就是数组。堆用来储存new出来的变量，也就是数组元素。</p>
<p>当我们声明并初始化一个数组时，内存如此变化：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span>[] num = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">3</span>];</span><br></pre></td></tr></table></figure>

<p><img src="https://i.loli.net/2021/10/09/Nro6cuMGxCOmHhS.jpg"></p>
<p>其中，栈内的数组和堆内的元素通过数组元素的首地址关联。</p>
<p>那么，如果我们这样做，会发生什么？</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span>[] num = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">2</span>];</span><br></pre></td></tr></table></figure>

<p><img src="https://i.loli.net/2021/10/09/ntICNg1v4mGeyjo.jpg"></p>
<p>栈内的数组num会与堆内新数组元素关联，而没有与栈内关联的数组元素过一段时间后会被垃圾处理机制处理掉。</p>
<h2 id="二维数组"><a href="#二维数组" class="headerlink" title="二维数组"></a>二维数组</h2><p>先不搞，最近时间紧，暂时用不着</p>
<h2 id="数组的相关算法："><a href="#数组的相关算法：" class="headerlink" title="数组的相关算法："></a>数组的相关算法：</h2><p>按下不表，有时间再搞。</p>
]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>学习笔记</tag>
      </tags>
  </entry>
  <entry>
    <title>MySQL的安装、删库、服务的开启、删除与登录</title>
    <url>/2021/09/25/MySQL%E7%9A%84%E5%AE%89%E8%A3%85%E3%80%81%E5%88%A0%E5%BA%93%E3%80%81%E6%9C%8D%E5%8A%A1%E7%9A%84%E5%BC%80%E5%90%AF%E3%80%81%E5%88%A0%E9%99%A4%E4%B8%8E%E7%99%BB%E5%BD%95/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><h2 id="安装MySQL"><a href="#安装MySQL" class="headerlink" title="安装MySQL"></a>安装MySQL</h2><p>去官网下载压缩包然后把文件夹解压到自己喜欢放的位置，比如我是放在D盘。</p>
<p><img src="https://i.loli.net/2021/09/25/mYq3V8h42ENWpPI.jpg"></p>
<p><a href="https://dev.mysql.com/downloads/mysql/">官网传送门</a></p>
<h2 id="创建my-ini配置文件"><a href="#创建my-ini配置文件" class="headerlink" title="创建my.ini配置文件"></a>创建my.ini配置文件</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[mysqld]</span><br><span class="line"># 设置3306端口</span><br><span class="line">port=3306</span><br><span class="line">[mysqld]</span><br><span class="line"># 设置3306端口</span><br><span class="line">port=3306</span><br><span class="line"># 设置mysql的安装目录</span><br><span class="line">basedir=D:\MySQL\mysql-8.0.26</span><br><span class="line"># 设置mysql数据库的数据的存放目录</span><br><span class="line">datadir=D:\MySQL\mysql-8.0.26\data</span><br><span class="line"># 允许最大连接数</span><br><span class="line">max_connections=200</span><br><span class="line"># 允许连接失败的次数。这是为了防止有人从该主机试图攻击数据库系统</span><br><span class="line">max_connect_errors=10</span><br><span class="line"># 服务端使用的字符集默认为UTF8</span><br><span class="line">character-set-server=utf8</span><br><span class="line"># 创建新表时将使用的默认存储引擎</span><br><span class="line">default-storage-engine=INNODB</span><br><span class="line"># 默认使用“mysql_native_password”插件认证</span><br><span class="line">default_authentication_plugin=mysql_native_password</span><br><span class="line">[mysql]</span><br><span class="line"># 设置mysql客户端默认字符集 </span><br><span class="line">default-character-set=utf8</span><br><span class="line">[client]</span><br><span class="line"># 设置mysql客户端连接服务端时默认使用的端口</span><br><span class="line">port=3306</span><br><span class="line">default-character-set=utf8</span><br></pre></td></tr></table></figure>

<p>把里面的内容C+V到my.ini文件（自己创建）里，注意两个路径要改成你自己的路径。</p>
<h2 id="配置环境变量"><a href="#配置环境变量" class="headerlink" title="配置环境变量"></a>配置环境变量</h2><p>把bin的路径配置到Path系统变量里，可以参考Java配置环境变量</p>
<p><a href="https://dengxiayouhun.github.io/2021/07/22/Java%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/">Java环境变量配置—传送门</a></p>
<h2 id="初始化MySQL"><a href="#初始化MySQL" class="headerlink" title="初始化MySQL"></a>初始化MySQL</h2><p>打开cmd命令行（以管理员身份运行，下面的cmd都是如此），cd到bin目录下，输入下面这条命令。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mysqld --initialize --console</span><br></pre></td></tr></table></figure>

<p>记得截图保存初始密码，之后登陆MySQL要用，就是这个东西。</p>
<p><img src="https://i.loli.net/2021/09/25/xHwdITAyCoWmg23.jpg"></p>
<blockquote>
<p>*在初始化MySQL之前是没有data文件夹的，初始化会自动生成，不要自己瞎搞一个data文件夹（没错,这个小可爱就是我）</p>
</blockquote>
<h2 id="安装MySQL服务"><a href="#安装MySQL服务" class="headerlink" title="安装MySQL服务"></a>安装MySQL服务</h2><p>打开cmd命令行（应该还没关吧），cd到bin目录下，输入下面这条命令。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mysqld --install </span><br></pre></td></tr></table></figure>

<blockquote>
<p>其实原本命令是mysqld –install [服务名]，不过如果不写服务名就会默认是mysql。我奉劝各位小可爱不要瞎起名字，MySQL就挺好的。</p>
</blockquote>
<h2 id="启动MySQL服务"><a href="#启动MySQL服务" class="headerlink" title="启动MySQL服务"></a>启动MySQL服务</h2><p>在cmd命令行（默认各位都还开着）输入以下命令</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">net start mysql</span><br></pre></td></tr></table></figure>

<blockquote>
<p>其实这个命令是net start 服务名，用来启动服务的。</p>
</blockquote>
<h2 id="登录MySQL"><a href="#登录MySQL" class="headerlink" title="登录MySQL"></a>登录MySQL</h2><p>在cmd命令行输入以下命令</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mysql -uroot -p</span><br></pre></td></tr></table></figure>

<p>然后，输入密码，就是那个初始密码（没截图的可以重新初始化，重新获得密码）</p>
<h2 id="退出MySQL"><a href="#退出MySQL" class="headerlink" title="退出MySQL"></a>退出MySQL</h2><p>输入以下指令任意一个即可</p>
<p><img src="https://i.loli.net/2021/09/25/JFhHltpoGfvSuNw.png"></p>
<h2 id="删库跑路"><a href="#删库跑路" class="headerlink" title="删库跑路"></a>删库跑路</h2><p>一位优秀的程序员要熟练删库操作（卸载MySQL），虽然你写bug的样子很狼狈，但你删库跑路的背影却很靓仔。</p>
<p><img src="https://i.loli.net/2021/09/25/bN6EIpk9wacdBSH.jpg"></p>
<ol>
<li><p>首先我们要停止MySQL服务</p>
<p>打开cmd输入以下代码</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">net stop mysql</span><br></pre></td></tr></table></figure></li>
<li><p>删掉MySQL文件夹</p>
<p>就是那个解压的文件夹（记得把环境变量也清洗一下）</p>
</li>
<li><p>删掉注册表</p>
<p>打开cmd命令行，输入regedit，运行，然后打开注册表，删除HKEY_LOCAL_MACHINE\SYSTEM\ControlSet001\Services\Eventlog\Application\MySQL文件夹</p>
</li>
<li><p>删除MySQL服务</p>
<p>如果已经将MySQL卸载，但通过“开始-》所有应用-》Windows管理工具-》服务”查看到MySQL服务仍然残留在系统服务里。又不想改服务名，改怎么办呢。只要在CMD里输入一条命令就可以将服务删除：<br>　　sc delete mysql //这里的mysql是你要删除的服务名, 这样一来服务就被删除了。</p>
<blockquote>
<p>如果是通过安装包安装的MySQL，还需要进行软件卸载</p>
<p><img src="https://i.loli.net/2021/09/29/NLGCsQuS7t3VOae.jpg"></p>
<p>就是在这里，找到MySQL应用并删除</p>
</blockquote>
</li>
</ol>
]]></content>
      <categories>
        <category>数据库</category>
      </categories>
      <tags>
        <tag>MySQL</tag>
        <tag>数据库</tag>
      </tags>
  </entry>
  <entry>
    <title>数据库的一些基本概念</title>
    <url>/2021/09/25/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9A%84%E4%B8%80%E4%BA%9B%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><blockquote>
<p>参考价值：已完结、无错误、可参考</p>
</blockquote>
<h3 id="什么是数据库"><a href="#什么是数据库" class="headerlink" title="什么是数据库"></a>什么是数据库</h3><p>数据库(database），简单来说就是存储数据的容器。</p>
<h3 id="什么是数据库管理系统-？"><a href="#什么是数据库管理系统-？" class="headerlink" title="什么是数据库管理系统 ？"></a>什么是数据库管理系统 ？</h3><p>数据库管理系统（DBMS），顾名思义，就是用来操作管理数据库的工具。</p>
<h3 id="什么是SQL-？"><a href="#什么是SQL-？" class="headerlink" title="什么是SQL ？"></a>什么是SQL ？</h3><p>是一种专门用来服务数据库的语言，DBMS一般用SQL来操作数据库。</p>
<h3 id="什么是端口-？"><a href="#什么是端口-？" class="headerlink" title="什么是端口 ？"></a>什么是端口 ？</h3><p>类似于IP地址至于计算机。每一台计算机都有一个唯一的IP地址，而每一个计算机的服务都有一个独一无二的端口号（不同计算机的相同服务端口号是相同的）。</p>
<h3 id="什么是MySQL-？"><a href="#什么是MySQL-？" class="headerlink" title="什么是MySQL ？"></a>什么是MySQL ？</h3><p>MySQL是一种特别常用的DBMS。</p>
<h3 id="数据库、数据库管理系统与SQL的关系："><a href="#数据库、数据库管理系统与SQL的关系：" class="headerlink" title="数据库、数据库管理系统与SQL的关系："></a>数据库、数据库管理系统与SQL的关系：</h3><p><img src="https://i.loli.net/2021/09/25/cShzX5Re4qnyV1M.jpg"></p>
]]></content>
      <categories>
        <category>数据库</category>
      </categories>
      <tags>
        <tag>学习笔记</tag>
        <tag>数据库</tag>
      </tags>
  </entry>
  <entry>
    <title>线性表（二）——顺序储存结构（未完成）</title>
    <url>/2021/09/21/%E7%BA%BF%E6%80%A7%E8%A1%A8%EF%BC%88%E4%BA%8C%EF%BC%89%E2%80%94%E2%80%94%E9%A1%BA%E5%BA%8F%E5%82%A8%E5%AD%98%E7%BB%93%E6%9E%84/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><blockquote>
<p>参考价值: 未完善、有错误、但方法连接没有错误可以拷贝使用</p>
</blockquote>
<hr>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function">operation</span></span><br><span class="line"><span class="function">    <span class="title">InitList</span><span class="params">(L)</span>:初始化操作，建立一个空的线性表L。</span></span><br><span class="line"><span class="function">	<span class="title">ListEmpty</span><span class="params">(L)</span>:若线性表为空，返回<span class="literal">true</span>，否则返回<span class="literal">false</span>。</span></span><br><span class="line"><span class="function">	<span class="title">ClearList</span><span class="params">(*L)</span>:将线性表清空。</span></span><br><span class="line"><span class="function">	<span class="title">GetElem</span><span class="params">(L,i,*e)</span>:将线性表L的第i个位置元素返回给e。</span></span><br><span class="line"><span class="function">    <span class="title">LocateElem</span><span class="params">(L,e)</span>:在线性表L中查找与给定值e相等的元素，如果查找成功，返回该元素在表中的序号表示成功，否则，返回0表示失败。</span></span><br><span class="line"><span class="function">    <span class="title">ListInsert</span><span class="params">(*L,i,e)</span>:在线性表L中的第i个位置插入新元素e。</span></span><br><span class="line"><span class="function">    <span class="title">ListDelet</span><span class="params">(*L,i,*e)</span>:删除线性表L中第i个位置的元素，并用e返回其值。</span></span><br><span class="line"><span class="function">    <span class="title">ListLength</span><span class="params">(L)</span>:返回线性表L的元素个数。</span></span><br></pre></td></tr></table></figure>

<table>
<thead>
<tr>
<th>方法&amp;链接</th>
</tr>
</thead>
<tbody><tr>
<td><a href="https://dengxiayouhun.github.io/2021/09/27/%E5%88%9D%E5%A7%8B%E5%8C%96%E7%BA%BF%E6%80%A7%E8%A1%A8%EF%BC%88%E9%A1%BA%E5%BA%8F%E7%BB%93%E6%9E%84%EF%BC%89/">初始化线性表（顺序结构）</a></td>
</tr>
<tr>
<td><a href="https://dengxiayouhun.github.io/2021/09/27/%E5%88%A4%E6%96%AD%E7%BA%BF%E6%80%A7%E8%A1%A8%E6%98%AF%E5%90%A6%E4%B8%BA%E7%A9%BA%EF%BC%88%E9%A1%BA%E5%BA%8F%E7%BB%93%E6%9E%84%EF%BC%89/">判断线性表是否为空（顺序结构）</a></td>
</tr>
<tr>
<td><a href="https://dengxiayouhun.github.io/2021/09/27/%E7%BA%BF%E6%80%A7%E8%A1%A8%E7%9A%84%E6%8F%92%E5%85%A5%EF%BC%88%E9%A1%BA%E5%BA%8F%E7%BB%93%E6%9E%84%EF%BC%89/">线性表的插入（顺序结构）</a></td>
</tr>
<tr>
<td><a href="https://dengxiayouhun.github.io/2021/09/27/%E6%9F%A5%E6%89%BE%E7%BA%BF%E6%80%A7%E8%A1%A8%E4%B8%AD%E7%BB%99%E6%98%AF%E5%90%A6%E6%9C%89%E6%9F%90%E5%85%83%E7%B4%A0%EF%BC%88%E9%A1%BA%E5%BA%8F%E7%BB%93%E6%9E%84%EF%BC%89/">查找线性表中是否有某元素（顺序结构）</a></td>
</tr>
<tr>
<td><a href=""></a></td>
</tr>
<tr>
<td><a href="https://dengxiayouhun.github.io/2021/09/27/%E6%B8%85%E7%A9%BA%E7%BA%BF%E6%80%A7%E8%A1%A8%EF%BC%88%E9%A1%BA%E5%BA%8F%E7%BB%93%E6%9E%84%EF%BC%89/">清空线性表（顺序结构）</a></td>
</tr>
</tbody></table>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">这个程序要完成以下任务：</span></span><br><span class="line"><span class="comment">	1.定义线性表类型的对象L和Lb</span></span><br><span class="line"><span class="comment">	2.初始化线性表L，并输出其长度。</span></span><br><span class="line"><span class="comment">	3.在表头依次插入1~5，输出其长度，并判断L是否为空。</span></span><br><span class="line"><span class="comment">	4.清空L，输出其长度，并判断其是否为空。</span></span><br><span class="line"><span class="comment">	5.在表尾依次插入1~10，依次输出L的元素和它的长度。</span></span><br><span class="line"><span class="comment">	6.在表头插入0，依次输出L的元素和它的长度。</span></span><br><span class="line"><span class="comment">	7.输出第五个元素的值；</span></span><br><span class="line"><span class="comment">      判断元素3在不在L中，若在，则输出其位置，若不在，则输出”没有该元素“；</span></span><br><span class="line"><span class="comment">      依次输出L的元素。</span></span><br><span class="line"><span class="comment">    8.删除第5个元素，输出其值，并依次输出L的元素。</span></span><br><span class="line"><span class="comment">    9.初始化线性表Lb，并将6~15依次插入到表尾。</span></span><br><span class="line"><span class="comment">    10.求L与Lb的并集并将并集赋值给L，并输出Lb。</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> OK 1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ERROR 0</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> TRUE 1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> FAlSE 0</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXSIZE 20</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">int</span> ElemType;<span class="comment">//ElemType是线性表中数据元素的类型，是抽象数据类型。</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    ElemType data[MAXSIZE];</span><br><span class="line">    <span class="keyword">int</span> length;</span><br><span class="line">&#125;SqList;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">int</span> Status;<span class="comment">//Status是函数的类型，也是抽象数据类型。</span></span><br><span class="line"><span class="comment">//初始化顺序线性表</span></span><br><span class="line"><span class="function">Status <span class="title">InitList</span><span class="params">(SqList *L)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    L-&gt;length=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">return</span> OK;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//判断顺序线性表是否为空，</span></span><br><span class="line"><span class="function">Status <span class="title">ListEmpty</span><span class="params">(SqList L)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(L.length==<span class="number">0</span>)</span><br><span class="line">        <span class="keyword">return</span> TRUE;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="keyword">return</span> FALSE;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//将顺序线性表重置为空表</span></span><br><span class="line"><span class="function">Status <span class="title">ClearList</span><span class="params">(SqLIst *L)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    L-&gt;length=<span class="number">0</span>;<span class="comment">//将线性表重置为空表</span></span><br><span class="line">    <span class="keyword">return</span> OK;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//获取顺序线性表中第i个元素并把值赋给e</span></span><br><span class="line"><span class="function">Status <span class="title">GetElem</span><span class="params">(SqList L,<span class="keyword">int</span> i,ElemType *e)</span></span>&#123;</span><br><span class="line">	<span class="keyword">if</span>(L.length==<span class="number">0</span>||i&lt;<span class="number">1</span>||i&gt;L.length)<span class="comment">//判断i是否合法</span></span><br><span class="line">        <span class="keyword">return</span> ERROR;</span><br><span class="line">    </span><br><span class="line">    *e=L.data[i<span class="number">-1</span>];<span class="comment">//将第i个数据元素赋值给e。</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> OK;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//求e在顺序线性表中的位置</span></span><br><span class="line"><span class="function">Status <span class="title">LocateList</span><span class="params">(SqList L,ElemType e）</span></span></span><br><span class="line"><span class="params"><span class="function">&#123;</span></span></span><br><span class="line"><span class="params"><span class="function">    <span class="keyword">int</span> i;</span></span></span><br><span class="line"><span class="params"><span class="function">    <span class="keyword">if</span>(L.length==<span class="number">0</span>)<span class="comment">//判断线性表是否为空</span></span></span></span><br><span class="line"><span class="params"><span class="function">        <span class="keyword">return</span> ERROR;</span></span></span><br><span class="line"><span class="params"><span class="function">    <span class="comment">//在线性表中寻找数据元素e，并获取其位置</span></span></span></span><br><span class="line"><span class="params"><span class="function">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;L.length;i++)</span></span></span><br><span class="line"><span class="params"><span class="function">    &#123;</span></span></span><br><span class="line"><span class="params"><span class="function">        <span class="keyword">if</span>(L.data[i]==e)</span></span></span><br><span class="line"><span class="params"><span class="function">            <span class="keyword">break</span>;</span></span></span><br><span class="line"><span class="params"><span class="function">    &#125;</span></span></span><br><span class="line"><span class="params"><span class="function">    <span class="comment">//返回数据元素e在线性表的位置</span></span></span></span><br><span class="line"><span class="params"><span class="function">    <span class="keyword">return</span> i+<span class="number">1</span>;</span></span></span><br><span class="line"><span class="params"><span class="function">&#125;</span></span></span><br><span class="line"><span class="params"><span class="function"><span class="comment">//将数据元素e插入到数据表L的第i个位置之前</span></span></span></span><br><span class="line"><span class="params"><span class="function">Status ListInsert(SqList *L,<span class="keyword">int</span> i,ElemType e)</span></span></span><br><span class="line"><span class="params"><span class="function">&#123;</span></span></span><br><span class="line"><span class="params"><span class="function">    <span class="keyword">int</span> k;</span></span></span><br><span class="line"><span class="params"><span class="function">    <span class="keyword">if</span>(L-&gt;length == MAXSIZE)<span class="comment">//判断线性表是否已满</span></span></span></span><br><span class="line"><span class="params"><span class="function">        <span class="keyword">return</span> ERROR;</span></span></span><br><span class="line"><span class="params"><span class="function">    <span class="keyword">if</span>(i &lt; <span class="number">1</span> ||i &gt; L-&gt;length+<span class="number">1</span>)<span class="comment">//判断i是否有效</span></span></span></span><br><span class="line"><span class="params"><span class="function">        <span class="keyword">return</span> ERROR;</span></span></span><br><span class="line"><span class="params"><span class="function">    <span class="comment">//将第i位空出</span></span></span></span><br><span class="line"><span class="params"><span class="function">    <span class="keyword">if</span>(i &lt;= L.length)&#123;</span></span></span><br><span class="line"><span class="params"><span class="function">        <span class="keyword">for</span>(k = L-&gt;length<span class="number">-1</span>; k &gt;= i<span class="number">-1</span>; k--)</span></span></span><br><span class="line"><span class="params"><span class="function">            L-&gt;data[k+<span class="number">1</span>]=L-&gt;data[k];</span></span></span><br><span class="line"><span class="params"><span class="function">    &#125;</span></span></span><br><span class="line"><span class="params"><span class="function">    <span class="comment">//填充第i位的元素</span></span></span></span><br><span class="line"><span class="params"><span class="function">    L-&gt;data[i<span class="number">-1</span>]=e;</span></span></span><br><span class="line"><span class="params"><span class="function">    <span class="comment">//线性表长度+1</span></span></span></span><br><span class="line"><span class="params"><span class="function">    L-&gt;length++;</span></span></span><br><span class="line"><span class="params"><span class="function">    <span class="keyword">return</span> OK;</span></span></span><br><span class="line"><span class="params"><span class="function">&#125;</span></span></span><br><span class="line"><span class="params"><span class="function"><span class="comment">//删除线性表中的第i个数据元素,并用e返回其值</span></span></span></span><br><span class="line"><span class="params"><span class="function">Status ListDelete(SqList *L, <span class="keyword">int</span> i, ElemType *e)&#123;</span></span></span><br><span class="line"><span class="params"><span class="function">    <span class="keyword">int</span> k;</span></span></span><br><span class="line"><span class="params"><span class="function">    <span class="comment">//判断方法是否有意义</span></span></span></span><br><span class="line"><span class="params"><span class="function">    <span class="keyword">if</span>(L-&gt;length == <span class="number">0</span> || i &lt; <span class="number">1</span> || i &gt; L-&gt;length)</span></span></span><br><span class="line"><span class="params"><span class="function">        <span class="keyword">return</span> ERROR;</span></span></span><br><span class="line"><span class="params"><span class="function">    <span class="comment">//用e返回第i个元素的值</span></span></span></span><br><span class="line"><span class="params"><span class="function">    *e = L-&gt;data[i - <span class="number">1</span>];</span></span></span><br><span class="line"><span class="params"><span class="function">    <span class="comment">//删除第i个元素，并将后面的元素前移</span></span></span></span><br><span class="line"><span class="params"><span class="function">    <span class="keyword">for</span>(k = i;k &lt; L-&gt;length;k++)</span></span></span><br><span class="line"><span class="params"><span class="function">        L-&gt;data[k<span class="number">-1</span>] = L-&gt;data[k]</span></span></span><br><span class="line"><span class="params"><span class="function">    <span class="comment">//线性表长度-1</span></span></span></span><br><span class="line"><span class="params"><span class="function">    L-&gt;length--;</span></span></span><br><span class="line"><span class="params"><span class="function">    <span class="keyword">return</span> OK;</span></span></span><br><span class="line"><span class="params"><span class="function">&#125;</span></span></span><br><span class="line"><span class="params"><span class="function">Status ListTraverse(SqList L)&#123;</span></span></span><br><span class="line"><span class="params"><span class="function">    <span class="keyword">int</span> i;</span></span></span><br><span class="line"><span class="params"><span class="function">    <span class="keyword">for</span>(i=<span class="number">0</span>; i&lt;L.length;i++)&#123;</span></span></span><br><span class="line"><span class="params"><span class="function">        visit(L.data[i]);</span></span></span><br><span class="line"><span class="params"><span class="function">    &#125;</span></span></span><br><span class="line"><span class="params"><span class="function">    <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span></span></span><br><span class="line"><span class="params"><span class="function">    <span class="keyword">return</span> OK;</span></span></span><br><span class="line"><span class="params"><span class="function">&#125;</span></span></span><br><span class="line"><span class="params"><span class="function">Status visit(ElemType c)&#123;</span></span></span><br><span class="line"><span class="params"><span class="function">	<span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,c);</span></span></span><br><span class="line"><span class="params"><span class="function">    <span class="keyword">return</span> OK;</span></span></span><br><span class="line"><span class="params"><span class="function">&#125;</span></span></span><br><span class="line"><span class="params"><span class="function"><span class="keyword">void</span> unionL(SqList *La,SqList Lb)&#123;</span></span></span><br><span class="line"><span class="params"><span class="function">    <span class="keyword">int</span> La_len,Lb_len,i;</span></span></span><br><span class="line"><span class="params"><span class="function">    Elemtype e;</span></span></span><br><span class="line"><span class="params"><span class="function">    La_len = La-&gt;length;</span></span></span><br><span class="line"><span class="params"><span class="function">    Lb_len = Lb.length;</span></span></span><br><span class="line"><span class="params"><span class="function">    </span></span></span><br><span class="line"><span class="params"><span class="function">    <span class="keyword">for</span>(i=<span class="number">1</span>; i &lt;= Lb_len; i++)&#123;</span></span></span><br><span class="line"><span class="params"><span class="function">	GetElem(Lb, i, &amp;e);</span></span></span><br><span class="line"><span class="params"><span class="function">    <span class="keyword">if</span>(!LocateElem(*La, e))</span></span></span><br><span class="line"><span class="params"><span class="function">        ListInsert(La,++La_len,e);</span></span></span><br><span class="line"><span class="params"><span class="function">    &#125;</span></span></span><br><span class="line"><span class="params"><span class="function">&#125;</span></span></span><br><span class="line"><span class="params"><span class="function"><span class="keyword">int</span> main()</span></span></span><br><span class="line"><span class="params"><span class="function">&#123;</span></span></span><br><span class="line"><span class="params"><span class="function">    SqList L;<span class="comment">//定义一个线性表类型的对象L（虽然C语言中不这么叫，但我还是习惯性地称之为对象（调皮））</span></span></span></span><br><span class="line"><span class="params"><span class="function">    SqList Lb;<span class="comment">//定义另一个线性表对象Lb</span></span></span></span><br><span class="line"><span class="params"><span class="function">    </span></span></span><br><span class="line"><span class="params"><span class="function">    ElemType e;</span></span></span><br><span class="line"><span class="params"><span class="function">    Status i;</span></span></span><br><span class="line"><span class="params"><span class="function">    <span class="keyword">int</span> j,k;</span></span></span><br><span class="line"><span class="params"><span class="function">    </span></span></span><br><span class="line"><span class="params"><span class="function">    <span class="comment">/* 初始化线性表L，并输出其长度。*/</span></span></span></span><br><span class="line"><span class="params"><span class="function">    i=InitList(&amp;L);</span></span></span><br><span class="line"><span class="params"><span class="function">    <span class="built_in">printf</span>(<span class="string">&quot;初始化L后：L.length=%d\n&quot;</span>,L.length);</span></span></span><br><span class="line"><span class="params"><span class="function">   </span></span></span><br><span class="line"><span class="params"><span class="function">    <span class="comment">/* 在表头依次插入1~5，输出其长度，并判断L是否为空。*/</span></span></span></span><br><span class="line"><span class="params"><span class="function">    <span class="keyword">for</span>(j=<span class="number">1</span>;j&lt;=<span class="number">5</span>;j++)</span></span></span><br><span class="line"><span class="params"><span class="function">        i=LIstInsert(&amp;L,<span class="number">1</span>,j);</span></span></span><br><span class="line"><span class="params"><span class="function">    <span class="built_in">printf</span>(<span class="string">&quot;在L的表头依次插入1~5后：L.data=&quot;</span>);</span></span></span><br><span class="line"><span class="params"><span class="function">    ListTraverse(L);</span></span></span><br><span class="line"><span class="params"><span class="function">    <span class="built_in">printf</span>(<span class="string">&quot;L.length=%d \n&quot;</span>,L.length);</span></span></span><br><span class="line"><span class="params"><span class="function">    i=ListEmpty(L);</span></span></span><br><span class="line"><span class="params"><span class="function">    <span class="built_in">printf</span>(<span class="string">&quot;L是否空：i=%d(1:是 0：否)\n&quot;</span>,i);</span></span></span><br><span class="line"><span class="params"><span class="function">    </span></span></span><br><span class="line"><span class="params"><span class="function">    <span class="comment">/* 清空L，输出其长度，并判断其是否为空。*/</span></span></span></span><br><span class="line"><span class="params"><span class="function">    i=ClearList(&amp;L);</span></span></span><br><span class="line"><span class="params"><span class="function">    <span class="built_in">printf</span>(<span class="string">&quot;清空L后，L.length=%d \n&quot;</span>,L.length);</span></span></span><br><span class="line"><span class="params"><span class="function">    i=ListEmpty(L);</span></span></span><br><span class="line"><span class="params"><span class="function">    <span class="built_in">printf</span>(<span class="string">&quot;L是否为空：i=%d(1:是 0:否)\n&quot;</span>,i);</span></span></span><br><span class="line"><span class="params"><span class="function">    </span></span></span><br><span class="line"><span class="params"><span class="function">    <span class="comment">/* 在表尾依次插入1~10，依次输出L的元素和它的长度。*/</span></span></span></span><br><span class="line"><span class="params"><span class="function">    <span class="keyword">for</span>(j=<span class="number">1</span>;j&lt;=<span class="number">10</span>;j++)</span></span></span><br><span class="line"><span class="params"><span class="function">        ListInsert(&amp;L,j,j);</span></span></span><br><span class="line"><span class="params"><span class="function">    <span class="built_in">printf</span>(<span class="string">&quot;在L的表尾依次插入1~10后：L.data=&quot;</span>);</span></span></span><br><span class="line"><span class="params"><span class="function">    ListTraverse(L);</span></span></span><br><span class="line"><span class="params"><span class="function">    <span class="built_in">printf</span>(<span class="string">&quot;L.length=%d \n&quot;</span>,L.length);</span></span></span><br><span class="line"><span class="params"><span class="function">    </span></span></span><br><span class="line"><span class="params"><span class="function">    <span class="comment">/* 在表头插入0，依次输出L的元素和它的长度。*/</span></span></span></span><br><span class="line"><span class="params"><span class="function">    ListInsert(&amp;L,<span class="number">1</span>,<span class="number">0</span>);</span></span></span><br><span class="line"><span class="params"><span class="function">    <span class="built_in">printf</span>(<span class="string">&quot;在表头插入0后：L.data=&quot;</span>);</span></span></span><br><span class="line"><span class="params"><span class="function">    ListTraverse(L);</span></span></span><br><span class="line"><span class="params"><span class="function">    <span class="built_in">printf</span>(<span class="string">&quot;L.length=&quot;</span>,L.length);</span></span></span><br><span class="line"><span class="params"><span class="function">    </span></span></span><br><span class="line"><span class="params"><span class="function">    <span class="comment">/* 输出第五个元素的值；</span></span></span></span><br><span class="line"><span class="comment"><span class="params"><span class="function">       判断元素3在不在L中，若在，则输出其位置，若不在，则输出”没有该元素“；</span></span></span></span><br><span class="line"><span class="comment"><span class="params"><span class="function">       依次输出L的元素。*/</span></span></span></span><br><span class="line"><span class="params"><span class="function">    GetElem(L,<span class="number">5</span>,&amp;e);</span></span></span><br><span class="line"><span class="params"><span class="function">    <span class="built_in">printf</span>(<span class="string">&quot;第五个元素的值为：%d&quot;</span>,e);</span></span></span><br><span class="line"><span class="params"><span class="function">    <span class="keyword">for</span>(j=<span class="number">3</span>;j&lt;=<span class="number">4</span>;j++)</span></span></span><br><span class="line"><span class="params"><span class="function">    &#123;</span></span></span><br><span class="line"><span class="params"><span class="function">        k=LocateElem(L,j);</span></span></span><br><span class="line"><span class="params"><span class="function">        <span class="keyword">if</span>(k)</span></span></span><br><span class="line"><span class="params"><span class="function">            <span class="built_in">printf</span>(<span class="string">&quot;第%d个元素的值为%d\n&quot;</span>,k,j);</span></span></span><br><span class="line"><span class="params"><span class="function">        <span class="keyword">else</span></span></span></span><br><span class="line"><span class="params"><span class="function">            <span class="built_in">printf</span>(<span class="string">&quot;没有值为%d的元素\n&quot;</span>,j);</span></span></span><br><span class="line"><span class="params"><span class="function">    &#125;</span></span></span><br><span class="line"><span class="params"><span class="function">    <span class="built_in">printf</span>(<span class="string">&quot;依次输出表L的元素：&quot;</span>)；</span></span></span><br><span class="line"><span class="params"><span class="function">    ListTraverse(L);</span></span></span><br><span class="line"><span class="params"><span class="function">    </span></span></span><br><span class="line"><span class="params"><span class="function">    <span class="comment">/* 删除第5个元素，输出其值，并依次输出L的元素。*/</span></span></span></span><br><span class="line"><span class="params"><span class="function">    j=<span class="number">5</span>;</span></span></span><br><span class="line"><span class="params"><span class="function">    ListDelet(&amp;L,j,&amp;e);</span></span></span><br><span class="line"><span class="params"><span class="function">    <span class="built_in">printf</span>(<span class="string">&quot;删除第%d个元素值为：%d\n&quot;</span>,j,e);</span></span></span><br><span class="line"><span class="params"><span class="function">    <span class="built_in">printf</span>(<span class="string">&quot;依次输出L的元素：&quot;</span>)；</span></span></span><br><span class="line"><span class="params"><span class="function">    ListTraverse(L);</span></span></span><br><span class="line"><span class="params"><span class="function">    </span></span></span><br><span class="line"><span class="params"><span class="function">    <span class="comment">/* 初始化线性表Lb，并将6~15依次插入到表尾。*/</span></span></span></span><br><span class="line"><span class="params"><span class="function">    i=InitList(&amp;Lb);</span></span></span><br><span class="line"><span class="params"><span class="function">    <span class="keyword">for</span>(j=<span class="number">6</span>;j&lt;=<span class="number">15</span>;j++)</span></span></span><br><span class="line"><span class="params"><span class="function">        i=ListInsert(&amp;Lb,<span class="number">1</span>,j);</span></span></span><br><span class="line"><span class="params"><span class="function">    </span></span></span><br><span class="line"><span class="params"><span class="function">    unionL(&amp;L,Lb);<span class="comment">//求L与Lb的并集并将并集赋值给L。</span></span></span></span><br><span class="line"><span class="params"><span class="function">    </span></span></span><br><span class="line"><span class="params"><span class="function">    <span class="built_in">printf</span>(<span class="string">&quot;依次输出合并了Lb的L的元素：&quot;</span>)；</span></span></span><br><span class="line"><span class="params"><span class="function">    ListTraverse(L);</span></span></span><br><span class="line"><span class="params"><span class="function">    </span></span></span><br><span class="line"><span class="params"><span class="function">    <span class="keyword">return</span> <span class="number">0</span>;</span></span></span><br><span class="line"><span class="params"><span class="function">&#125;</span></span></span><br><span class="line"><span class="params"><span class="function"></span></span></span><br><span class="line"><span class="params"><span class="function"></span></span></span><br></pre></td></tr></table></figure>





]]></content>
      <categories>
        <category>数据结构与算法</category>
      </categories>
      <tags>
        <tag>学习笔记</tag>
        <tag>数据结构与算法</tag>
      </tags>
  </entry>
  <entry>
    <title>算法(未完成)</title>
    <url>/2021/09/08/%E7%AE%97%E6%B3%95/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><blockquote>
<p>参考价值：未完结、臃肿、不完善、不建议参考使用</p>
</blockquote>
<hr>
<h2 id="算法的定义"><a href="#算法的定义" class="headerlink" title="算法的定义"></a>算法的定义</h2><p>算法是解决特定问题求解步骤的描述，在计算机中表现为指令的有限序列。并且每条指令表示一个或多个操作。</p>
<h3 id="为什么要学习更加优秀的算法？"><a href="#为什么要学习更加优秀的算法？" class="headerlink" title="为什么要学习更加优秀的算法？"></a>为什么要学习更加优秀的算法？</h3><p>在此之前先讲一个伟大数学家高斯关于算法的故事：</p>
<blockquote>
<p>据说18世纪生于德国小村庄的高斯，上小学的一天，课堂很乱，老师非常生气。于是老师在放学时，就要求每个学生都计算1+2+3+···+100的结果，谁先算出来谁先回家。</p>
<p>天才当然不会被这样的问题难倒，高斯很快就的处理了答案，是5050.老师非常惊讶，因为他自己也是通过1+2=3，3+3=6,6+4=10, ······，4950+100=5050这样算出来的，也算了很久很久，怕算错，还算了两三遍。可眼前这个少年，一个上小学的孩子为何可以这么快的得出结果？</p>
<p>高斯解释道：sum=1+2+3+···+99+100</p>
<p>​                     sum=100+99+98+···+2+1</p>
<p>​                     2 x sum=101+101+101+···+101=101 x 100=10100</p>
<p>​                     sump>
</blockquote>
<p>这里老师和高斯就用了两种算法：</p>
<p>老师的算法：</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> sum=<span class="number">0</span>,n=<span class="number">100</span>;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">&#123;</span><br><span class="line">    sum=sum+i;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,sum);</span><br></pre></td></tr></table></figure>

<p>高斯的算法：</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> sum=<span class="number">0</span>,n=<span class="number">100</span>;</span><br><span class="line">sum=(<span class="number">1</span>+n)*n/<span class="number">2</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,sum);</span><br></pre></td></tr></table></figure>

<p>很明显，高斯的算法比老师的算法要好得多，尤其是当n的值越来越大时，高斯的算法简直是对老师算法降维打击。</p>
<p>现在我们回到主题：<strong>为什么我们要学习更加优秀的算法？</strong></p>
<p>很简单，节约算力。</p>
<p>众所周知，计算机的算力要远远强于人类。但如果把n的值换成100亿，计算机用老师的算法，我们用高斯的算法，谁算的更快呢？很显然我们能够轻松地在两三分钟内算出结果，而计算机很可能算一年也算不出来，甚至可能直接嗝屁。</p>
<p>所以说，一个优秀的算法能够让我们用有限的算力处理更复杂的问题，而且往往越秀的算法往往对垃圾算法是降维打击的。</p>
<h2 id="算法的特性"><a href="#算法的特性" class="headerlink" title="算法的特性"></a>算法的特性</h2><p>算法有五个基本特性：<strong>输入</strong>、<strong>输出</strong>、<strong>有穷性</strong>、<strong>确定性</strong>和<strong>可行性</strong></p>
<h3 id="输入输出"><a href="#输入输出" class="headerlink" title="输入输出"></a>输入输出</h3><ul>
<li><p>算法有零个或者多个输入</p>
</li>
<li><p>算法至少有一个或者多个输出</p>
<p>这个输出值可以是打印输出，也可以是返回一个或多个值。</p>
</li>
</ul>
<h3 id="有穷性"><a href="#有穷性" class="headerlink" title="有穷性"></a>有穷性</h3><p>指算法在执行有限的步骤后，自动结束而不会出现无限循环，并且每一个步骤在可接受的时间内完成。</p>
<h3 id="确定性"><a href="#确定性" class="headerlink" title="确定性"></a>确定性</h3><p>算法的每一步骤都具有确定的含义，不会出现二义性。</p>
<h3 id="可行性"><a href="#可行性" class="headerlink" title="可行性"></a>可行性</h3><p>算法的每一步都必须是可行的，也就是说，每一步都能够通过执行有限次数完成</p>
<h2 id="算法的设计要求"><a href="#算法的设计要求" class="headerlink" title="算法的设计要求"></a>算法的设计要求</h2><p>我们要尽可能地去写一些好的算法，然而什么是好的算法呢？</p>
<p>好的算法一般具有<strong>正确性</strong>、<strong>可读性</strong>、<strong>健壮性</strong>、<strong>时间效率高</strong>和<strong>存储量低</strong>的特点。</p>
<h3 id="正确性"><a href="#正确性" class="headerlink" title="正确性"></a>正确性</h3><p>算法的正确性是指算法至少应该具有输入、输出和加工处理无歧义性能正确反应web提的需求，能够i要得到问题的正确答案。</p>
<ul>
<li>算法正确性的级别：<ol>
<li>算法程序的语法没有错误</li>
<li>算法程序对于合法的输入数据能够得到满足需求的输出结果</li>
<li>算法程序对于非法的输入数据能够给出错误说明</li>
<li>算法程序对于精心选择的、刁钻的测试数据都能给出满足需求的输出结果</li>
</ol>
</li>
<li>一般我们对算法正确性的要求？<br>算法正确性的四个级别，第一层是最容易做到的，第四层是最难做到的。通常我们如果要写出第四层的算法会消耗大量的时间和精力。因此，综合考虑，一般情况下，我们把第三层作为一个算法是否正确的标准。</li>
</ul>
<h3 id="可读性"><a href="#可读性" class="headerlink" title="可读性"></a>可读性</h3><p>算法设计的另一目的是为了便于理解阅读和交流。</p>
<p>算法不仅需要让自己读懂，而且需要让别人读懂。</p>
<h3 id="健壮性"><a href="#健壮性" class="headerlink" title="健壮性"></a>健壮性</h3><p>健壮性指当输入数据不合法时，算法也能做出相应处理，而不是运行异常，或者输出莫名其妙的结果。</p>
<h3 id="时间效率高和存储量低"><a href="#时间效率高和存储量低" class="headerlink" title="时间效率高和存储量低"></a>时间效率高和存储量低</h3><p> 好的算法应该具有时间效率高和存储量低的特性。</p>
<h2 id="算法效率的度量方法"><a href="#算法效率的度量方法" class="headerlink" title="算法效率的度量方法"></a>算法效率的度量方法</h2><h3 id="事后统计法"><a href="#事后统计法" class="headerlink" title="事后统计法"></a>事后统计法</h3><p>事后统计法是指通过设计好的程序和数据来对不同的算法进行测试，比较它们运行的时间的多少。</p>
<ul>
<li>事后统计法的缺点：<ol>
<li>必须把算法写出来后才能直达票算法的效率，如果算法不符合要求，写算法花费的工夫就会竹篮打水一场空。</li>
<li>运行时间不完全依赖于算法，还和软件、操作系统、编译器等因素有关。甚至同一台计算机不同时候测试同一个算法，得到的运行时间也是不完全相同的，因为运行时间还和内存的占用情况相关。因此，测出的时间有时并不能反映什么。</li>
<li>算法的测试数据实际困难，不同算法间运行速度的差异往往与数据规模有关。比如果我们要将0随机数排序，那么无论我们用任何算法，运行时间几乎都差不多。而如果给一百万个随机数排列，不同算法之间差异会很大，而且有些算法对CPU相当不友好0.0!</li>
</ol>
</li>
</ul>
<h3 id="事前分析估算法"><a href="#事前分析估算法" class="headerlink" title="事前分析估算法"></a>事前分析估算法</h3><ul>
<li><p>一个高级语言编译的程序运行时间取决于哪些因素？</p>
<ol>
<li>算法采用的方法、策略</li>
<li>编译产生的代码的质量</li>
<li>问题的输入规模</li>
<li>机器执行指令的速度</li>
</ol>
</li>
</ul>
<h2 id="函数的渐近增长"><a href="#函数的渐近增长" class="headerlink" title="函数的渐近增长"></a>函数的渐近增长</h2><h2 id="算法的时间复杂度"><a href="#算法的时间复杂度" class="headerlink" title="算法的时间复杂度"></a>算法的时间复杂度</h2><h3 id="算法时间复杂度定义"><a href="#算法时间复杂度定义" class="headerlink" title="算法时间复杂度定义"></a>算法时间复杂度定义</h3><h3 id="推导大O阶方法"><a href="#推导大O阶方法" class="headerlink" title="推导大O阶方法"></a>推导大<em>O</em>阶方法</h3><h3 id="常数阶"><a href="#常数阶" class="headerlink" title="常数阶"></a>常数阶</h3><h3 id="线性阶"><a href="#线性阶" class="headerlink" title="线性阶"></a>线性阶</h3><h3 id="对数阶"><a href="#对数阶" class="headerlink" title="对数阶"></a>对数阶</h3><h3 id="平方阶"><a href="#平方阶" class="headerlink" title="平方阶"></a>平方阶</h3><h2 id="常见的时间复杂度"><a href="#常见的时间复杂度" class="headerlink" title="常见的时间复杂度"></a>常见的时间复杂度</h2><h2 id="算法的空间复杂度"><a href="#算法的空间复杂度" class="headerlink" title="算法的空间复杂度"></a>算法的空间复杂度</h2>]]></content>
      <categories>
        <category>数据结构与算法</category>
      </categories>
      <tags>
        <tag>学习笔记</tag>
        <tag>数据结构与算法</tag>
      </tags>
  </entry>
  <entry>
    <title>数据结构</title>
    <url>/2021/09/06/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><blockquote>
<p>参考价值：已完结、可作为教程使用</p>
</blockquote>
<hr>
<h1 id="数据"><a href="#数据" class="headerlink" title="数据"></a>数据</h1><h2 id="数据-data"><a href="#数据-data" class="headerlink" title="数据(data)"></a>数据(data)</h2><ul>
<li><p>什么是数据？</p>
<p>数据就是描述客观事物的符号，可以是字符、数字、视频、音频、图片等。</p>
</li>
<li><p>数据有什么特点？</p>
<ol>
<li>可以被计算机识别</li>
<li>可以被计算级操作</li>
</ol>
</li>
</ul>
<h2 id="数据元素-data-element"><a href="#数据元素-data-element" class="headerlink" title="数据元素(data element)"></a>数据元素(data element)</h2><p>数据元素是组成数据的、有一定意义的基本单位，在计算机中通常作为整体处理。（也称结点、元素、记录或者顶点）</p>
<blockquote>
<p>比如：在畜禽类这个数据中，鸡、鸭、牛、羊就都是是数据元素。</p>
</blockquote>
<h2 id="数据项-（date-item）"><a href="#数据项-（date-item）" class="headerlink" title="数据项 （date item）"></a>数据项 （date item）</h2><p>一个数据元素可以由若干个数据项组成</p>
<blockquote>
<p>比如：人这样的数据元素可以有鼻子、嘴巴、眼睛、手、脚这样的数据项，也可以有名字、性别、年龄、家庭住址、身份证号这样的数据项。</p>
</blockquote>
<h3 id="注意："><a href="#注意：" class="headerlink" title="注意："></a>注意：</h3><ul>
<li><p>数据项是不可分割的最小单位</p>
</li>
<li><p>通常研究时我们研究的基本单位是数据元素</p>
<blockquote>
<p>比如：当我们研究生物时，我们会以猪、牛、羊等数据元素为基本研究单位，而不是以牛的眼睛、牛的尾巴等数据项作为基本单位去研究。</p>
</blockquote>
</li>
</ul>
<h2 id="数据对象-data-object"><a href="#数据对象-data-object" class="headerlink" title="数据对象(data object)"></a>数据对象(data object)</h2><p>​     数据对象是<strong>性质相同</strong>的数据元素的集合，是数据的子集。</p>
<ul>
<li><p>什么是性质相同？</p>
<p>性质相同就是两个数据元素具有相同数量和类型的数据项。</p>
</li>
<li><p>数据和数据对象</p>
<p>由于数据对象是数据的子集，在实际应用中，数据对象往往和数据有相同的性质。在不产生混淆的情况下，我们都将数据对象简称为数据。</p>
<blockquote>
<table>
<thead>
<tr>
<th align="center">姓名</th>
<th align="center">性别</th>
<th align="center">年龄</th>
</tr>
</thead>
<tbody><tr>
<td align="center">小明</td>
<td align="center">男</td>
<td align="center">12</td>
</tr>
<tr>
<td align="center">小红</td>
<td align="center">女</td>
<td align="center">11</td>
</tr>
<tr>
<td align="center">小磊</td>
<td align="center">男</td>
<td align="center">13</td>
</tr>
</tbody></table>
<table>
<thead>
<tr>
<th align="center">课程名n</th>
<th align="center">学时</th>
<th align="center">学分</th>
</tr>
</thead>
<tbody><tr>
<td align="center">数据结构与算法</td>
<td align="center">40</td>
<td align="center">5</td>
</tr>
<tr>
<td align="center">计算机组成原理</td>
<td align="center">25</td>
<td align="center">4</td>
</tr>
<tr>
<td align="center">操作系统</td>
<td align="center">20</td>
<td align="center">4</td>
</tr>
</tbody></table>
<p>两个列表都是数据，两个列表是两个数据对象，列表的每一行都是一个数据元素，每一列都是数据项。</p>
</blockquote>
</li>
</ul>
<h1 id="数据结构-data-structure"><a href="#数据结构-data-structure" class="headerlink" title="数据结构(data structure)"></a>数据结构(data structure)</h1><p>数据之间都不是完全独立存在的，不同数据之间都特定的关系，这些关系就是<strong>结构</strong></p>
<ul>
<li>按照视角的不同，我们可以把数据结构分为<strong>逻辑结构</strong>和<strong>物理结构</strong></li>
</ul>
<h2 id="逻辑结构"><a href="#逻辑结构" class="headerlink" title="逻辑结构"></a>逻辑结构</h2><p>逻辑结构是数据对象中数据元素之间的相互关系</p>
<ol>
<li><p>集合结构</p>
<p>集合结构中的数据元素除了在一个集合之外，没有任何其他关系。</p>
<blockquote>
<p>一些数学中的数字集合，比如数据对象自然数中的是数据元素1、2、3、4、5之间就没有任何和其他的逻辑关系。</p>
</blockquote>
</li>
<li><p>线性结构</p>
<p>线性结构中的数据元素是一对一的关系。</p>
</li>
<li><p>树形结构</p>
<p>树形结构中的数据元素之间存在一对多的关系。</p>
</li>
<li><p>图形结构</p>
<p>图形结构的是数据元素是多对多的关系。</p>
</li>
</ol>
<h2 id="物理结构-存储结构"><a href="#物理结构-存储结构" class="headerlink" title="物理结构(存储结构)"></a>物理结构(存储结构)</h2><p>物理结构是指如何把数据元素储存在存储器中，因此也叫存储结构。数据的存储结构如何正确的反应数据元素之间的逻辑结构是物理结构的难点和重点。</p>
<ol>
<li><p>顺序存储结构</p>
<p>顺序存储出结构是把数据元素存放在地址连续的存储单元里。</p>
<blockquote>
<p>数组的存储结构就是顺序存储结构</p>
</blockquote>
</li>
<li><p>链式存储结构</p>
<p>链式存储结构是把数据元素存放在任意的存储单元里，这组存储单元可以是连续的也可以是不连续的。</p>
</li>
</ol>
<h1 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h1><ul>
<li><p>什么是数据类型？</p>
<p>数据类型是指一组性质相同的值的集合及定义在此集合上的一些此操作的总称。</p>
</li>
<li><p>我们为什么要分出各种数据类型？</p>
<p>根本原因是内存是十分珍贵的，我们必须以最小的内存存放最多的数据，从而降低成本。</p>
</li>
<li><p>数据是如何和被储存到内存当中的？</p>
<p>要想把数据存储在内存中，必须在内存中开辟出一片空间出来，然后把数据塞到这片空间中，而且这片空间的大小必须大于等于是数据所占用的空间。</p>
</li>
<li><p>为什么需要设置各种数据类型？</p>
<blockquote>
<p>比如说：养鸡，我们有一个1平方千米的养鸡场。当我们养的鸡的数量比较少时，我们可以随意地把鸡撒到养鸡场里。这个时候养鸡场的空间价值并没有显得那么珍贵。但随着我们养的鸡的数量不断增多，我们不得通过设置篱笆等方式限制鸡的活动范围，从而使养鸡厂里能养更多的鸡。甚至到最后一个鸡一个笼子，大笼子装大鸡，小笼子装小鸡，把养鸡场的空间价值开发到极致。</p>
</blockquote>
<p>数据与内存的关系就是到了后期的鸡与养鸡场的关系，每一份内存都十分珍贵。如果我们把一个2字节的数据存放到一片8字节的空间中，这种操作是极为浪费的行为。因此我们为各种类型的数据设置了各种数据类型，把数据存储到对应数据开辟出的空间当中，既不会因为开辟的空间太小导致数据失真，有可以避免开辟的空间太大，造成过多的浪费。</p>
</li>
</ul>
<h2 id="抽象数据类型"><a href="#抽象数据类型" class="headerlink" title="抽象数据类型"></a>抽象数据类型</h2><ul>
<li><p>抽象是什么？</p>
<p>抽象是指抽取出事物具有的普遍性的本质。</p>
</li>
<li><p>什么是抽象数据类型？</p>
<p>一个数学学模型及定义在该模型上的是一组操作。</p>
<blockquote>
<p>比如：智能手机、PC、平板上都有整型数据，但他们在各种计算机中事务实现方式并不一样，所以这些整型又不完全相同。但由于整型的本质是1、2、3、4 . . . 等整形数据的集合，所以我们可以抽象出整型这个抽象数据类型。这个整型同时代指各个计算机上的整形数据，并且这个数据类型只用考虑其抽象出来的特性，其他特性都被隐藏不用考虑。</p>
</blockquote>
<p>当然，抽象数据类型的应用很广，我们甚至可以抽取几个变量的特性进而抽象出一个新的变量。</p>
<blockquote>
<p>比如：当我们编写绘图相关的软件的时候，总会有成对出现的x、y变量（代表横坐标轴和纵坐标轴）。为了方便，我们可以定义一个point的抽象数据类型，他有x、y两种整型变量。</p>
</blockquote>
</li>
<li><p>抽象数据类型的核心理念：</p>
<p>抽象数据类型体现了程序设计中<strong>问题分解</strong>、<strong>抽象</strong>和<strong>信息隐藏</strong>的特性。</p>
<blockquote>
<p>抽象数据类型把实际生活中的问题<strong>分解</strong>为多个规模小且容易处理的问题，然后<strong>建立</strong>一个计算机能处理的数据模型，并把每个功能模块的实现细节作为一个独立的单元，从而使具体实现过程<strong>隐藏</strong>起来。</p>
</blockquote>
</li>
</ul>
<p>​                                                                                                                                 </p>
<p>​                                                                                                                                                     <strong>——参考资料《大话数据结构》</strong></p>
]]></content>
      <categories>
        <category>数据结构与算法</category>
      </categories>
      <tags>
        <tag>学习笔记</tag>
        <tag>数据结构与算法</tag>
      </tags>
  </entry>
  <entry>
    <title>Eclipse的使用教程</title>
    <url>/2021/09/03/Eclipse%E7%9A%84%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><blockquote>
<p>参考价值;已完结，无错误、但比较初级、可作为初级教程参考使用</p>
</blockquote>
<hr>
<h2 id="搭建环境"><a href="#搭建环境" class="headerlink" title="搭建环境"></a>搭建环境</h2><p>跳转我的另一篇博客</p>
<p><a href="https://dengxiayouhun.github.io/2021/07/22/Java%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/">Java环境搭建</a></p>
<h2 id="下载Eclipse"><a href="#下载Eclipse" class="headerlink" title="下载Eclipse"></a>下载Eclipse</h2><p><a href="https://www.eclipse.org/">官网下载</a></p>
<h2 id="创建一个工作区（workspace）"><a href="#创建一个工作区（workspace）" class="headerlink" title="创建一个工作区（workspace）"></a>创建一个工作区（workspace）</h2><p>工作区就是一个目录，用于存放程序和程序所用到的资源，中间缓存文件也在工作区中。</p>
<p>首先，随便在自己想要的位置建一个目录。</p>
<p><img src="https://i.loli.net/2021/09/05/xRy7XTQ6aLEJN53.jpg"></p>
<p>打开Eclipse</p>
<p><img src="https://i.loli.net/2021/09/05/xpLKJuqH5QSvwky.jpg"></p>
<p>把建立的目录作为工作区。注意：红线标注的选项不要勾选，否则以后进入Eclipse就只能默认进入这个工作区。</p>
<p><img src="https://i.loli.net/2021/09/05/zWfLxiESy2MAUnN.jpg"></p>
<p>会出现Welcome页面，关掉它。</p>
<h2 id="进行一些主题设置"><a href="#进行一些主题设置" class="headerlink" title="进行一些主题设置"></a>进行一些主题设置</h2><h3 id="透视图"><a href="#透视图" class="headerlink" title="透视图"></a>透视图</h3><p><img src="https://i.loli.net/2021/09/05/29mDOSVtMcGPy7Q.jpg"></p>
<p>透视图就是有右上角标红的那个，最好设置成Java EE，可以点击标黑的图标进行性透视图设置</p>
<p><img src="https://i.loli.net/2021/09/05/ZQ2RNJK4Ve6TC9A.jpg"></p>
<p>标红的就是Java EE。</p>
<h3 id="调整组件"><a href="#调整组件" class="headerlink" title="调整组件"></a>调整组件</h3><p><img src="https://i.loli.net/2021/09/06/XvZDli2OmGh4178.jpg"></p>
<p>通过左上角标红的图标可以搜索组件。</p>
<p><img src="https://i.loli.net/2021/09/06/WoYl4TtXrsSLVjp.jpg"></p>
<p>把页面设置成这样既可。</p>
<h4 id="编码集"><a href="#编码集" class="headerlink" title="编码集"></a>编码集</h4><p>把编码集修改为UTF-8</p>
<p><img src="https://i.loli.net/2021/09/06/ZSwEQGnlpTqbFUr.jpg"></p>
<p>菜单-Windows-Preference-General-Workspace</p>
<ul>
<li><p>为什么要修改字符集？</p>
<p>因为我们编码通常是基于UTF-8的，如果Eclipse是基于其他字符集，那么我们的编码就会出现乱码。</p>
</li>
</ul>
<h3 id="字体"><a href="#字体" class="headerlink" title="字体"></a>字体</h3><p><img src="https://i.loli.net/2021/09/06/MBFabTZC9y5kYNp.jpg"></p>
<p>菜单-Windows-Preference-General-Appearence-Colors and Fonts-Basic-Text Font</p>
<p><img src="https://i.loli.net/2021/09/06/St5ekPWENhLcs8U.jpg"></p>
<p>一般来说，字体大小设为14或者16即可。</p>
<h3 id="New的设置"><a href="#New的设置" class="headerlink" title="New的设置"></a>New的设置</h3><p><img src="https://i.loli.net/2021/09/06/1Kw8JFgsxuhW3pP.jpg"></p>
<p>Windows-Perspective-Customize Perspective-Menu Visibility-File-New</p>
<p><img src="https://i.loli.net/2021/09/06/Jfy57kmd3TXQgit.jpg"></p>
<p>勾选这些即可</p>
<h2 id="Hello-World！"><a href="#Hello-World！" class="headerlink" title="Hello World！"></a>Hello World！</h2><p>New一个Java Project</p>
<p><img src="https://i.loli.net/2021/09/06/T9IOJAvbfrwP13V.jpg"></p>
<p><img src="https://i.loli.net/2021/09/06/a6ZoXK5qfDed2vA.jpg"></p>
<p>在src下面New一个Package，然后在Package下面New一个Class。</p>
<p><img src="https://i.loli.net/2021/09/06/TS52q6nKDQBceoH.jpg"></p>
<p>然后写一个Hello World程序</p>
<p><img src="https://i.loli.net/2021/09/06/iZ7JKbWCgMpeyhT.jpg"></p>
<p>Run as运行</p>
<p><img src="https://i.loli.net/2021/09/06/wCImrDQ1JOF9BLv.jpg"></p>
<h2 id="未完待续"><a href="#未完待续" class="headerlink" title="未完待续 . . ."></a>未完待续 . . .</h2>]]></content>
      <categories>
        <category>工具</category>
      </categories>
      <tags>
        <tag>java</tag>
      </tags>
  </entry>
  <entry>
    <title>Java的基本程序设计结构（未完）</title>
    <url>/2021/08/23/Java%E7%9A%84%E5%9F%BA%E6%9C%AC%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E7%BB%93%E6%9E%84/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><blockquote>
<p>参考价值：未完成，较为臃肿、没有错误，短时间不会重置，不建议参考，可以作为工具查找信息（但更建议用课本）</p>
</blockquote>
<hr>
<h2 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h2><ol>
<li><p>//注释(单行注释)</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HelloWorld</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="comment">//打印Hello World！</span></span><br><span class="line">        System.out.println(<span class="string">&quot;HHello World!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
<li><p>/* 注释 */(多行注释)</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">这个程序的作用是打印一个Hello World</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HelloWorld</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;HHello World!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
<li><p>文档注释 </p>
</li>
</ol>
<h2 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h2><h3 id="整型"><a href="#整型" class="headerlink" title="整型"></a>整型</h3><p>用途：在内存中划出一定大小的空间来储存一个整数</p>
<table>
<thead>
<tr>
<th>类型</th>
<th>储存需求</th>
<th align="center">取值范围</th>
</tr>
</thead>
<tbody><tr>
<td>int</td>
<td>4字节</td>
<td align="center">-2 147 4833 648~2 147 4833 647</td>
</tr>
<tr>
<td>short</td>
<td>2字节</td>
<td align="center">-32 768~32 767</td>
</tr>
<tr>
<td>long</td>
<td>8字节</td>
<td align="center">-9 233 372 036 854 775 808~-9 233 372 036 854 775 807</td>
</tr>
<tr>
<td>byte</td>
<td>1字节</td>
<td align="center">-128~127</td>
</tr>
</tbody></table>
<ul>
<li><p>Java与C / C++的区别：</p>
<ul>
<li><p>Java不如C / C++效率高，但可移植性更强：</p>
<p>和Java不同，C / C++中整型数据的储存需求不是固定的，而是根据操作系统的不同选择最高效的范围。因此，C/C++对内存的利用效率是要大于Java的。但一个在32位系统上运行的C/C++程序在16位系统上运行时会发生整数溢出的情况，因此移植性较差。而Java因为兼顾了移植性，所以才采取所有平台固定储存需求的方式，这也导致在一些内存极为珍贵的情况下，更倾向于使用C/C++来编写程序。</p>
</li>
<li><p>Java整型是不存在任何无符号（unsigned）形式的：</p>
<p>如题。其实Java也是能够使用无负数的整形的，但实际操作起来必须相当仔细。初学者不必考虑，知道即可。</p>
</li>
</ul>
</li>
</ul>
<h3 id="浮点类型"><a href="#浮点类型" class="headerlink" title="浮点类型"></a>浮点类型</h3><p>用途：在内存中划出一定大小的空间来储存一个带小数的数</p>
<table>
<thead>
<tr>
<th align="center">类型</th>
<th align="center">储存需求</th>
<th align="center">取值范围</th>
</tr>
</thead>
<tbody><tr>
<td align="center">float</td>
<td align="center">4字节</td>
<td align="center">有效位数6~7位</td>
</tr>
<tr>
<td align="center">double</td>
<td align="center">8字节</td>
<td align="center">有效位数15位</td>
</tr>
</tbody></table>
<ul>
<li><p>单精度浮点型和双精度浮点型的由来</p>
<p>float和double也分别被称为单精度浮点型和双精度浮点型，这是因为double的数值精度是float的两倍。</p>
</li>
</ul>
<h3 id="char类型"><a href="#char类型" class="headerlink" title="char类型"></a>char类型</h3><p>用途：在内存中划出一定大小的空间来储存一个字符</p>
<table>
<thead>
<tr>
<th align="center">类型</th>
<th align="center">储存需求</th>
</tr>
</thead>
<tbody><tr>
<td align="center">char</td>
<td align="center">2字节</td>
</tr>
</tbody></table>
<h3 id="boolean类型"><a href="#boolean类型" class="headerlink" title="boolean类型"></a>boolean类型</h3><p>即布尔类型，只有两个值：false和true，用来判定逻辑条件。且在Java中，整型值不能和布尔值交换。</p>
<h2 id="变量与常量"><a href="#变量与常量" class="headerlink" title="变量与常量"></a>变量与常量</h2><h3 id="声明变量"><a href="#声明变量" class="headerlink" title="声明变量"></a>声明变量</h3><p>使用变量前必须要先声明变量。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">* 语法:</span></span><br><span class="line"><span class="comment">* 变量类型 变量名；</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">int</span> number;</span><br><span class="line"><span class="keyword">double</span> grace;</span><br><span class="line"><span class="keyword">char</span> a;</span><br><span class="line"><span class="keyword">boolean</span> done;</span><br></pre></td></tr></table></figure>

<h4 id="补充概念"><a href="#补充概念" class="headerlink" title="*补充概念"></a>*补充概念</h4><ol>
<li><h5 id="关键字"><a href="#关键字" class="headerlink" title="关键字"></a>关键字</h5><p>即在Java中有特殊作用的字，比如：int / double / char 等。</p>
</li>
<li><h4 id="保留字"><a href="#保留字" class="headerlink" title="保留字"></a>保留字</h4><p>之现在版本中没有作为关键字但在以后版本中会成为关键字的字。</p>
</li>
<li><h4 id="标识符"><a href="#标识符" class="headerlink" title="标识符"></a>标识符</h4><p>自己起的名字都叫标识符，比如：变量名、方法名、类名等</p>
<p>标识符不能是关键字或保留字。</p>
<ul>
<li>标志符命名规则<ol>
<li>只能由英文字母，0~9，下划线_或 $ 组成。</li>
<li>单下划线 _不能作为标识符</li>
<li>标识符开头不能是数字</li>
<li>标识符不能是关键字或保留字</li>
</ol>
</li>
</ul>
</li>
</ol>
<h3 id="变量初始化"><a href="#变量初始化" class="headerlink" title="变量初始化"></a>变量初始化</h3><p>对声明的变量必须进行初始化后再使用。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">* 语法</span></span><br><span class="line"><span class="comment">* 变量名=对应类型的数据;</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//有两种初始化变量的方法：</span></span><br><span class="line"><span class="keyword">int</span> grace;</span><br><span class="line">grace=<span class="number">100</span>;<span class="comment">//先声明，再初始化</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> grace=<span class="number">100</span>;<span class="comment">//声明的同时，直接初始化</span></span><br></pre></td></tr></table></figure>

<ul>
<li>在Java中，变量的声明需要尽可能接近第一次使用的地方</li>
</ul>
<h4 id="关键字var"><a href="#关键字var" class="headerlink" title="关键字var"></a>关键字var</h4><p>var :是 一种动态类型。对于局部变量，当可以从变量的初始值判断出数据类型时。就不用声明类型，直接使用关键字var即可。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> grace=<span class="number">100</span>;<span class="comment">//grace的类型是整型</span></span><br><span class="line"><span class="keyword">var</span> name=<span class="string">&quot;wuze&quot;</span>;<span class="comment">//name的类型是String</span></span><br></pre></td></tr></table></figure>

<h3 id="常量"><a href="#常量" class="headerlink" title="常量"></a>常量</h3><p>只能被赋值一次就不能修改的量叫做常量。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">* 语法：</span></span><br><span class="line"><span class="comment">* final 数据类型 变量名=数据；</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">final</span> <span class="keyword">int</span> grace=<span class="number">100</span>;</span><br></pre></td></tr></table></figure>

<h3 id="枚举类型"><a href="#枚举类型" class="headerlink" title="枚举类型"></a>枚举类型</h3><p>未完待续 . . . </p>
<h2 id="运算符"><a href="#运算符" class="headerlink" title="运算符"></a>运算符</h2><h3 id="算术运算符"><a href="#算术运算符" class="headerlink" title="算术运算符"></a>算术运算符</h3><table>
<thead>
<tr>
<th align="center">算术运算符</th>
<th align="center">意义</th>
</tr>
</thead>
<tbody><tr>
<td align="center">+</td>
<td align="center">加</td>
</tr>
<tr>
<td align="center">-</td>
<td align="center">减</td>
</tr>
<tr>
<td align="center">*</td>
<td align="center">乘</td>
</tr>
<tr>
<td align="center">/</td>
<td align="center">除</td>
</tr>
<tr>
<td align="center">%</td>
<td align="center">求余</td>
</tr>
</tbody></table>
<ul>
<li><p>除法：</p>
<ol>
<li> / 两边的数据都是整数时，为整数除法，否则为浮点除法</li>
</ol>
<p><img src="https://i.loli.net/2021/08/04/TCSY15JWkGNBtsx.jpg"></p>
<ol start="2">
<li><p>除以0</p>
<p>当整数除以0时，程序会出现异常</p>
<p><img src="https://i.loli.net/2021/08/04/9VTFYQM6uWGaXLt.jpg"></p>
<p>当浮点型数据除以0时，会显示无穷大或者NaN</p>
<p><img src="https://i.loli.net/2021/08/04/Ql4d7Jg2NUcjO9u.jpg"></p>
</li>
</ol>
</li>
</ul>
<h3 id="数学函数与常量"><a href="#数学函数与常量" class="headerlink" title="数学函数与常量"></a>数学函数与常量</h3><p>在实际应用中，数据之间的运算并不是简简单单靠算术运算符完成的。很多复杂或者特殊的运算是依靠Math库里的各种函数来实现的。合理运用Math库里的数学函数运算能够有效的提高代码的效率。</p>
<p>首先，先上代码：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">Math库中的一些数学函数与特殊常量。</span></span><br><span class="line"><span class="comment">数学函数：pow、sqrt、floorMod、sin、cos、tan、atan、atan2、exp、log、log10、PI、E</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Mathematicalfunction</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">        <span class="keyword">double</span> number1=Math.pow(<span class="number">4</span>。<span class="number">0</span>,<span class="number">3.0</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;4的3次方是:&quot;</span>+number1);</span><br><span class="line">        <span class="keyword">double</span> number2=Math.sqrt(<span class="number">4.0</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;4的算术平方根是:&quot;</span>+number2);</span><br><span class="line">        <span class="keyword">int</span> number3=Math.floorMod(-<span class="number">7</span>,<span class="number">3</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;-7除以3的余数是:&quot;</span>+number3);</span><br><span class="line">        <span class="keyword">double</span> number4=Math.sin(Math.PI/<span class="number">3</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;60°的正弦是:&quot;</span>+number4);</span><br><span class="line">        <span class="keyword">double</span> number5=Math.cos(Math.PI/<span class="number">3</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;60°的余弦是:&quot;</span>+number5);</span><br><span class="line">        <span class="keyword">double</span> number6=Math.tan(Math.PI/<span class="number">3</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;60°的正切是:&quot;</span>+number6);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<ol>
<li><p>pow函数</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//语法：</span></span><br><span class="line">pow(x,n);</span><br><span class="line"><span class="comment">//作用：</span></span><br><span class="line">计算x的n次方</span><br></pre></td></tr></table></figure>

<p>注意：pow( )的返回值必须是double类型</p>
</li>
<li><p>sqrt函数</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//语法：</span></span><br><span class="line">sqrt(x)</span><br><span class="line"><span class="comment">//作用：</span></span><br><span class="line">计算x的算术平方根</span><br></pre></td></tr></table></figure>

<p>sqrt的返回值也必须是double</p>
</li>
<li><p>floorMod</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//语法：</span></span><br><span class="line">floorMod(被除数，除数)</span><br><span class="line"><span class="comment">//作用：</span></span><br><span class="line">取模运算</span><br></pre></td></tr></table></figure>

<ul>
<li><p>和%的区别</p>
<p>挖个坑，以后再填（doge）</p>
</li>
</ul>
</li>
<li><p>直接引用数学函数</p>
<p>在源文件顶部加上这行代码即可：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> java.lang.Math.*;</span><br></pre></td></tr></table></figure>



<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> java.lang.Math.*;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Mathematicalfunction</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">	    <span class="keyword">double</span> number1=pow(<span class="number">4.0</span>,<span class="number">3.0</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;4的3次方是:&quot;</span>+number1);</span><br><span class="line">        <span class="keyword">double</span> number2=sqrt(<span class="number">4.0</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;4的算术平方根是:&quot;</span>+number2);</span><br><span class="line">        <span class="keyword">int</span> number3=floorMod(-<span class="number">7</span>,<span class="number">3</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;-7除以3的余数是:&quot;</span>+number3);</span><br><span class="line">        <span class="keyword">double</span> number4=sin(PI/<span class="number">3</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;60°的正弦是:&quot;</span>+number4);</span><br><span class="line">        <span class="keyword">double</span> number5=cos(PI/<span class="number">3</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;60°的余弦是:&quot;</span>+number5);</span><br><span class="line">        <span class="keyword">double</span> number6=tan(PI/<span class="number">3</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;60°的正切是:&quot;</span>+number6);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
</ol>
<h3 id="数值类型之间的转换"><a href="#数值类型之间的转换" class="headerlink" title="数值类型之间的转换"></a>数值类型之间的转换</h3><h4 id="数值类型之间存在的合法转换"><a href="#数值类型之间存在的合法转换" class="headerlink" title="数值类型之间存在的合法转换"></a>数值类型之间存在的合法转换</h4><p><img src="https://i.loli.net/2021/08/05/nJif4GI2kHjA7ro.jpg"></p>
<p>实线箭头的类型转换不会有信息丢失，但虚线箭头的类型转换可能会导致信息缺失，精度降低。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Change</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">        <span class="keyword">int</span> number1=<span class="number">123</span>;</span><br><span class="line">        <span class="keyword">int</span> number2=<span class="number">123456789</span>;</span><br><span class="line">        <span class="keyword">float</span> number3=number1;</span><br><span class="line">        <span class="keyword">float</span> number4=number2;</span><br><span class="line">        <span class="keyword">double</span> number5=number1;</span><br><span class="line">        <span class="keyword">double</span> number6=number2;</span><br><span class="line">        System.out.println(<span class="string">&quot;123由整型转化为单精度浮点型是：&quot;</span>+number3);</span><br><span class="line">        System.out.println(<span class="string">&quot;123456789由整型转化为单精度浮点型是：&quot;</span>+number4);</span><br><span class="line">        System.out.println(<span class="string">&quot;123由整型转化为双精度浮点型是：&quot;</span>+number5);</span><br><span class="line">        System.out.println(<span class="string">&quot;123456789由整型转化为双精度浮点型是：&quot;</span>+number6);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><img src="https://i.loli.net/2021/08/05/MEeUAuIOhDQspWP.jpg"></p>
<h4 id="强制类型转换"><a href="#强制类型转换" class="headerlink" title="强制类型转换"></a>强制类型转换</h4><p>先看一个例子：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Bad</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">        <span class="keyword">double</span> x=<span class="number">9.843</span>;</span><br><span class="line">        <span class="keyword">int</span> y=x;</span><br><span class="line">        System.out.println(y);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><img src="https://i.loli.net/2021/08/05/vxNrVzKLkRWZXtQ.jpg"></p>
<p>像这种一定会损失精度的转换，在Java中是不合法的。但在有些情况下，我们又不得不进行这样的转换。所以Java为我们提供了强制类型转换的方法。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Bad</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">        <span class="keyword">double</span> x=<span class="number">9.83</span>;</span><br><span class="line">        <span class="keyword">int</span> y=(<span class="keyword">int</span>)x;</span><br><span class="line">        System.out.println(y);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><img src="https://i.loli.net/2021/08/05/tJSYk6Qwh7MvbH9.jpg"></p>
<p>但是强制类型转换是直接砍掉后面的数字。要想在类型转换时四舍五入，需要借助数学函数round：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Bad</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">        <span class="keyword">double</span> x=<span class="number">9.83</span>;</span><br><span class="line">        <span class="keyword">int</span> y=(<span class="keyword">int</span>)Math.round(x);</span><br><span class="line">        System.out.println(y);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><img src="https://i.loli.net/2021/08/05/beXAyiMjfasCw6Y.jpg"></p>
<h5 id="警告："><a href="#警告：" class="headerlink" title="警告："></a>警告：</h5><p>如无必要，最好不要使用强制类型转换，使用强制类型转换有时候能造成数值被劫夺为一个完全不同的值。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Bad</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">        <span class="keyword">int</span> x=<span class="number">400</span>;</span><br><span class="line">        <span class="keyword">byte</span> y=(<span class="keyword">byte</span>)Math.round(x);</span><br><span class="line">        System.out.println(y);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><img src="https://i.loli.net/2021/08/05/Q2qSUGvcknRzJCO.jpg"></p>
<h3 id="结合赋值和运算符"><a href="#结合赋值和运算符" class="headerlink" title="结合赋值和运算符"></a>结合赋值和运算符</h3><p>是对赋值和运算符的一种简写。比如：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">x=x+<span class="number">4</span>;可以简写成x+=<span class="number">4</span>;<span class="comment">//所有算术运算符都可以这么做</span></span><br></pre></td></tr></table></figure>

<p>注意：</p>
<p>如果运算符得到一个值，并且与左侧的操作数类型不同则会发生强制转换，把运算符的值强制转换为左边操作数的值，而且是直接截断，比如:</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Strong</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">        <span class="keyword">int</span> x=<span class="number">0</span>;</span><br><span class="line">        x+=<span class="number">2.5</span>;</span><br><span class="line">        System.out.println(x);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><img src="https://i.loli.net/2021/08/05/62GYe9faXu57oV8.jpg"></p>
<h3 id="自增和自减运算符"><a href="#自增和自减运算符" class="headerlink" title="自增和自减运算符"></a>自增和自减运算符</h3><p>由于在平时开发中，变量加一或减一都很常见。所以，java就借鉴了C / C++，推出了自增和自减运算符，即++，–。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">x=x+<span class="number">1</span>;可以转换为x++;<span class="comment">//当++的位置不同时，其运算方式也会发生不同。int m=8;int n=8;int x=2*++m;//x=18,m=9int y=2*n++;//x=16,m=9</span></span><br></pre></td></tr></table></figure>

<h3 id="关系和boolean运算符"><a href="#关系和boolean运算符" class="headerlink" title="关系和boolean运算符"></a>关系和boolean运算符</h3><ul>
<li><p>关系运算符有大于( &gt; )、小于( &lt; )、大于等于( &gt;= )、小于等于( &lt;= )、等于( = ).它们的值为true / false（boolean类型）。</p>
</li>
<li><p>逻辑运算符有&amp;&amp;、||、!=,具体用法和C / C++一样。</p>
</li>
<li><p>java 也支持 ? : 三元运算符，x?a:b;</p>
<p>即若x为true则表达式的值为a,否则为b.</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Three</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">        <span class="keyword">int</span> x=<span class="number">4</span>;</span><br><span class="line">        <span class="keyword">int</span> y=<span class="number">3</span>;</span><br><span class="line">        <span class="keyword">int</span> number=x&lt;y?<span class="number">100</span>:<span class="number">666</span>;</span><br><span class="line">        System.out.println(number);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><img src="https://i.loli.net/2021/08/05/yGX19bM4Oq2cdwL.jpg"></p>
</li>
</ul>
<h3 id="位运算符"><a href="#位运算符" class="headerlink" title="位运算符"></a>位运算符</h3><p>学习位运算符之前我们要先了解计算机二进制和一些偏底层的相关知识</p>
<h4 id="数据是如何被储存在计算机的？"><a href="#数据是如何被储存在计算机的？" class="headerlink" title="数据是如何被储存在计算机的？"></a>数据是如何被储存在计算机的？</h4><p>计算机中能够储存数据的硬件只有内存和存储设备（以下统称内存），然而数据是怎么存入其中的呢？所有的数据都是有类型的，比如整型、浮点型、char型、String型等。当我们要存储数据10时，我们首先要声明变量，其次把10放进这个变量里（其实就是变量赋值），就完成了数据的储存。然而，深入到底层硬件层次，这一通操作是怎么实现的呢？</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> number;<span class="comment">//声明变量//在内内存中划出一块4个字节大小的空间口口口口口口口口 口口口口口口口口 口口口口口口口口 口口口口口口口口 口口口口口口口口，命名为number。number=10;//变量赋值//编译器把10转换为二进制1010，然后把二进制的10储存在number空间里，即0000 0000 0000 1010.//这样，一个数据就成功地存入内存里了。</span></span><br></pre></td></tr></table></figure>

<h4 id="二进制"><a href="#二进制" class="headerlink" title="二进制"></a>二进制</h4><ol>
<li><p>有符号数 / 无符号数</p>
<ul>
<li><p>有符号数</p>
<p>有符号数就是指一个变量既可以存储正数，也可以存储负数。这是因为有符号数的二进制首项是符号位。比如：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> number1=<span class="number">10</span>;<span class="comment">//它储存在空间里的样子是：00000000 00000000 00000000 1010int number2=-10;//它储存在空间里的样子是：10000000 00000000 00000000 00001010</span></span><br></pre></td></tr></table></figure></li>
<li><p>无符号运算符</p>
<p>无符号数是指只能存放正数不能存放负数，其原理就是去掉了符号位，这样可以使一个变量能够存储更大的数。比如：C / C++中的unsigned int 等。</p>
</li>
</ul>
</li>
<li><p>正负数的源码、反码、补码</p>
<ul>
<li><p>正数</p>
<p>源码、反码、补码都一样。</p>
</li>
<li><p>负数</p>
<p>反码=符号位不变，其他位取反（即1-&gt;0，0-&gt;1）</p>
<p>补码=反码+1</p>
<p>0的反码补码都是0</p>
</li>
</ul>
</li>
<li><p>关于十六进制</p>
<p>十六进制和二进制刚好有四对一的关系。为了不占用太大的空间，在书写记录时，一般我们用十六进制来书写二进制。</p>
<table>
<thead>
<tr>
<th align="center">二进制</th>
<th align="center">十六进制</th>
</tr>
</thead>
<tbody><tr>
<td align="center">0000</td>
<td align="center">0</td>
</tr>
<tr>
<td align="center">0001</td>
<td align="center">1</td>
</tr>
<tr>
<td align="center">0010</td>
<td align="center">2</td>
</tr>
<tr>
<td align="center">0011</td>
<td align="center">3</td>
</tr>
<tr>
<td align="center">0100</td>
<td align="center">4</td>
</tr>
<tr>
<td align="center">0101</td>
<td align="center">5</td>
</tr>
<tr>
<td align="center">0110</td>
<td align="center">6</td>
</tr>
<tr>
<td align="center">0111</td>
<td align="center">7</td>
</tr>
<tr>
<td align="center">1000</td>
<td align="center">8</td>
</tr>
<tr>
<td align="center">1001</td>
<td align="center">9</td>
</tr>
<tr>
<td align="center">1010</td>
<td align="center">A</td>
</tr>
<tr>
<td align="center">1011</td>
<td align="center">B</td>
</tr>
<tr>
<td align="center">1100</td>
<td align="center">C</td>
</tr>
<tr>
<td align="center">1101</td>
<td align="center">D</td>
</tr>
<tr>
<td align="center">1110</td>
<td align="center">E</td>
</tr>
<tr>
<td align="center">1111</td>
<td align="center">F</td>
</tr>
</tbody></table>
<p>比如说：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> number=<span class="number">127</span>;<span class="comment">//m=0000 0000 0000 0000 0000 0000 0111 1111(二进制源码)-&gt;0000 007F(十六进制源码)</span></span><br></pre></td></tr></table></figure></li>
</ol>
<h4 id="逻辑运算符和位移运算符"><a href="#逻辑运算符和位移运算符" class="headerlink" title="逻辑运算符和位移运算符"></a>逻辑运算符和位移运算符</h4><ul>
<li><p>提醒，计算机用位运算符计算数据是都是按补码计算的。</p>
</li>
<li><p>逻辑运算符</p>
<ol>
<li><p>与运算符（&amp;）</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Count</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">        <span class="keyword">int</span> m=<span class="number">15</span>;<span class="comment">//n=0000 0000 0000 0000 0000 0000 0000 1111-&gt;0000 0000 0000 0000 0000 0000 0000 1111(补码)（为了简洁表达，之后的源码和补码会省略中间的0或1）</span></span><br><span class="line">        <span class="keyword">int</span> n=<span class="number">127</span>;<span class="comment">//m=0000 0111 1111-&gt;0000 0111 1111(补码)</span></span><br><span class="line">        <span class="keyword">int</span> number1=n&amp;m;<span class="comment">//number=0000 1111-&gt;0000 1111(补码)</span></span><br><span class="line">        System.out.println(number1);<span class="comment">//number=15</span></span><br><span class="line">        <span class="keyword">int</span> x=<span class="number">15</span>;<span class="comment">//x=0000 1111-&gt;0000 1111(补码)</span></span><br><span class="line">        <span class="keyword">int</span> y=-<span class="number">127</span>;<span class="comment">//y=1000 0111 1111-&gt;1111 1000 0001(补码)</span></span><br><span class="line">        <span class="keyword">int</span> number2=x&amp;y;<span class="comment">//number2=00000001-&gt;0000 0001(补码)</span></span><br><span class="line">        System.out.println(number2);<span class="comment">//number2=1</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>&amp;的规则是对应位两个都为1，则结果取1，否则都取0.</p>
</li>
<li><p>或运算符（|）</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Count</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">        <span class="keyword">int</span> m=<span class="number">15</span>;<span class="comment">//n=0000 1111-&gt;0000 1111(补码)</span></span><br><span class="line">        <span class="keyword">int</span> n=<span class="number">127</span>;<span class="comment">//m=0000 0111 1111-&gt;0000 0111 1111(补码)</span></span><br><span class="line">        <span class="keyword">int</span> number1=n|m;<span class="comment">//number=0000 0111 1111-&gt;0000 0111 1111(补码)</span></span><br><span class="line">        System.out.println(number1);<span class="comment">//number=127</span></span><br><span class="line">        <span class="keyword">int</span> x=<span class="number">15</span>;<span class="comment">//x=0000 1111-&gt;0000 1111(补码)</span></span><br><span class="line">        <span class="keyword">int</span> y=-<span class="number">127</span>;<span class="comment">//y=1000 0111 1111-&gt;1111 1000 0001 (补码)</span></span><br><span class="line">        <span class="keyword">int</span> number2=x|y;<span class="comment">//number2=1000 0111 0001-&gt;1111 1000 1111(补码)</span></span><br><span class="line">        System.out.println(number2);<span class="comment">//number2=-113</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>| 的规则是对应位两个都为0，则结果取0，否则都取1.</p>
</li>
<li><p>非运算符（~）</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Count</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">        <span class="keyword">int</span> m=<span class="number">15</span>;<span class="comment">//n=0000 1111-&gt;0000 1111(补码)</span></span><br><span class="line">        <span class="keyword">int</span> number1=~m;<span class="comment">//number=1000 0001 0000-&gt;1111 1111 0000(补码) </span></span><br><span class="line">        System.out.println(number1);<span class="comment">//number=-16 </span></span><br><span class="line">        <span class="keyword">int</span> x=-<span class="number">15</span>;<span class="comment">//x=1000 1111-&gt;1111 0001(补码)  </span></span><br><span class="line">        <span class="keyword">int</span> number2=~x;<span class="comment">//number2=0000 1110-&gt;0000 1110(补码)   </span></span><br><span class="line">        System.out.println(number2);<span class="comment">//number2=14  </span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>~ 的规则是每一位都取反。</p>
</li>
<li><p>异或运算符（^）</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Count</span></span>&#123; </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;  </span><br><span class="line">        <span class="keyword">int</span> m=<span class="number">15</span>;<span class="comment">//n=0000 1111-&gt;0000 1111(补码)  </span></span><br><span class="line">        <span class="keyword">int</span> n=<span class="number">127</span>;<span class="comment">//m=0000 0111 1111-&gt;0000 0111 1111(补码) </span></span><br><span class="line">        <span class="keyword">int</span> number1=n^m;<span class="comment">//number=0000 0111 0000-&gt;0000 0111 0000(补码)  </span></span><br><span class="line">        System.out.println(number1);<span class="comment">//number=112  </span></span><br><span class="line">        <span class="keyword">int</span> x=<span class="number">15</span>;<span class="comment">//x=0000 1111-&gt;0000 1111(补码)   </span></span><br><span class="line">        <span class="keyword">int</span> y=-<span class="number">127</span>;<span class="comment">//y=1000 0111 1111-&gt;1111 1000 0001 (补码) </span></span><br><span class="line">        <span class="keyword">int</span> number2=x^y;<span class="comment">//number2=1000 0111 0010-&gt;1111 1000 1110(补码)  </span></span><br><span class="line">        System.out.println(number2);<span class="comment">//number2=-114  </span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>^ 的规则是对应位相同取0，不同取1</p>
</li>
</ol>
</li>
<li><p>位移运算符</p>
<ol>
<li><p>左移运算符（&lt;&lt;）</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Count</span></span>&#123;  </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">        <span class="keyword">int</span> x=<span class="number">15</span>;<span class="comment">//x=0000 1111-&gt;0000 1111(补码)  </span></span><br><span class="line">        <span class="keyword">int</span> y=-<span class="number">15</span>;<span class="comment">//y=1000 1111-&gt;1111 0001(补码) </span></span><br><span class="line">        <span class="keyword">int</span> number1=x&lt;&lt;<span class="number">1</span>;<span class="comment">//number1=0000 0001 1110-&gt;0000 0001 1110(补码)</span></span><br><span class="line">        System.out.println(number1);<span class="comment">//number1=30</span></span><br><span class="line">        <span class="keyword">int</span> number2=y&lt;&lt;<span class="number">1</span>;<span class="comment">//number2=1000 0001 1110-&gt;1111 1110 0010(补码)</span></span><br><span class="line">        System.out.println(number2);<span class="comment">//nuber2=-30   </span></span><br><span class="line">        <span class="keyword">int</span> number3=x&lt;&lt;<span class="number">33</span>;<span class="comment">//number3=0000 0001 1110-&gt;0000 0001 1110(补码) </span></span><br><span class="line">        System.out.println(number3);<span class="comment">//number3=30</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>&lt;&lt;运算符的规则是:当x&lt;&lt;n时，所有对应位左移x%32位，右端补0，左端溢出的丢弃。（大部分时候等同于*2的x%32次方）</p>
</li>
<li><p>右移运算符(&gt;&gt;)</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Count</span></span>&#123;  </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123; </span><br><span class="line">        <span class="keyword">int</span> x=<span class="number">15</span>;<span class="comment">//x=0000 1111-&gt;0000 1111(补码) </span></span><br><span class="line">        <span class="keyword">int</span> y=-<span class="number">15</span>;<span class="comment">//y=1000 1111-&gt;1111 0001(补码)  </span></span><br><span class="line">        <span class="keyword">int</span> number1=x&gt;&gt;<span class="number">1</span>;<span class="comment">//number1=0000 0001 1110-&gt;0000 0111(补码)   </span></span><br><span class="line">        System.out.println(number1);<span class="comment">//number1=7 </span></span><br><span class="line">        <span class="keyword">int</span> number2=y&gt;&gt;<span class="number">1</span>;<span class="comment">//number2=1000 1000-&gt;1111 1000(补码)</span></span><br><span class="line">        System.out.println(number2);<span class="comment">//nuber2=-8 </span></span><br><span class="line">        <span class="keyword">int</span> number3=x&gt;&gt;<span class="number">33</span>;<span class="comment">//number3=0000 0111-&gt;0000 0111(补码) </span></span><br><span class="line">        System.out.println(number3);<span class="comment">//number3=7 </span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>.&gt;&gt;运算符的规则是：当x&gt;&gt;&gt;n时，所有对应位右移x%32位，左端端正数补0、负数补1，右端溢出的丢弃。</p>
</li>
<li><p>无符号右移运算符(&gt;&gt;&gt;)</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Count</span></span>&#123;   </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;  </span><br><span class="line">        <span class="keyword">int</span> x=<span class="number">15</span>;<span class="comment">//x=0000 1111-&gt;0000 1111(补码)  </span></span><br><span class="line">        <span class="keyword">int</span> y=-<span class="number">15</span>;<span class="comment">//y=1000 1111-&gt;1111 0001(补码)  </span></span><br><span class="line">        <span class="keyword">int</span> number1=x&gt;&gt;&gt;<span class="number">1</span>;<span class="comment">//number1=0000 0001 1110-&gt;0000 0111(补码) </span></span><br><span class="line">        System.out.println(number1);<span class="comment">//number1=7 </span></span><br><span class="line">        <span class="keyword">int</span> number2=y&gt;&gt;&gt;<span class="number">1</span>;<span class="comment">//number2=0111 1000-&gt;0111 1000(补码)  </span></span><br><span class="line">        System.out.println(number2);<span class="comment">//nuber2=2147483640    </span></span><br><span class="line">        <span class="keyword">int</span> number3=x&gt;&gt;&gt;<span class="number">33</span>;<span class="comment">//number3=0000 0111-&gt;0000 0111(补码)   </span></span><br><span class="line">        System.out.println(number3);<span class="comment">//number3=7  </span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>.&gt;&gt;&gt;的规则是：当x&gt;&gt;&gt;n时，所有对应位右移x%32位，左端补0，右端溢出的丢弃。</p>
</li>
</ol>
</li>
</ul>
<h2 id="字符串"><a href="#字符串" class="headerlink" title="字符串"></a>字符串</h2><p>Java没有字符串类型，而是在标准Java类库中提供了一个预定义类来使用字符串，也就是String</p>
<p>简单示例：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Strings</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">        String name=<span class="string">&quot;China&quot;</span>;</span><br><span class="line">        System.out.println(name);</span><br><span class="line">    &#125;</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure>

<p> <img src="https://i.loli.net/2021/08/14/9xZRTYDb4vEXztw.jpg"></p>
<h3 id="子串"><a href="#子串" class="headerlink" title="子串"></a>子串</h3><p>String类中的<strong>substring</strong>方法可以从字符串中提取一个子串。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Strings</span></span>&#123;   </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;   </span><br><span class="line">        String name=<span class="string">&quot;China&quot;</span>;   </span><br><span class="line">        String name1=name.substring(<span class="number">0</span>,<span class="number">3</span>);    </span><br><span class="line">        System.out.println(name1);   </span><br><span class="line">    &#125;</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure>

<p><img src="https://i.loli.net/2021/08/14/mBEN1iGKFuWfwMJ.jpg"></p>
<p>name.substring(m,n) 中m是起始字符位置n是终止字符位置，且取n不取m。（注：0是第一个）</p>
<h3 id="拼接"><a href="#拼接" class="headerlink" title="拼接"></a>拼接</h3><p>和绝大多数语言一样，java语言中字符串是可以通过+号对字符串进行连接的。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Strings</span></span>&#123;  </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">        String name1=<span class="string">&quot;China&quot;</span>; </span><br><span class="line">        String name2=<span class="string">&quot; is &quot;</span>;</span><br><span class="line">        String name3=<span class="string">&quot; very &quot;</span>;   </span><br><span class="line">        String name4=<span class="string">&quot; good!&quot;</span>;   </span><br><span class="line">        String name=name1+name2+name3+name4;    </span><br><span class="line">        System.out.println(name); </span><br><span class="line">    &#125;</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure>

<p><img src="https://i.loli.net/2021/08/14/yf6gPuc59Wp2AKT.jpg"></p>
<p>当字符串和非字符串连接时，非字符串会被转换成字符串并和字符串进行拼接，常见的例子比如输出语句：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">System.out.println(<span class="string">&quot;我已经&quot;</span>+age+<span class="string">&quot;岁了&quot;</span>);<span class="comment">//age=20</span></span><br></pre></td></tr></table></figure>

<h4 id="填充"><a href="#填充" class="headerlink" title="填充"></a>填充</h4><p>这个用的比较少，是静态方法join的方法。当我们把多个字符串连接在一起并用一个界定符分割时，我们可以用 join 实现。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Strings</span></span>&#123;    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;    </span><br><span class="line">        String all1=String.join(<span class="string">&quot;/&quot;</span>,<span class="string">&quot;Time&quot;</span>,<span class="string">&quot;Money&quot;</span>,<span class="string">&quot;Health&quot;</span>);      </span><br><span class="line">        System.out.println(all);   </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>当然我们也不一定非要加界定符，可以尽可能的发挥我们的想象力。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Strings</span></span>&#123;   </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;  </span><br><span class="line">        String all1=String.join(<span class="string">&quot; &quot;</span>,<span class="string">&quot;Time&quot;</span>,<span class="string">&quot;Money&quot;</span>,<span class="string">&quot;Health&quot;</span>);  </span><br><span class="line">        String all2=String.join(<span class="string">&quot;+&quot;</span>,<span class="string">&quot;Time&quot;</span>,<span class="string">&quot;Money&quot;</span>,<span class="string">&quot;Health&quot;</span>);   </span><br><span class="line">        String all3=String.join(<span class="string">&quot;Q&quot;</span>,<span class="string">&quot;Time&quot;</span>,<span class="string">&quot;Money&quot;</span>,<span class="string">&quot;Health&quot;</span>);   </span><br><span class="line">        System.out.println(all1);   </span><br><span class="line">        System.out.println(all2);   </span><br><span class="line">        System.out.println(all3); </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><img src="https://i.loli.net/2021/08/15/PjMhugBO6F97DqY.jpg"></p>
<p>​        </p>
<h4 id="复制"><a href="#复制" class="headerlink" title="复制"></a>复制</h4><p>有些时候我们需要复制很多相同的字符串然而我们也不能傻乎乎的把一个字符串输入几百上千次。Java11中提供了一个repeat方法来解决这个问题。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Strings</span></span>&#123;   </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;  </span><br><span class="line">        String one=<span class="string">&quot; ~(&gt;_&lt;)~ &quot;</span>;      </span><br><span class="line">        String all=one.repeat(<span class="number">10</span>);    </span><br><span class="line">        System.out.println(all);  </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><img src="https://i.loli.net/2021/08/15/DR8Pa2evUgomGbH.jpg">  </p>
<h3 id="不可变字符串"><a href="#不可变字符串" class="headerlink" title="不可变字符串"></a>不可变字符串</h3><p>在Java中String类是不允许单独修改一个字符串中的某个字符的，我们一般可以通过提取字串加拼接的方式来构造新的字符串。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Strings</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">        String start=<span class="string">&quot;Hello&quot;</span>;</span><br><span class="line">        start=start.substring(<span class="number">0</span>,<span class="number">3</span>)+<span class="string">&quot;p&quot;</span>;</span><br><span class="line">        System.out.println(start);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="检查字符串是否相等"><a href="#检查字符串是否相等" class="headerlink" title="检查字符串是否相等"></a>检查字符串是否相等</h3><p>要想检查两个字符串是否相等需要使用equals方法，相同返回true，不同返回false。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Strings</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">        String s=<span class="string">&quot;Hello&quot;</span>;</span><br><span class="line">        String t=<span class="string">&quot;help&quot;</span>;</span><br><span class="line">        <span class="keyword">boolean</span> b;</span><br><span class="line">        </span><br><span class="line">        b=s.equals(t);</span><br><span class="line">        System.out.println(b);</span><br><span class="line">        </span><br><span class="line">        b=<span class="string">&quot;Hello&quot;</span>.equals(s);</span><br><span class="line">        System.out.println(b);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><img src="https://i.loli.net/2021/08/24/wPebXGxTLHqNFC4.jpg"></p>
<p>如果不想区分大小写可以用equalsIgnoreCase方法：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Strings</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">        String s=<span class="string">&quot;Hello&quot;</span>;</span><br><span class="line">        <span class="keyword">boolean</span> b;</span><br><span class="line">        </span><br><span class="line">        b=<span class="string">&quot;hello&quot;</span>.equals(s);</span><br><span class="line">        System.out.println(b);</span><br><span class="line">        </span><br><span class="line">        b=<span class="string">&quot;hello&quot;</span>.equalsIgnoreCase(s);</span><br><span class="line">        System.out.println(b);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><img src="https://i.loli.net/2021/08/25/mbGFUNtj2igrn9e.jpg"></p>
<p>不要用==来检查字符串是否相等，只有当两个字符串相同并且位置相同时才会返回true，否则返回false。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Strings</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">        String s=<span class="string">&quot;Hello&quot;</span>;</span><br><span class="line">        <span class="keyword">boolean</span> b;</span><br><span class="line">        </span><br><span class="line">        b=<span class="string">&quot;Hel&quot;</span>.equals(s.substring(<span class="number">0</span>,<span class="number">3</span>));</span><br><span class="line">        System.out.println(b);</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span>(<span class="string">&quot;Hel&quot;</span>==s.substring(<span class="number">0</span>,<span class="number">3</span>))&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;true&quot;</span>);            </span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">			System.out.println(<span class="string">&quot;flase&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><img src="https://i.loli.net/2021/08/25/jKEdhQa5lUSWAY6.jpg"></p>
]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>学习笔记</tag>
      </tags>
  </entry>
  <entry>
    <title>Java编程语言单词汇总</title>
    <url>/2021/08/01/Java%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80%E5%8D%95%E8%AF%8D%E6%B1%87%E6%80%BB/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><h2 id="step-01"><a href="#step-01" class="headerlink" title="step-01"></a><strong>step-01</strong></h2><h3 id="掌握"><a href="#掌握" class="headerlink" title="掌握"></a><strong>掌握</strong></h3><p>1、JDK </p>
<p>abbr. Java 开发工具包（Java Development Kit） （abbr.缩写）</p>
<p>2、JRE </p>
<p>abbr. Java 运行环境（Java Runtime Environment） </p>
<p>3、JVM </p>
<p>abbr. Java 虚拟机（Java Virtual Machine） </p>
<p>4、system [‘sɪstəm] <strong>System</strong></p>
<p>n. 制度，系统；</p>
<p>5、out [aʊt] </p>
<p>adj. 外面的；出去</p>
<p>6、println </p>
<p>n. 换行打印（Java 语言中的命令）</p>
<p>7、main [meɪn]</p>
<p>n. 主方法</p>
<p>8、download[daʊn’ləʊd]</p>
<p>vt. [计] 下载</p>
<p>9、path [pɑːθ] </p>
<p>n. 道路；小路；轨道；路径</p>
<p>10、JAVA_HOME</p>
<p>JDK 的安装根目录，例如：D:\ProgramFiles\Java\jdk1.8.0_141</p>
<p>11、public [‘pʌblɪk]</p>
<p>adj.公共的</p>
<p>12、static [‘stætɪk]</p>
<p>adj. 静态的；</p>
<p>13、void [vɒɪd] </p>
<p>adj. 空的；无效的；</p>
<p>14、string[strɪŋ] <strong>String</strong> </p>
<p>n. 一串，字符串</p>
<p>15、args</p>
<p>n. [计算机]参数</p>
<p>16、class [klɑːs] </p>
<p>n. 阶级；班级；种类；类；</p>
<p>17、bin [bɪn]</p>
<p>n. 二进制</p>
<p>18、src</p>
<p>源代码，源程序，这里代表 source code</p>
<p>19、bit [bɪt] </p>
<p>n. [计] 比特（二进位制信息单位）；</p>
<p>20、byte [baɪt] </p>
<p>n. 字节；8 位元组</p>
<h3 id="拓展"><a href="#拓展" class="headerlink" title="拓展"></a><strong>拓展</strong></h3><p>1、command [kə’mɑːnd] </p>
<p>vi. 命令，控制</p>
<p>2、compile [kəm’paɪl] </p>
<p>vt. 编译；编辑；</p>
<p>3、language [‘læŋgwɪdʒ] </p>
<p>n. 语言</p>
<p>4、lang [læŋ] </p>
<p>abbr. 语言（language） </p>
<p>5、development [dɪ’veləpm(ə)nt] </p>
<p>n. 发展；开发；</p>
<p>6、kit [kɪt] </p>
<p>n. 工具箱</p>
<p>7、machine [mə’ʃiːn] </p>
<p>n. 机械，机器；</p>
<p>8、Java SE：Java 标准版，Java Standard Edition</p>
<p>9、Java EE：Java 企业版，Java Enterprise Edition</p>
<p>10、Java ME：Java 小型版，Java Micro Edition</p>
<p>11、GC：垃圾收集机制（Garbage Collection）</p>
<h2 id="step-02"><a href="#step-02" class="headerlink" title="step-02"></a><strong>step-02</strong></h2><h3 id="掌握-1"><a href="#掌握-1" class="headerlink" title="掌握"></a><strong>掌握</strong></h3><p>1、byte [baɪt] </p>
<p>n. 字节</p>
<p>2、short [ʃɔːt]</p>
<p>adj. 短的；</p>
<p>3、int 英 [ɪn’tɪəːrɪə(r)] 美 [ɪnt]</p>
<p>abbr. 整数</p>
<p>4、long [lɒŋ] </p>
<p>adj. 长的；过长的；</p>
<p>5、float [fləʊt] </p>
<p>单精度浮点数</p>
<p>6、double [‘dʌb(ə)l] </p>
<p>双精度浮点数</p>
<p>7、char [tʃɑː] </p>
<p>单个字符类型</p>
<p>8、boolean [‘bʊlɪən]</p>
<p>布尔型</p>
<p>9、unicode [‘juːnɪˌkəʊd] </p>
<p>n. 采用双字节对字符进行编码；统一的字符编码标准</p>
<p>10、ASCII [‘æski]</p>
<p>abbr. 美国信息交换标准码（American Standard Code for Information </p>
<p>Interchange）</p>
<p>11、true[truː]</p>
<p>adj. 真实的；正确的</p>
<p>12、false [fɔːls; fɒls]</p>
<p>adj. 错误的；</p>
<h3 id="拓展-1"><a href="#拓展-1" class="headerlink" title="拓展"></a><strong>拓展</strong></h3><p>1、age[eɪdʒ]</p>
<p>n. 年龄；</p>
<p>2、name[neɪm] </p>
<p>n. 名称，名字；姓名</p>
<p>3、number [‘nʌmbə] </p>
<p>n. 数 </p>
<p>4、assign [ə’saɪn] </p>
<p>vt. 分配；指派；[计][数] 赋值</p>
<p>5、logic [‘lɒdʒɪk]</p>
<p>adj. 逻辑的</p>
<p>6、arithmetic[ə’rɪθmətɪk]</p>
<p>n. 算术，算法</p>
<p>7、operator[‘ɒpəreɪtə] </p>
<p>[计]操作符</p>
<p>8、relational [rɪ’leɪʃ(ə)n(ə)l]</p>
<p>adj. 相关的；</p>
<p>relational operator：关系运算符</p>
<p>relational database 关系型数据库</p>
<p>relational expression[计]关系表达式</p>
<p>9、variable [‘veərɪəb(ə)l] <strong>Java 课程系列</strong> </p>
<p>adj. 变量的；可变的；易变的，多变的；</p>
<p>10、sum [sʌm]</p>
<p>n. 金额；总数</p>
<p>11、const [‘kɒnst] </p>
<p>n. 常量，常数</p>
<p>12、constant [‘kɒnst(ə)nt] </p>
<p>n. [数] 常数；恒量</p>
<p>13、initialize [ɪ’nɪʃ(ə)laɪz] </p>
<p>vt. 初始化</p>
<h2 id="step-03"><a href="#step-03" class="headerlink" title="step-03"></a><strong>step-03</strong></h2><h3 id="掌握-2"><a href="#掌握-2" class="headerlink" title="掌握"></a><strong>掌握</strong></h3><p>1、if [ɪf]</p>
<p>conj. （表条件）如果；即使；是否；（表假设）假如</p>
<p>2、 else[els]</p>
<p>adv. 其他；否则；另外</p>
<p>3、switch[swɪtʃ]</p>
<p>n. 开关；转换</p>
<p>4、case[keɪs]</p>
<p>n. 情况；</p>
<p>5、default[dɪ’fɔːlt; ‘diːfɔːlt]</p>
<p>n. 缺席；缺乏；系统默认值</p>
<p>6、scanner[‘skænə] Scanner</p>
<p>n. [计] 扫描仪；扫描器；</p>
<p>7、next [nekst]</p>
<p>adj. 下一个的；</p>
<p>8、import[ɪm’pɔːt; ‘ɪm-]</p>
<p>vt. 导入 </p>
<p>9、util [ju’til]</p>
<p>代表 utility[juːˈtɪlɪtɪ] adj. 实用的；通用的；</p>
<p>10、in[ɪn]</p>
<p>在里面的的，输入</p>
<p>11、count [kaʊnt]</p>
<p>vi. 计数</p>
<p>12、year [jɪə; jɜː]</p>
<p>n. 年；</p>
<p>13、month[mʌnθ]</p>
<p>n. 月</p>
<p>14、day[deɪ]</p>
<p>n. 一天；时期</p>
<p>15、date[deɪt]</p>
<p>n. 日期</p>
<h3 id="拓展-2"><a href="#拓展-2" class="headerlink" title="拓展"></a><strong>拓展</strong></h3><p>1、length[leŋθ]</p>
<p>n. 长度，长；</p>
<p>2、height [haɪt]</p>
<p>n. 高地；高度；身高；</p>
<p>3、weight[weɪt]</p>
<p>n. 重量，重力；</p>
<p>4、radius[‘reɪdɪəs]</p>
<p>n. 半径</p>
<p>5、area[‘eərɪə]</p>
<p>n. 区域，地区；面积；范围</p>
<p>6、score [skɔː]</p>
<p>n. 分数</p>
<p>7、week[wiːk]</p>
<p>n. 周，星期 <strong>Java 课程系列</strong> </p>
<p>8、hour[‘aʊə]</p>
<p>n. 小时；</p>
<p>9、minute[‘mɪnɪt]</p>
<p>n. 分，分钟；</p>
<p>10、second[‘sek(ə)nd]</p>
<p>n. 秒；第二名</p>
<p>11、millisecond [‘mɪlɪsek(ə)nd]</p>
<p>n. 毫秒</p>
<p>12、monday [ˈmʌndeɪ; ˈmʌndi]</p>
<p>n. 星期一</p>
<p>13、tuesday[‘tjuːzdeɪ; -dɪ]</p>
<p>n. 星期二</p>
<p>14、wednesday[ˈwenzdɪ]</p>
<p>n. 星期三</p>
<p>15、thursday[‘θɜːzdeɪ; -dɪ]</p>
<p>n. 星期四</p>
<p>16、friday[ˈfraɪ.deɪ]</p>
<p>n. 星期五</p>
<p>17、saturday 英 [ˈsætədɪ; -deɪ]</p>
<p>n. 星期六</p>
<p>18、sunday [ˈsʌndeɪ; ˈsʌndi]</p>
<p>n. 星期日</p>
<p>19、season [‘siːz(ə)n]</p>
<p>n. 时期；季节；赛季</p>
<p>20、spring [sprɪŋ]</p>
<p>n. 春天</p>
<p>21、summer[‘sʌmə]</p>
<p>n. 夏季</p>
<p>22、fall[fɔːl]</p>
<p>n. 下降；秋天</p>
<p>autumn[‘ɔːtəm]n. 秋天；成熟期 </p>
<p>23、winter[‘wɪntə]</p>
<p>n. 冬季；</p>
<p>24、width [wɪtθ; wɪdθ]</p>
<p>n. 宽度；</p>
<h2 id="step-04"><a href="#step-04" class="headerlink" title="step-04"></a><strong>step-04</strong></h2><h3 id="掌握-3"><a href="#掌握-3" class="headerlink" title="掌握"></a><strong>掌握</strong></h3><p>1、for[fə(r); fɔ:(r)]</p>
<p>prep. 为，为了；因为；给；对于；至于；适合于 conj. 因为</p>
<p>2、while [waɪl]</p>
<p>conj. 虽然；然而；当……的时候</p>
<p>3、do[duː]</p>
<p>v. 做；干；</p>
<p>4、break [breɪk]</p>
<p>vi. 打破；折断；中断</p>
<p>5、continue[kən’tɪnjuː]</p>
<p>vt. 使…继续；</p>
<p>6、math [mæθ]</p>
<p>n. 数学（等于 mathematics） </p>
<p>7、random[‘rændəm] Random</p>
<p>adj. [数] 随机的；</p>
<p>8、first [fɜːst] </p>
<p>adv. 第一；首先；优先；宁愿; </p>
<p>9、sum [sʌm] </p>
<p>n. 金额；总数; </p>
<p>10、check [tʃek] </p>
<p>vt. 检查，核对；制止 </p>
<h3 id="拓展-3"><a href="#拓展-3" class="headerlink" title="拓展"></a><strong>拓展</strong></h3><p>1、for loop：For 循环</p>
<p>for 循环语句 for cyclic sentence</p>
<p>for 循环结构 for-loop structure</p>
<p>2、input[‘ɪnpʊt]</p>
<p>vt. [自][电子] 输入；将…输入电脑</p>
<p>3、max[mæks]</p>
<p>n.最大量；最大数</p>
<p>4、min [mɪn]</p>
<p>代表 minimum[‘mɪnɪməm]adj. 最小的；最低的</p>
<p>5、temp[temp]</p>
<p>临时的</p>
<p>6、 positive [‘pɒzɪtɪv] q</p>
<p>[数] 正的；确定的 n. 正数；</p>
<p>7、negative [‘negətɪv] </p>
<p>adj. [数] 负的；否定的； n. 否定；负数；</p>
<p>8、half [hɑːf] </p>
<p>n. 一半；半场；半学年; </p>
<p>adv. 一半地；部分地; </p>
<p>adj. 一半的；不完全的；半途的; </p>
<p>9、 middle [‘mɪd(ə)l] </p>
<p>adj. 中间的，中部的；中级的，中等的; </p>
<p>10、show [ʃəʊ] </p>
<p>vt. 显示；说明；演出；展出</p>
<p>vi. 显示；说明</p>
<p>11、round [raʊnd] </p>
<p>n. 圆；循环；一回合；</p>
<p>adj. 圆的；</p>
<p>12、item [‘aɪtəm] </p>
<p>n. 条款，项目 </p>
<p>13、content [kən’tent] </p>
<p>n. 内容，目录；满足；容量; </p>
<p>14、upload [ʌp’ləʊd] </p>
<p>vt. 上传</p>
<p>15、download [daʊn’ləʊd] </p>
<p>vt. 下载</p>
<h2 id="step-05"><a href="#step-05" class="headerlink" title="step-05"></a><strong>step-05</strong></h2><p>###<strong>掌握</strong></p>
<p>1、array[ə’reɪ]</p>
<p>n. 数组，阵列；排列，列阵；</p>
<p>2、element[‘elɪm(ə)nt]</p>
<p>n. 元素；要素；原理；成分；</p>
<p>3、index[‘ɪndeks]</p>
<p>n. 指标；指数；索引；指针</p>
<p>4、length[leŋθ]</p>
<p>n. 长度，长；</p>
<p>5、copy[‘kɒpɪ]</p>
<p>vi. 复制；复印；</p>
<p>6、sort[sɔːt]</p>
<p>vt. 将…分类；将…排序；挑选出某物</p>
<p>7、avg[ævərɪdʒ]</p>
<p>abbr. 平均值（average） </p>
<p>8、new[njuː]</p>
<p>adj. 新的 [计]创建新的</p>
<p>9、max[mæks]</p>
<p>n.最大量；最大数</p>
<p>10、min [mɪn] </p>
<p>代表 minimum[‘mɪnɪməm]adj. 最小的；最低的</p>
<p>11、temp[temp]</p>
<p>临时的</p>
<h3 id="拓展-4"><a href="#拓展-4" class="headerlink" title="拓展"></a><strong>拓展</strong></h3><p>1、ArrayIndexOutOfBoundsException</p>
<p>数组下标越界异常</p>
<p>2、NullPointerException</p>
<p>空指针异常</p>
<p>3、reverse[rɪ’vɜːs]</p>
<p>vt. 颠倒；倒转</p>
<p>4、range [reɪn(d)ʒ]</p>
<p>n. 范围；幅度；</p>
<p>5、bubble sort</p>
<p>冒泡排序</p>
<p>6、binary search</p>
<p>[计] 对分查找；二进位检索；折半查找法；二分搜寻</p>
<p>7、parameter[pə’ræmɪtə]</p>
<p>n. 参数；系数；参量</p>
<p>[计] actual parameter 实参</p>
<p>[计] formal parameter 形参</p>
<p>[计] command line parameter 命令行参数</p>
<p>[计]variable parameter 可变参数</p>
<p>8、initialize [ɪ’nɪʃ(ə)laɪz]</p>
<p>vt. 初始化，设定初值 </p>
<h2 id="step-06"><a href="#step-06" class="headerlink" title="step-06"></a><strong>step-06</strong></h2><h3 id="掌握-4"><a href="#掌握-4" class="headerlink" title="掌握"></a><strong>掌握</strong></h3><p>1、value[‘væljuː]</p>
<p>n. 值 </p>
<p>2、detail[‘diːteɪl]</p>
<p>n. 细节，详情 vt. 详述；选派</p>
<p>3、balance[‘bæl(ə)ns]</p>
<p>n. 平衡；余额；</p>
<p>4、account[ə’kaʊnt]</p>
<p>n. 账户；解释；账目，账单；理由；描述</p>
<p>5、family[‘fæməli]</p>
<p>adj. 家庭的，家族的</p>
<p>6、flag[flæg]</p>
<p>n. 标志；旗子；标记</p>
<p>7、menu[‘menju:, mə’nju:]</p>
<p>n. 菜单</p>
<p>8、select[si’lekt]</p>
<p>vt. 挑选；选拔</p>
<p>9、amount[ə’maunt]</p>
<p>n. 数量；总额，总数</p>
<p>10、confirm[kən’fə:m]</p>
<p>vt. 确认；确定；证实；批准；使巩固</p>
<p>11、foreach</p>
<p>n. 为每一个，循环的循环计数器，循环，迭代器</p>
<h3 id="拓展-5"><a href="#拓展-5" class="headerlink" title="拓展"></a><strong>拓展</strong></h3><p>1、description[dɪ’skrɪpʃ(ə)n]</p>
<p>n. 描述，描写；类型；说明书 </p>
<p>2、monday [ˈmʌndeɪ; ˈmʌndi]</p>
<p>n. 星期一</p>
<p>3、tuesday[‘tjuːzdeɪ; -dɪ]</p>
<p>n. 星期二</p>
<p>4、wednesday[ˈwenzdɪ]</p>
<p>n. 星期三</p>
<p>5、thursday[‘θɜːzdeɪ; -dɪ]</p>
<p>n. 星期四</p>
<p>6、friday[ˈfraɪ.deɪ]</p>
<p>n. 星期五</p>
<p>7、saturday [ˈsætədɪ; -deɪ]</p>
<p>n. 星期六</p>
<p>8、sunday [ˈsʌndeɪ; ˈsʌndi]</p>
<p>n. 星期日</p>
<p>9、API [,e pi ‘aɪ] </p>
<p>abbr. 应用程序接口（Application Program Interface）</p>
<h2 id="step-07"><a href="#step-07" class="headerlink" title="step-07"></a><strong>step-07</strong></h2><h3 id="掌握-5"><a href="#掌握-5" class="headerlink" title="掌握"></a><strong>掌握</strong></h3><p>1、object[‘ɒbdʒɪkt; -dʒekt]</p>
<p>n. 目标；物体；客体；宾语；对象</p>
<p>2、new[njuː]</p>
<p>adj. 新的 [计]创建新的</p>
<p>3、field[fiːld]</p>
<p>[计]字段、栏位、域、栏、属性</p>
<p>4、stack[stæk]</p>
<p>[计]堆栈</p>
<p>5、heap[hiːp] </p>
<p>n. 堆；</p>
<p>6、student[‘stjuːd(ə)nt]</p>
<p>n. 学生；学者</p>
<p>7、teacher[‘tiːtʃə]</p>
<p>n. 教师；导师</p>
<p>8、name [neɪm]</p>
<p>n. 名称，名字；姓名；</p>
<p>9、age[eɪdʒ]</p>
<p>n. 年龄；时代；</p>
<p>10、tel[tɛl]</p>
<p>telephone[‘telɪfəʊn]n. （美）电话；电话机；</p>
<p>phone[fəʊn]n. 电话；耳机，听筒</p>
<p>11、address[ə’dres]</p>
<p>n. 地址；</p>
<p>12、gender[‘dʒendə]</p>
<p>n. 性；性别；</p>
<p>13、title[‘taɪt(ə)l]</p>
<p>标题</p>
<p>14、price[praɪs] </p>
<p>n. 价格；价值；代价</p>
<p>15、null[nʌl]</p>
<p>adj. 无效的，无价值的；等于零的 n. 零，[数] 空</p>
<h3 id="拓展-6"><a href="#拓展-6" class="headerlink" title="拓展"></a><strong>拓展</strong></h3><p>1、OOP</p>
<p>abbr. 面向对象的程序设计（Object Oriented Programming） </p>
<p>2、oriented</p>
<p>adj. 导向的；定向的；以…为方向的</p>
<p>v. 调整；使朝向（orient 的过去分词）；确定…的方位</p>
<p>3、programming[‘prəʊɡræmɪŋ]</p>
<p>n. 设计，规划；编制程序，[计] 程序编制 </p>
<p>4、member[‘membə]</p>
<p>n. 成员；</p>
<p>5、GC</p>
<p>垃圾收集 Garbage Collection（GC） </p>
<p>6、circle[‘sɜːk(ə)l]</p>
<p>n. 循环，周期；圆；</p>
<p>7、radius[‘reɪdɪəs]</p>
<p>n. 半径，</p>
<p>8、rectangle[‘rektæŋg(ə)l]</p>
<p>n. 矩形；长方形</p>
<p>9、triangle[‘traɪæŋg(ə)l]</p>
<p>n. 三角（形）；</p>
<h2 id="step-08"><a href="#step-08" class="headerlink" title="step-08"></a><strong>step-08</strong></h2><h3 id="掌握-6"><a href="#掌握-6" class="headerlink" title="掌握"></a><strong>掌握</strong></h3><p>1、function[‘fʌŋ(k)ʃ(ə)n]</p>
<p>n. 功能；[数] 函数；</p>
<p>2、method[‘meθəd]</p>
<p>n. 方法；条理；类函数</p>
<p>3、return[rɪ’tɜːn]</p>
<p>n. 返回；归还；</p>
<p>4、return value</p>
<p>[计] 返回值；传回值</p>
<p>5、return type</p>
<p>返回类型</p>
<p>6、overload[əʊvə’ləʊd]</p>
<p>vt. 超载，重载</p>
<p>7、parameter[pə’ræmɪtə] </p>
<p>n. 参数；系数；参量</p>
<p>[计] actual parameter 实参</p>
<p>[计] formal parameter 形参</p>
<p>[计] command line parameter 命令行参数</p>
<p>[计]variable parameter 可变参数</p>
<p>8、modifier [‘mɒdɪfaɪə] </p>
<p>[语] 修饰语 [计]修饰符</p>
<p>9、variable[‘veərɪəb(ə)l]</p>
<p>[计]local variable 局部变量</p>
<p>[计]member variable 成员变量</p>
<p>10、reference[‘ref(ə)r(ə)ns]</p>
<p>vt. 引用，参考</p>
<p>11、statement[‘steɪtm(ə)nt]</p>
<p>[计]语句</p>
<p>12、arguments [‘ɑːgjʊm(ə)nts]</p>
<p>n. 参数</p>
<h3 id="拓展-7"><a href="#拓展-7" class="headerlink" title="拓展"></a><strong>拓展</strong></h3><p>1、declare[‘dekleə] </p>
<p>[计]declare variables 声明变量</p>
<p>[计]method declaration 方法声明</p>
<p>[计]method invocation 方法调用 </p>
<p>[计]calling method 调用方法</p>
<p>2、definition[defɪ’nɪʃ(ə)n]</p>
<p>定义</p>
<p>[数] defined variable</p>
<p>User-Defined Method 用户定义方法</p>
<p>System-Generated Method 系统方法</p>
<p>3、undefined [ʌndɪ’faɪnd] </p>
<p>adj. 不明确的；未下定义的</p>
<p>4、husband[‘hʌzbənd] </p>
<p>n. 丈夫</p>
<p>5、wife[waɪf]</p>
<p>n. 妻子，已婚妇女；夫人</p>
<p>6、account[ə’kaʊnt]</p>
<p>n. 账户；解释；账目，账单；理由；描述</p>
<p>7、customer [‘kʌstəmə]</p>
<p>n. 顾客；家伙；消费者</p>
<p>8、bank[bæŋk]</p>
<p>n. 银行；</p>
<p>9、save[seɪv]</p>
<p>vt. 节省；保存；储蓄；解救</p>
<p>10、withdraw[wɪð’drɔː]</p>
<p>vt. 撤退；收回；撤消；提款</p>
<p>11、balance[‘bæl(ə)ns]</p>
<p>n. 平衡；余额；</p>
<p>12、identity[aɪ’dentɪtɪ]</p>
<p>n. 身份；同一性，一致；特性；恒等式</p>
<p>identity card：身份证或 ID Card;</p>
<p>identifier：标识符</p>
<p>##<strong>step-09</strong></p>
<h3 id="掌握-7"><a href="#掌握-7" class="headerlink" title="掌握"></a><strong>掌握</strong></h3><p>1、public[‘pʌblɪk]</p>
<p>adj. 公众的；政府的；公用的；公立的</p>
<p>2、protected [prə’tektɪd]</p>
<p>adj. 受保护的</p>
<p>3、default[dɪ’fɔːlt; ‘diːfɔːlt]</p>
<p>vi. 拖欠；不履行；不到场</p>
<p>n. 违约；缺席；缺乏；系统默认值 </p>
<p>4、private[ˈpraɪvɪt]</p>
<p>adj. 私人的，私有的；私立的；私营的</p>
<p>5、constructor[kənˈstrʌktə(r)]</p>
<p>n. 构造函数；构造器；建造者</p>
<p>6、this[ðɪs]</p>
<p>pron. 这；这个；这里</p>
<p>[Java]当前对象</p>
<p>7、package [‘pækɪdʒ]</p>
<p>n. 包，包裹；</p>
<p>8、import[ɪm’pɔːt; ‘ɪm-] </p>
<p>[计]导入</p>
<p>9、get[get]</p>
<p>vt. 获得；</p>
<p>10、set [set]</p>
<p>set value[自] 设定值，给定值；</p>
<h3 id="拓展-8"><a href="#拓展-8" class="headerlink" title="拓展"></a><strong>拓展</strong></h3><p>1、encapsulation[ɪn,kæpsə’leɪʃən]</p>
<p>n. 封装；包装</p>
<p>2、person[‘pɜːs(ə)n]</p>
<p>n. 人；身体；容貌，外表；人称</p>
<p>people[‘piːp(ə)l]n. 人；人类；民族；公民</p>
<p>human[‘hjuːmən]n. 人；人类</p>
<p>3、info[‘ɪnfəʊ]</p>
<p>n. 信息；情报</p>
<p>4、detail[‘diːteɪl]</p>
<p>n. 细节，详情 vt. 详述；选派</p>
<p>5、major [‘meɪdʒə]</p>
<p>adj. 主要的；重要的；主修的；n.专业</p>
<p>6、school[skuːl] </p>
<p>n. 学校；学院；</p>
<p>7、base[beɪs]</p>
<p>n. 基础；底部；</p>
<p>8、margin[‘mɑːdʒɪn]</p>
<p>n. 边缘；利润，余裕；页边的空白</p>
<p>9、bottom[‘bɒtəm]</p>
<p>n. 底部；末端；</p>
<p>10、top[tɒp]</p>
<p>n. 顶部，顶端；上部；</p>
<p>11、 pass by reference </p>
<p>按引用传递</p>
<p>12、 pass by value </p>
<p>按值传递</p>
<h2 id="step-10"><a href="#step-10" class="headerlink" title="step-10"></a><strong>step-10</strong></h2><h3 id="掌握-8"><a href="#掌握-8" class="headerlink" title="掌握"></a><strong>掌握</strong></h3><p>1、extends[ɪk’stendz; ek-]</p>
<p>v. 延伸；扩充；继承（extend 的第三人称单数形式）</p>
<p>2、subclass [‘sʌbklɑːs]</p>
<p>子类</p>
<p>3、superclass[‘suːpəklɑːs; ‘sjuː-]</p>
<p>n. 超类</p>
<p>4、override[əʊvə’raɪd]</p>
<p>vt. 推翻；不顾；践踏</p>
<p>5、overload [əʊvə’ləʊd]</p>
<p>vt. 超载，超过负荷</p>
<p>6、super[‘suːpə; ‘sjuː-]</p>
<p>adj. 特级的；极好的 </p>
<p>[Java]父类</p>
<p>7、add[æd]</p>
<p>vt. 增加，添加；</p>
<p>8、update[ʌp’deɪt]</p>
<p>vt. 更新；校正，修正；</p>
<p>9、delete[dɪ’liːt]</p>
<p>vt. 删除</p>
<p>10、replace [rɪ’pleɪs]</p>
<p>vt. 取代，代替；替换，更换；</p>
<p>11、all[ɔːl]</p>
<p>adj. 全部的</p>
<p>12、total [‘təʊt(ə)l]</p>
<p>n. 总数，合计</p>
<p>13、view[vjuː]</p>
<p>vt. 观察；考虑；查看</p>
<p>14、list[lɪst]</p>
<p>n. [计] 列表；清单；目录</p>
<p>15、select [sɪ’lekt]</p>
<p>adj. 精选的；挑选出来的；极好的</p>
<p>16、read [ri:d;red]</p>
<p>读取</p>
<h3 id="拓展-9"><a href="#拓展-9" class="headerlink" title="拓展"></a><strong>拓展</strong></h3><p>1、inherit[ɪn’herɪt]</p>
<p>vt. 继承；遗传而得</p>
<p>2、menu[‘menjuː]</p>
<p>n. 菜单</p>
<p>3、modify [‘mɒdɪfaɪ]</p>
<p>vt. 修改，修饰；更改</p>
<p>4、enter[‘entə] </p>
<p>n. [计] 输入；回车</p>
<p>5、confirm[kən’fɜːm]</p>
<p>vt. 确认；确定；证实；批准；使巩固</p>
<p>6、employee[ɪmˈplɔɪi;ˌemplɔɪˈi:]</p>
<p>n. 雇员；从业员工</p>
<p>7、manager[‘mænɪdʒə]</p>
<p>n. 经理；管理人员</p>
<p>8、salary[‘sælərɪ]</p>
<p>n. 薪水</p>
<p>9、pay[peɪ]</p>
<p>n. 工资，薪水；付款；报答</p>
<p>10、hire[‘haɪə]</p>
<p>vi. 雇用，租用；受雇</p>
<p>11、bonus[‘bəʊnəs]</p>
<p>n. 奖金；红利；额外津贴</p>
<p>12、stock[stɒk]</p>
<p>n. 股份，股票；</p>
<p>13、plan [plæn]</p>
<p>vi. 计划；打算</p>
<p>14、report[rɪ’pɔːt]</p>
<p>n. 报告；报道；成绩单</p>
<h2 id="step-11"><a href="#step-11" class="headerlink" title="step-11"></a><strong>step-11</strong></h2><h3 id="掌握-9"><a href="#掌握-9" class="headerlink" title="掌握"></a><strong>掌握</strong></h3><p>1、instance[‘ɪnst(ə)ns]</p>
<p>n. 实例；情况；建议</p>
<p>2、instanceof</p>
<p>n. 实例；运算符 </p>
<p>3、casting [‘kɑːstɪŋ] </p>
<p>转型</p>
<p>4、upcasting</p>
<p>n. 向上转型</p>
<p>5、downcasting</p>
<p>n. 向下转型</p>
<p>Safe Downcasting 安全的向下转型 ; 安全向下转型 ; </p>
<p>6、ClassCastException</p>
<p>类型转换异常</p>
<h3 id="拓展-10"><a href="#拓展-10" class="headerlink" title="拓展"></a><strong>拓展</strong></h3><p>1、polymorphism[,pɒlɪ’mɔːfɪz(ə)m]</p>
<p>n. 多态性；多形性；同质多晶</p>
<p>2、dependency[dɪ’pend(ə)nsɪ] </p>
<p>[计]依赖</p>
<p>3、association[[ə,soʃɪ’eʃən]]</p>
<p>[计]关联</p>
<p>4、aggregation [,æɡrɪ’ɡeɪʃən]</p>
<p>[计]聚合</p>
<p>5、composite[‘kɒmpəzɪt]</p>
<p>[计]复合，组合</p>
<p>6、generalization[,dʒenrələ’zeɪʃən]</p>
<p>n. 概括；普遍化；一般化</p>
<p>继承（Generalization，又称为泛化，is-a 的关系）</p>
<h2 id="step-12"><a href="#step-12" class="headerlink" title="step-12"></a><strong>step-12</strong></h2><p>###<strong>掌握</strong></p>
<p>1、equals[‘i:kwəlz] </p>
<p>v. 平等（equal 的第三人称单数形式）；与…相同</p>
<p>2、hash code hashCode()</p>
<p>hashCode(散列码)是由对象导出的一个整型值，散列码是没有规律的，</p>
<p>如果对象不一样，其散列码基本也不会一致。</p>
<p>3、finalize[‘faɪn(ə)laɪz]</p>
<p>vt. 完成；使结束</p>
<p>4、static[‘stætɪk]</p>
<p>adj. 静态的；静电的；静力的</p>
<p>5、final[‘faɪn(ə)l]</p>
<p>adj. 最终的；决定性的；不可更改的</p>
<p>6、native[‘neɪtɪv]</p>
<p>adj. 本国的；土著的；天然的；与生俱来的；天赋的；原生的</p>
<h3 id="拓展-11"><a href="#拓展-11" class="headerlink" title="拓展"></a><strong>拓展</strong></h3><p>1、block [blɒk]</p>
<p>adj. 成批的，大块的；交通堵塞的</p>
<p>2、order[‘ɔːdə]</p>
<p>n. 命令；顺序；规则；[贸易] 定单</p>
<p>3、dog[dɒg]</p>
<p>n. 狗；</p>
<p>4、cat[kæt]</p>
<p>n. 猫 </p>
<p>5、animal[‘ænɪm(ə)l]</p>
<p>n. 动物</p>
<p>6、car[kɑː]</p>
<p>n. 汽车；车厢</p>
<p>7、vehicle[ˈvɪəkl]</p>
<p>n. [车辆] 车辆；工具；交通工具；运载工具；传播媒介；媒介物</p>
<p>8、truck[trʌk]</p>
<p>n. 卡车； </p>
<p>9、train[treɪn]</p>
<p>n. 火车；</p>
<p>10、plane [pleɪn]</p>
<p>n. 飞机；</p>
<p>11、fly[flaɪ]</p>
<p>vt. 飞行；飞越；</p>
<p>12、ship[ʃɪp]</p>
<p>n. 船；舰；太空船</p>
<p>13、boat[bəʊt]</p>
<p>n. 小船；轮船</p>
<p>14、clone [kləʊn] </p>
<p>n. 克隆</p>
<p>15、init [ɪ’nɪt] </p>
<p>abbr. 初始化（initialization）</p>
<h2 id="step-13"><a href="#step-13" class="headerlink" title="step-13"></a><strong>step-13</strong></h2><h3 id="掌握-10"><a href="#掌握-10" class="headerlink" title="掌握"></a><strong>掌握</strong></h3><p>1、abstract[‘æbstrækt]</p>
<p>n. 摘要；抽象；抽象的概念</p>
<p>2、interface [‘ɪntəfeɪs]</p>
<p>n. 界面；&lt;计&gt;接口；交界面</p>
<p>3、implements[‘ɪmplɪm(ə)nts]</p>
<p>vt. 实施，执行；实现（第三人称单数）</p>
<p>4、single [‘sɪŋg(ə)l] </p>
<p>adj. 单一的；单身的；单程的; </p>
<p>n. 一个；</p>
<p>5、singleton [‘sɪŋg(ə)lt(ə)n] </p>
<p>单例 </p>
<p>6、comparable [‘kɒmp(ə)rəb(ə)l] Comparable</p>
<p>adj. 可比较的；比得上的</p>
<h3 id="拓展-12"><a href="#拓展-12" class="headerlink" title="拓展"></a><strong>拓展</strong></h3><p>1、subject[ˈsʌbdʒɪkt;]</p>
<p>n. 主题；科目</p>
<p>2、simple[‘sɪmp(ə)l]</p>
<p>adj. 简单的；</p>
<p>3、pattern[‘pæt(ə)n]</p>
<p>n. 模式；</p>
<p>4、proxy[‘prɒksɪ]</p>
<p>n. 代理人；</p>
<p>5、factory[‘fækt(ə)rɪ]</p>
<p>n. 工厂；制造厂；</p>
<p>6、template [‘templeɪt; -plɪt] </p>
<p>n. 模板，样板</p>
<h2 id="step-14"><a href="#step-14" class="headerlink" title="step-14"></a><strong>step-14</strong></h2><h3 id="掌握-11"><a href="#掌握-11" class="headerlink" title="掌握"></a><strong>掌握</strong></h3><p>1、inner[ɪnə]</p>
<p>adj. 内部的；</p>
<p>2、outer[‘aʊtə]</p>
<p>adj. 外面的，外部的；</p>
<p>3、enum[‘enəm]</p>
<p>n. 枚举</p>
<p>4、annotation[ænə’teɪʃ(ə)n]</p>
<p>n. 注释；注解； </p>
<p>5、override[əʊvə’raɪd] @Override</p>
<p>覆盖、覆写</p>
<p>6、deprecated[ˈdeprəkeɪtɪd] @Deprecated</p>
<p>v. 不赞成；弃用；不宜用（deprecate 的过去式及过去分词形式）</p>
<p>7、suppress[sə’pres]</p>
<p>vt. 抑制；镇压；废止</p>
<p>8、warning[‘wɔːnɪŋ]</p>
<p>n. 警告；预兆；预告</p>
<p>9、suppresswarings @SuppressWarnings</p>
<p>抑制警告</p>
<p>10、source[sɔːs]</p>
<p>source code 源代码</p>
<p>11、runtime [‘rʌntæɪm]</p>
<p>n. 执行时间，运行时间</p>
<p>12、class [klɑːs]</p>
<p>字节码</p>
<h3 id="拓展-13"><a href="#拓展-13" class="headerlink" title="拓展"></a><strong>拓展</strong></h3><p>1、nest[nest]</p>
<p>vt. 筑巢；嵌套</p>
<p>2、local [‘ləʊk(ə)l]</p>
<p>n. [计] 局部；adj. 当地的；局部的；</p>
<p>3、anonymous[ə’nɒnɪməs]</p>
<p>adj. 匿名的，无名的</p>
<p>4、ordinal[‘ɔːdɪn(ə)l]</p>
<p>adj. 顺序的，依次的</p>
<p>n. [数] 序数</p>
<p>5、author[‘ɔːθə]</p>
<p>n. 作者；作家；创始人</p>
<p>6、version[‘vɜːʃ(ə)n]</p>
<p>n. 版本；译文； </p>
<p>7、see[siː]</p>
<p>vi. 看；看见；参见</p>
<p>8、since [sɪns]</p>
<p>prep. 自…以来；自…以后</p>
<p>9、param[ˌpærəˈm]</p>
<p>abbr. 参数（Parametric）</p>
<p>10、exception [ɪk’sepʃ(ə)n; ek-]</p>
<p>n. 例外；异议</p>
<p>11、target[‘tɑːgɪt] @Target</p>
<p>n. 目标，指标；</p>
<p>12、retention[rɪ’tenʃ(ə)n] @Retention</p>
<p>n. 保留；扣留，滞留；</p>
<p>13、documented[‘dɒkjʊm(ə)ntɪd] @Documented</p>
<p>登记在案</p>
<p>14、inherited[ɪn’herɪtɪd] @Inherited</p>
<p>adj. 遗传的；继承权的；通过继承得到的</p>
<p>15、element [‘elɪm(ə)nt]</p>
<p>n. 元素；</p>
<p>16、type [taɪp]</p>
<p>n. 类型，品种；</p>
<p>ElementType 元素类型</p>
<p>17、policy[‘pɒləsɪ]</p>
<p>n. 政策，方针；策略</p>
<p>RetentionPolicy：保留策略</p>
<p>18、local variable</p>
<p>局部变量</p>
<p>19、metadata [‘metədeɪtə] </p>
<p>n. [计] 元数据 </p>
<h2 id="step-15"><a href="#step-15" class="headerlink" title="step-15"></a><strong>step-15</strong></h2><h3 id="掌握-12"><a href="#掌握-12" class="headerlink" title="掌握"></a><strong>掌握</strong></h3><p>1、exception[ɪk’sɛpʃən]</p>
<p>n. 例外；异议；异常</p>
<p>2、error[‘erə]</p>
<p>n. 误差；错误；过失</p>
<p>3、throwable</p>
<p>可抛出</p>
<p>4、try[traɪ]</p>
<p>vi. 尝试；</p>
<p>5、catch[kætʃ]</p>
<p>n. 捕捉；</p>
<p>6、finally[‘faɪnəlɪ]</p>
<p>adv. 最后；终于；决定性地</p>
<p>7、throw[θrəʊ]</p>
<p>vt. 投；抛；</p>
<p>8、throws[θrəʊz]</p>
<p>v. 投；抛（throw 的三单形式）；掷</p>
<h3 id="拓展-14"><a href="#拓展-14" class="headerlink" title="拓展"></a><strong>拓展</strong></h3><p>1、arithmetic[ə’rɪθmətɪk]</p>
<p>n. 算术，算法</p>
<p>ArithmeticException：算术异常</p>
<p>2、RuntimeException</p>
<p>运行时异常</p>
<p>3、NullPointerException</p>
<p>空指针异常 </p>
<p>4、ClassCastException</p>
<p>类型转换异常</p>
<p>5、ArrayIndexOutOfBoundsException</p>
<p>数组下标越界异常</p>
<p>6、NumberFormatException</p>
<p>数字格式化异常</p>
<p>7、trace[treɪs]</p>
<p>n. 痕迹，踪迹；</p>
<p>stack trace ： 堆叠追踪；堆栈踪迹</p>
<p>8、message [‘mesɪdʒ]</p>
<p>vt. 通知 n.消息</p>
<h2 id="step-16"><a href="#step-16" class="headerlink" title="step-16"></a><strong>step-16</strong></h2><h3 id="掌握-13"><a href="#掌握-13" class="headerlink" title="掌握"></a><strong>掌握</strong></h3><p>1、data[‘deɪtə]</p>
<p>n. 数据（datum 的复数）；资料</p>
<p>2、team[tiːm]</p>
<p>n. 队；组</p>
<p>3、service [‘sɜːvɪs]</p>
<p>n. 服务，服侍；</p>
<p>4、view[vjuː]</p>
<p>视图</p>
<p>5、bean[biːn]</p>
<p>豆</p>
<p>JavaBean：对象</p>
<p>6、salary[‘sælərɪ]</p>
<p>n. 薪水 </p>
<h3 id="拓展-15"><a href="#拓展-15" class="headerlink" title="拓展"></a><strong>拓展</strong></h3><p>1、employee[ɪmˈplɔɪi;ˌemplɔɪˈi:]</p>
<p>n. 雇员；从业员工</p>
<p>2、programmer [‘prəʊgræmə]</p>
<p>n. [自][计] 程序设计员</p>
<p>3、designer[dɪ’zaɪnə]</p>
<p>n. 设计师；</p>
<p>4、architect [‘ɑːkɪtekt]</p>
<p>设计师，建筑师</p>
<p>5、equipment [ɪ’kwɪpm(ə)nt]</p>
<p>n. 设备，装备；器材</p>
<p>6、PC[,pi: ‘si:]</p>
<p>abbr. 个人电脑（Personal Computer）；</p>
<p>7、notebook[‘nəʊtbʊk]</p>
<p>n. 笔记本，笔记簿；</p>
<p>8、printer [‘prɪntə]</p>
<p>n. [计] 打印机；印刷工；</p>
<p>9、status[‘steɪtəs]</p>
<p>n. 地位；状态；情形；</p>
<p>10、free[friː]</p>
<p>adv. 自由地；免费；空闲的</p>
<p>11、busy[‘bɪzɪ]</p>
<p>adj. 忙碌的；热闹的；正被占用的</p>
<p>12、vacation[vəˈkeɪʃn]</p>
<p>vi. 休假，度假</p>
<p>13、bonus[‘bəʊnəs]</p>
<p>n. 奖金；红利；额外津贴</p>
<p>14、stock[stɒk]</p>
<p>n. 股份，股票；</p>
<p>15、description[dɪ’skrɪpʃ(ə)n] </p>
<p>n. 描述，描写；类型；说明书</p>
<p>16、display[dɪ’spleɪ]</p>
<p>显示器</p>
<p>17、model [‘mɒdl]</p>
<p>模型、型号</p>
<p>18、type [taɪp]</p>
<p>n. 类型，品种；模范；样式</p>
<p>19、remove[rɪ’muːv]</p>
<p>移除、删除</p>
<h2 id="step-17"><a href="#step-17" class="headerlink" title="step-17"></a><strong>step-17</strong></h2><h3 id="掌握-14"><a href="#掌握-14" class="headerlink" title="掌握"></a><strong>掌握</strong></h3><p>1、integer[‘ɪntɪdʒə]</p>
<p>n. [数] 整数</p>
<p>2、character[‘kærəktə] </p>
<p>[计] 字符</p>
<p>3、parse [pɑːz]</p>
<p>解析</p>
<p>4、empty[ˈemptɪ]</p>
<p>adj. 空的；无意义的；</p>
<p>5、trim[trɪm]</p>
<p>vi. 削减</p>
<p>6、last [lɑːst]</p>
<p>adj. 最后的 n. 末尾，最后；上个；</p>
<p>7、first[fɜːst]</p>
<p>adv. 第一；首先；优先；</p>
<p>8、starts</p>
<p>n. 开始（start 的复数）； </p>
<p>start with：从…开始</p>
<p>9、ends</p>
<p>n. 结束（end 的复数）；目的；末端</p>
<p>end with ： 以……结束</p>
<p>10、replace[rɪ’pleɪs]</p>
<p>vt. 取代，代替；替换，更换；</p>
<p>replace all：全部替换</p>
<p>replace first：替换第一个</p>
<p>replace with：用…替换</p>
<p>11、substring[‘sʌb,striŋ]</p>
<p>n. [计] 子串；子字符串</p>
<p>12、split [splɪt]</p>
<p>vt. 分离；使分离；</p>
<p>13、contains[kən’teinz]</p>
<p>v. 包含；容纳；包含某字符串（contain 的单三形式）</p>
<p>14、uppercase[‘ʌpə’keɪs]</p>
<p>n. 大写字母</p>
<p>15、lowercase[,ləʊə’keɪs]</p>
<p>n. 小写字母；</p>
<p>16、concat</p>
<p>n. 合并多个数组；合并多个字符串</p>
<p>17、buffer[‘bʌfə]</p>
<p>n. [计] 缓冲区；</p>
<p>18、sqrt</p>
<p>abbr. 开平方根（square root）</p>
<p>19、pow </p>
<p>乘幂</p>
<p>20、ceil</p>
<p>向正无穷取整</p>
<p>21、floor</p>
<p>向负无穷取整 </p>
<p>22、round</p>
<p>四舍五入</p>
<p>23、date[deɪt]</p>
<p>n. 日期；</p>
<p>24、time [taɪm]</p>
<p>n. 时间；次数；</p>
<p>25、calendar[‘kælɪndə]</p>
<p>n. 日历；[天] 历法；日程表</p>
<p>26、append[ə’pend]</p>
<p>追加，附加</p>
<p>27、format[‘fɔːmæt]</p>
<p>vt. 使格式化；规定…的格式</p>
<p>28、local[‘ləʊk(ə)l]</p>
<p>n. [计] 局部；当地的；本地的</p>
<p>29、now [naʊ]</p>
<p>adv. 现在；如今；立刻</p>
<p>30、before[bɪ’fɔː]</p>
<p>prep. 在…之前，先于</p>
<p>31、after [‘ɑːftə]</p>
<p>prep. 在……之后</p>
<p>32、comparable[‘kɒmp(ə)rəb(ə)l]</p>
<p>adj. 可比较的；</p>
<p>33、comparator[kəm’pærətə]</p>
<p>比较器</p>
<h3 id="拓展-16"><a href="#拓展-16" class="headerlink" title="拓展"></a><strong>拓展</strong></h3><p>1、wrapper[‘ræpə]</p>
<p>包装类</p>
<p>2、boxing[‘bɒksɪŋ]</p>
<p>v. 将…装入盒中（box 的 ing 形式） n.装箱 </p>
<p>3、unbox [,ʌn’bɔks]</p>
<p>vt. 从箱子中取出</p>
<p>4、auto[‘ɔːtəʊ]</p>
<p>n.自动</p>
<p>5、cache[kæʃ]</p>
<p>缓存</p>
<p>6、binary[‘baɪnərɪ]</p>
<p>adj. [数] 二进制的；</p>
<p>7、octal[‘ɒkt(ə)l]</p>
<p>adj. [数] 八进制的</p>
<p>8、hex [heks]</p>
<p>n. 十六进制；</p>
<p>9、decimal[‘desɪm(ə)l]</p>
<p>adj. 小数的；十进位的 n. 小数</p>
<p>10、ignore[ɪg’nɔː]</p>
<p>vt. 驳回诉讼；忽视；不理睬</p>
<p>11、equalsIgnoreCase</p>
<p>忽视大小写比较是否相等</p>
<p>12、memory[‘mem(ə)rɪ]</p>
<p>n. 记忆，记忆力；内存，[计] 存储器；回忆</p>
<p>13、free [friː]</p>
<p>adj. 免费的；自由的，不受约束的</p>
<p>14、current[‘kʌr(ə)nt]</p>
<p>adj. 现在的；流通的，通用的；最近的；</p>
<p>15、add[æd]</p>
<p>vi. 加；增加；加起来；做加法</p>
<p>16、subtract[səb’trækt]</p>
<p>vt. 减去；扣掉</p>
<p>17、multiply[‘mʌltɪplaɪ]</p>
<p>vt. 乘；使增加；使繁殖；使相乘</p>
<p>18、divide [dɪ’vaɪd] </p>
<p>vt. 划分；除；</p>
<p>19、remainder[rɪ’meɪndə]</p>
<p>n. [数] 余数，残余；</p>
<p>20、milli[‘mɪli]</p>
<p>毫，千分之一</p>
<p>21、zone[zəʊn]</p>
<p>地区</p>
<p>22、timezone</p>
<p>时区</p>
<p>23、locale[ləʊ’kɑːl]</p>
<p>区域、场所</p>
<p>24、plus[plʌs]</p>
<p>prep. 加，加上</p>
<p>25、minus[‘maɪnəs]</p>
<p>prep. 减，减去</p>
<p>26、leap [liːp]</p>
<p>vi. 跳，跳跃</p>
<p>leap year：闰年</p>
<p>27、Instant[‘ɪnst(ə)nt]</p>
<p>adj. 立即的；紧急的；紧迫的</p>
<p>28duration[djʊ’reɪʃ(ə)n]</p>
<p>n. 持续，持续的时间，期间</p>
<p>29、period[‘pɪərɪəd]</p>
<p>n. 周期，期间；时期；</p>
<p>30、offset[‘ɒfset]</p>
<p>位移、偏移</p>
<p>31、available [ə’veɪləb(ə)l]</p>
<p>adj. 有效的，可得的；可利用的；空闲的</p>
<p>32、temporal [‘temp(ə)r(ə)l]</p>
<p>adj. 时间的; 世俗的; 暂存的; &lt;语&gt;表示时间的</p>
<p>33、adjuster[ə’dʒʌstə] </p>
<p>n. 调停者，调节器</p>
<h2 id="step-18"><a href="#step-18" class="headerlink" title="step-18"></a><strong>step-18</strong></h2><h3 id="掌握-15"><a href="#掌握-15" class="headerlink" title="掌握"></a><strong>掌握</strong></h3><p>1、collection [kə’lekʃ(ə)n] Collection</p>
<p>收集，采集</p>
<p>2、arrayList ArrayList</p>
<p>n. 数组列表、动态数组</p>
<p>3、list[lɪst] List</p>
<p>n. [计] 列表；清单；目录</p>
<p>4、set[set] Set</p>
<p>n. [数] 集合；</p>
<p>5、clear[klɪə]</p>
<p>vt. 清除；</p>
<p>6、size[saɪz]</p>
<p>n. 大小；尺寸</p>
<p>7、contains [kən’teinz]</p>
<p>v. 包含；容纳；包含某字符串（contain 的单三形式）</p>
<p>8、iterator [ɪtə’reɪtə] Iterator</p>
<p>n. 迭代器；</p>
<p>9、iterable Iterable</p>
<p>可迭代的; 可重复的; 迭代的</p>
<p>10、has[hæz]</p>
<p>v. 有，得到（have 的第三人称单数）；</p>
<p>11、next[nekst]</p>
<p>下一个</p>
<p>12、previous [‘priːvɪəs]</p>
<p>前一个、上一个 </p>
<h3 id="扩展"><a href="#扩展" class="headerlink" title="扩展"></a><strong>扩展</strong></h3><p>1、resize[riː’saɪz]</p>
<p>vt. 调整大小</p>
<p>2、retain[rɪ’teɪn]</p>
<p>vt. 保持、留存</p>
<p>3、vector[‘vektə]</p>
<p>向量</p>
<p>4、linked[lɪŋkt]</p>
<p>v. 连接；串联（link 的过去分词）</p>
<p>linked list ： 链表 LinkedList</p>
<p>5、enumeration [ɪ,njuːmə’reɪʃən] </p>
<p>n. 列举；[数] 计算；细目</p>
<p>6、concurrent [kən’kʌr(ə)nt]</p>
<p>adj. 并发的；一致的；同时发生的；并存的</p>
<p>7、modification[,mɒdɪfɪ’keɪʃ(ə)n]</p>
<p>n. 修改，修正；改变</p>
<p>8、ConcurrentModificationException</p>
<p>并发修改异常</p>
<p>9、HashSet</p>
<p>散列集合</p>
<p>10、LinkedHashSet </p>
<p>链式散列集</p>
<p>11、TreeSet</p>
<p>树集 </p>
<h2 id="step-19"><a href="#step-19" class="headerlink" title="step-19"></a><strong>step-19</strong></h2><h3 id="掌握-16"><a href="#掌握-16" class="headerlink" title="掌握"></a><strong>掌握</strong></h3><p>1、map[mæp]</p>
<p>vt. 映射；</p>
<p>2、key[kiː]</p>
<p>n. （打字机等的）键；关键；钥匙</p>
<p>3、value[‘væljuː]</p>
<p>n. 值；</p>
<p>4、put[pʊt]</p>
<p>vt. 放；安置；赋予</p>
<p>5、entry[ˈentrɪ]</p>
<p>n. 进入；入口；条目；</p>
<h3 id="拓展-17"><a href="#拓展-17" class="headerlink" title="拓展"></a><strong>拓展</strong></h3><p>1、HashMap</p>
<p>哈希图</p>
<p>2、Hashtable</p>
<p>哈希表</p>
<p>3、TreeMap</p>
<p>矩阵树图</p>
<p>4、LinkedHashMap </p>
<p>链表哈希映射</p>
<p>5、property[‘prɒpətɪ]</p>
<p>属性</p>
<p>6、properties[‘prɒpətɪz]</p>
<p>（property 的复数形式）</p>
<p>7、bucket [‘bʌkɪt] </p>
<p>n. 桶 </p>
<p>8、generic[dʒɪ’nerɪk]</p>
<p>泛化</p>
<p>9、wildcard[‘waɪldkɑrd]</p>
<p>n. 通配符</p>
<p>10、shuffle[‘ʃʌf(ə)l]</p>
<p>v. 洗牌</p>
<p>11、iterate [‘ɪtərət] </p>
<p>vt. 迭代；重复；</p>
<p>12、compare [kəm’peə] </p>
<p>n. 比较</p>
<p>13、insert [ɪn’sɜːt] </p>
<p>vt. 插入；嵌入;</p>
<p>14、fill [fɪl] </p>
<p>vt. 装满，使充满；满足；</p>
<p>vi. 被充满</p>
<h2 id="step-20"><a href="#step-20" class="headerlink" title="step-20"></a><strong>step-20</strong></h2><h3 id="掌握-17"><a href="#掌握-17" class="headerlink" title="掌握"></a><strong>掌握</strong></h3><p>1、file[faɪl]</p>
<p>n. 文件；</p>
<p>2、directory[dɪ’rekt(ə)rɪ; daɪ-]</p>
<p>n. [计] 目录；</p>
<p>3、create[kriː’eɪt]</p>
<p>创建</p>
<p>4、InputStream</p>
<p>字节输入流</p>
<p>5、OutputStream </p>
<p>字节输出流</p>
<p>6、Reader</p>
<p>字符输入流</p>
<p>7、Writer</p>
<p>字符输出流</p>
<p>8、read [ri:d;red]</p>
<p>读取</p>
<p>9、write [raɪt]</p>
<p>写</p>
<p>10、close[kləʊs]</p>
<p>vi. 关；结束；关闭</p>
<p>11、flush [flʌʃ] </p>
<p>刷新</p>
<p>12、stream [striːm] </p>
<p>流动；流</p>
<h3 id="拓展-18"><a href="#拓展-18" class="headerlink" title="拓展"></a><strong>拓展</strong></h3><p>1、folder[‘fəʊldə]</p>
<p>n. 文件夹；折叠机；</p>
<p>2、modified[ˈmɒdɪfaɪd]</p>
<p>adj. 改进的，修改的</p>
<p>long lastModified 获取最后一次的修改时间 ; 上次修改的时间</p>
<p>3、parent[‘peər(ə)nt]</p>
<p>n. 父亲（或母亲）；父母亲；根源</p>
<p>4、absolute[‘æbsəluːt]</p>
<p>adj. 绝对的；完全的；</p>
<p>5、canonical [kə’nɒnɪk(ə)l]</p>
<p>规范化</p>
<p>6、mkdir</p>
<p>n. 建立一个新的子目录（DOS 命令） </p>
<p>7、separator[‘sepəreɪtə] </p>
<p>[计] 分隔符</p>
<p>8、hidden [‘hɪdn]</p>
<p>adj. 隐藏的</p>
<p>9、suffix[‘sʌfɪks]</p>
<p>n. 后缀；下标</p>
<p>10、prefix[‘priːfɪks]</p>
<p>n. 前缀</p>
<p>11、readonly</p>
<p>adj. 只读的</p>
<p>12、canWrite </p>
<p>是否可写</p>
<p>13、readable[‘riːdəb(ə)l]</p>
<p>adj. 可读的；</p>
<p>14、exists</p>
<p>n. 存在量词（exist 的复数）</p>
<p>15、rename[riː’neɪm]</p>
<p>vt. 重新命名，改名</p>
<p>16、FileNotFoundException</p>
<p>文件找不到异常</p>
<h2 id="step-21"><a href="#step-21" class="headerlink" title="step-21"></a><strong>step-21</strong></h2><p>###<strong>掌握</strong></p>
<p>1、buffered</p>
<p>adj. 缓冲的</p>
<p>v. 缓冲（buffer 的过去分词）</p>
<p>2、ObjectInputStream </p>
<p>对象输入流，从字节流中读出序列化的状态信息并把它们恢复为对象 </p>
<p>3、ObjectOutputStream</p>
<p>对象输出流，序列化一个对象</p>
<p>4、serializable Serializable</p>
<p>adj. 可串行化的</p>
<p>5、transient[‘trænzɪənt]</p>
<p>暂时性，瞬态的</p>
<p>6、channel[‘tʃæn(ə)l]</p>
<p>n. 通道；频道；海峡</p>
<h3 id="拓展-19"><a href="#拓展-19" class="headerlink" title="拓展"></a><strong>拓展</strong></h3><p>1、transfer[træns’fɜː; trɑːns-; -nz-]</p>
<p>n. 转让；转移；</p>
<p>2、encoding[ɪn’kəʊdɪŋ]</p>
<p>v. [计] 编码（encode 的 ing 形式）</p>
<p>3、decoding[‘di’kodɪŋ]</p>
<p>v. 破译；译解（decode 的 ing 形式）</p>
<p>4、charset</p>
<p>n. 字符集</p>
<p>5、UID</p>
<p>唯一标识符：unique identifier</p>
<p>6、serialVersionUID</p>
<p>序列化唯一标识符</p>
<p>7、access[‘ækses]</p>
<p>存取</p>
<p>8、RandomAccessFile</p>
<p>支持“随机访问”</p>
<p>的方式，程序可以直接跳到文件的任意地方来读、</p>
<p>写文件</p>
<p>9、seek [siːk]</p>
<p>vt. 寻求；寻找；</p>
<p>10、skip[skɪp] </p>
<p>vt. 跳过；遗漏</p>
<p>11、resources [rɪˈsɔːsiz]</p>
<p>n. [计][环境] 资源；物力（resource 的复数）</p>
<p>12、option[‘ɒpʃ(ə)n]</p>
<p>n. [计] 选项；</p>
<p>13、capacity[kə’pæsɪtɪ]</p>
<p>n. 能力；容量；</p>
<p>14、limit[‘lɪmɪt]</p>
<p>n. 限制；限度；界线</p>
<p>15、position[pə’zɪʃ(ə)n]</p>
<p>位置</p>
<p>16、mark[mɑːk]</p>
<p>标记，标志</p>
<p>17、reset [riː’set]</p>
<p>vi. 重置；清零</p>
<p>18、allocate[‘æləkeɪt]</p>
<p>vi. 分配；指定</p>
<p>19、flip[flɪp]</p>
<p>翻转</p>
<p>20、rewind[riː’waɪnd]</p>
<p>反绕、倒带、倒转、倒回；重绕</p>
<p>21、direct[dəˈrekt; daɪˈrekt]</p>
<p>adj. 直接的；</p>
<p>22、encoder [en’kəʊdə]</p>
<p>n. 编码器；译码器</p>
<p>23、decoder[,diː’kəʊdə]</p>
<p>n. 解码器，译码器；</p>
<p>24、serialize [‘sɪrɪəlaɪz] </p>
<p>vt. 连载，使连续，串行化</p>
<p>25、serialized </p>
<p>n. 序列化;  </p>
<p>使…成序列（serialize 的过去分词）</p>
<p>26、serialization [,sɪərɪəlɪ’zeʃən] </p>
<p>n. 序列化；串行化；</p>
<h2 id="step-22"><a href="#step-22" class="headerlink" title="step-22"></a><strong>step-22</strong></h2><p>###<strong>掌握</strong></p>
<p>1、thread [θred]</p>
<p>线程</p>
<p>2、start[stɑːt]</p>
<p>vt. 开始；启动</p>
<p>3、run[rʌn]</p>
<p>执行，运行</p>
<p>4、sleep[sliːp]</p>
<p>n. 睡眠</p>
<p>5、wait[weɪt]</p>
<p>vt. 等候；推迟；延缓</p>
<p>6、notify[‘nəʊtɪfaɪ]</p>
<p>vt. 通告，通知；公布</p>
<p>7、stop[stɒp]</p>
<p>vi. 停止；中止；</p>
<p>8、synchronized[‘sɪŋkrənaɪzd]</p>
<p>adj. 同步的；同步化的</p>
<p>v. 使协调（synchronize 的过去分词）；同时发生；校准</p>
<p>9、lock [lɒk]</p>
<p>vt. 锁，锁上； </p>
<h3 id="拓展-20"><a href="#拓展-20" class="headerlink" title="拓展"></a><strong>拓展</strong></h3><p>1、program[‘prəʊɡræm]</p>
<p>n. 程序；</p>
<p>2、process [prəˈses;(for n.)ˈprəʊses]</p>
<p>过程，进程</p>
<p>3、illegal [ɪ’liːg(ə)l]</p>
<p>adj. [法] 非法的；违法的；违反规则的</p>
<p>IllegalThreadStateException：非法的线程状态异常</p>
<p>4、interrupted[ɪntə’rʌptɪd]</p>
<p>adj. 中断的；被打断的；</p>
<p>5、suspend[sə’spend]</p>
<p>vt. 延缓，推迟；使暂停</p>
<p>6、resume[rɪˈzjuːm]</p>
<p>vt. 重新开始，继续；恢复，重新占用</p>
<p>7、yield[jiːld]</p>
<p>vi. 屈服，投降</p>
<p>8、alive[ə’laɪv]</p>
<p>adj. 活着的；</p>
<p>9、priority[praɪ’ɒrɪtɪ]</p>
<p>n. 优先；优先权；[数] 优先次序；</p>
<p>10、singleton[‘sɪŋg(ə)lt(ə)n]</p>
<p>独身，单例</p>
<p>11、lazy[‘leɪzɪ]</p>
<p>adj. 懒惰的</p>
<p>12、hungry[‘hʌŋgrɪ]</p>
<p>adj. 饥饿的；渴望的；</p>
<p>13、safe [seɪf]</p>
<p>adj. 安全的；可靠的；</p>
<p>14、join [dʒɒɪn] </p>
<p>vt. 参加；结合；连接;</p>
<h2 id="step-23"><a href="#step-23" class="headerlink" title="step-23"></a><strong>step-23</strong></h2><h3 id="掌握-18"><a href="#掌握-18" class="headerlink" title="掌握"></a><strong>掌握</strong></h3><p>1、host name[‘host,nem]</p>
<p>n. 主机名称；主名</p>
<p>2、host address</p>
<p>[计] 主机地址</p>
<p>3、IP[‘aɪ’pi]</p>
<p>abbr. 互联网协议（Internet Protocol）；</p>
<p>4、localhost</p>
<p>n. 本地主机；本地服务器</p>
<p>5、TCP</p>
<p>abbr. 传输控制协议（Transmission Control Protocol）；</p>
<p>6、UDP</p>
<p>abbr. 用户数据报协议（User Datagram Protocol）；</p>
<p>7、socket[‘sɒkɪt]</p>
<p>n. 插座；窝，穴；牙槽 [计]套接口，套接字</p>
<p>8、connect[kə’nekt]</p>
<p>vt. 连接；</p>
<p>9、server[‘sɜːvə]</p>
<p>服务器</p>
<p>10、client[‘klaɪənt]</p>
<p>客户端</p>
<p>11、receive[rɪ’siːv]</p>
<p>接收</p>
<p>12、send[send]</p>
<p>发送</p>
<p>13、port [pɔːt] </p>
<p>（计算机的）端口； </p>
<h3 id="拓展-21"><a href="#拓展-21" class="headerlink" title="拓展"></a><strong>拓展</strong></h3><p>1、internet [‘ɪntənet] </p>
<p>n. 因特网</p>
<p>2、datagram [‘detə,græm] </p>
<p>n. 数据报</p>
<p>3、packet [‘pækɪt] </p>
<p>n. 数据包，信息包；</p>
<p>4、HTTP</p>
<p>abbr. 超文本传输协议（Hyper Text Transport Protocol） </p>
<p>5、url [,ju: ɑ:r ‘el] </p>
<p>abbr. 全球资源定位器（Uniform Resource Locator）; </p>
<p>6、request [rɪ’kwest] </p>
<p>n. 请求；需要; </p>
<p>vt. 要求，请求</p>
<p>7、response[rɪ’spɒns]</p>
<p>n. 响应；反应；回答</p>
<p>8、locate [lə(ʊ)’keɪt] </p>
<p>vt. 位于；查找…的地点; </p>
<p>vi. 定位；定居</p>
<p>9、link [lɪŋk] </p>
<p>n. [计] 链环，环节；联系，关系</p>
<p>vt. 连接，连结；</p>
<p>linkage [‘lɪŋkɪdʒ] </p>
<p>n. 连接；结合；联接</p>
<p>linker [‘lɪŋkɚ] </p>
<p>n. 链接器；连结器</p>
<p>10、firewall [‘faɪɚwɔl] </p>
<p>n. 防火墙; </p>
<p>vt. 用作防火墙</p>
<p>11、login [‘lɒɡɪn] </p>
<p>n. [计] 进入系统</p>
<p>vt. [计] 登录；注册</p>
<p>12、online [ɒn’laɪn] </p>
<p>adj. 联机的；在线的</p>
<p>13、offline [ɒf’laɪn]</p>
<p>adj. 脱机的；离线的，未连线的</p>
<h2 id="step-24"><a href="#step-24" class="headerlink" title="step-24"></a><strong>step-24</strong></h2><h3 id="掌握-19"><a href="#掌握-19" class="headerlink" title="掌握"></a><strong>掌握</strong></h3><p>1、field[fiːld]</p>
<p>字段、域、属性</p>
<p>2、method[‘meθəd]</p>
<p>n. 方法；条理；类函数</p>
<p>3、invoke[ɪn’vəʊk]</p>
<p>调用</p>
<p>4、constructor[kənˈstrʌktə(r)]</p>
<p>n. 构造函数；构造器；</p>
<p>5、new instance newInstance()</p>
<p>创建实例对象</p>
<p>6、ClassLoader</p>
<p>类加载器</p>
<h3 id="拓展-22"><a href="#拓展-22" class="headerlink" title="拓展"></a><strong>拓展</strong></h3><p>1、reflect[rɪ’flekt]</p>
<p>反射</p>
<p>2、load[ləʊd]</p>
<p>vi. [力] 加载；装载 </p>
<p>3、declared [dɪ’kleəd]</p>
<p>已声明的</p>
<p>4、accessible[ək’sesɪb(ə)l]</p>
<p>adj. 易接近的；可进入的；</p>
<p>5、dynamic[daɪ’næmɪk]</p>
<p>adj. 动态的；</p>
<p>6、handle [‘hænd(ə)l] </p>
<p>vt. 处理；操作；</p>
<p>InvocationHandler</p>
<p>调用处理器，其实动态代理机制最核心的就是 InvocationHandler(调用</p>
<p>处理器)这个接口。在动态代理中，是基于面向接口编程的。</p>
<p>7、parameter type</p>
<p>参数类型，parameterTypes（复数形式）</p>
<p>8、primitive type</p>
<p>基本数据类型</p>
<p>网络其他描述方式：base data type、primary data type、atomic data type </p>
<p>9、reference type</p>
<p>引用数据类型</p>
<p>10、Generic Superclass</p>
<p>泛化父类，例如：Father<String></p>
<p>11、Generic Interfaces </p>
<p>泛化接口们，例如：Comparable<Student>等</p>
<p>12、getDeclaredMethod(String name, Class&lt;?&gt;… parameterTypes) </p>
<p>返回一个 Method 对象，该对象反映此 Class 对象所表示的类或接</p>
<p>口的指定已声明方法</p>
<p>getMethod(String name, Class&lt;?&gt;… parameterTypes)</p>
<p>返回一个 Method 对象，它反映此 Class 对象所表示的类或接口的</p>
<p>指定公共成员方法。</p>
<p>13、target [‘tɑːgɪt] </p>
<p>n. 目标；靶子</p>
<p>vt. 把……作为目标；规定……的指标； </p>
<h2 id="step-25"><a href="#step-25" class="headerlink" title="step-25"></a><strong>step-25</strong></h2><h3 id="掌握-20"><a href="#掌握-20" class="headerlink" title="掌握"></a><strong>掌握</strong></h3><p>1、lambda[‘læmdə]</p>
<p>n. 希腊字母的第 11 个 </p>
<p>2、functional[‘fʌŋkʃənl]</p>
<p>adj. 功能的</p>
<p>3、interface[‘intəfeis]</p>
<p>n. 界面；接口；接触面</p>
<p>4、consumer[kən’sju:mə]</p>
<p>n. 消费者；用户，顾客</p>
<p>5、supplier[sə’plaɪə]</p>
<p>n. 供应厂商，供应国；供应者</p>
<p>6、function[‘fʌŋ(k)ʃ(ə)n]</p>
<p>n. 功能；[数] 函数；职责；盛大的集会</p>
<p>vi. 运行；活动；行使职责</p>
<p>7、predicate[ˈprɛdɪˌkeɪt]</p>
<p>vt. 断定为…；使…基于</p>
<p>vi. 断言，断定</p>
<p>n. 谓语，述语</p>
<p>adj. 谓语的；述语的</p>
<p>8、optional [‘ɒpʃ(ə)n(ə)l] Optional</p>
<p>adj. 可选择的，随意的</p>
<p>9、stream[striːm]</p>
<p>n. 溪流；流动；潮流；光线</p>
<p>vi. 流；涌进；飘扬</p>
<p>vt. 流出；涌出；使飘动</p>
<p>10、filter [‘fɪltə] </p>
<p>vi. 滤过；渗入；慢慢传开</p>
<p>n. 滤波器；[化工] 过滤器；筛选；滤光器</p>
<p>vt. 过滤；渗透；用过滤法除去</p>
<p>11、distinct[dɪ’stɪŋ(k)t]</p>
<p>adj. 明显的；独特的；清楚的；有区别的</p>
<p>12、limit[‘lɪmɪt]</p>
<p>n. 限制；限度；界线</p>
<p>vt. 限制；限定</p>
<p>13、skip[skɪp]</p>
<p>vi. 跳跃；跳绳；遗漏；跳读</p>
<p>vt. 跳过；遗漏</p>
<p>n. 跳跃；跳读</p>
<p>14、map [mæp]</p>
<p>vt. 映射；计划；绘制地图；确定基因在染色体中的位置</p>
<p>15、flat[flæt]</p>
<p>adj. 平的；单调的；不景气的；干脆的；平坦的；扁平的；浅的</p>
<p>adv. （尤指贴着另一表面）平直地；断然地；水平地；直接地，完全</p>
<p>地</p>
<p>n. 平地；公寓；平面</p>
<p>vt. 使变平；[音乐]使（音调）下降，尤指降半音</p>
<p>16、match[mætʃ]</p>
<p>vt. 使比赛；使相配；敌得过，比得上；相配；与…竞争</p>
<p>17、reduce [rɪ’djuːs]</p>
<p>vt. 减少；降低；使处于；把…分解</p>
<p>vi. 减少；缩小；归纳为</p>
<p>18、collect[kə’lekt]</p>
<p>vt. 收集；募捐</p>
<p>vi. 收集；聚集；募捐 </p>
<h3 id="拓展-23"><a href="#拓展-23" class="headerlink" title="拓展"></a><strong>拓展</strong></h3><p>1、unary[‘juːnərɪ]</p>
<p>adj. [数] 一元的</p>
<p>2、operator[‘ɒpəreɪtə]</p>
<p>n. 经营者；操作员；话务员；行家</p>
<p>3、binary[‘baɪnərɪ]</p>
<p>adj. [数] 二进制的；二元的，二态的</p>
<p>4、parallel[‘pærəlel]</p>
<p>n. 平行线；对比</p>
<p>vt. 使…与…平行</p>
<p>adj. 平行的；类似的，相同的</p>
]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>英语</tag>
      </tags>
  </entry>
  <entry>
    <title>计算机硬件的简单学习</title>
    <url>/2021/07/31/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A1%AC%E4%BB%B6%E7%9A%84%E7%AE%80%E5%8D%95%E5%AD%A6%E4%B9%A0/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><blockquote>
<p>参考价值：已完结、无错误、但比较浅显，可作为参考教程使用。</p>
</blockquote>
<hr>
<h2 id="计算机硬件总览"><a href="#计算机硬件总览" class="headerlink" title="计算机硬件总览"></a>计算机硬件总览</h2><p><img src="https://i.loli.net/2021/07/31/T2SMCboJLxkvnzi.jpg"></p>
<p>*总线：搭建在主板上，数据就是通过总线在各个“设备”之间传递。</p>
<h2 id="冯·诺伊曼体系结构"><a href="#冯·诺伊曼体系结构" class="headerlink" title="冯·诺伊曼体系结构"></a>冯·诺伊曼体系结构</h2><p><img src="https://i.loli.net/2021/07/31/HrKEZeTph6nbBIw.jpg"></p>
<p>冯·诺伊曼体系结构是现代计算机的基础，现在大多数计算机仍是基于冯·诺伊曼体系结构，只是做了一些改进而已。冯·诺伊曼也因此被称为“计算机之父”。</p>
<h2 id="IT行业三大定律"><a href="#IT行业三大定律" class="headerlink" title="IT行业三大定律"></a>IT行业三大定律</h2><ol>
<li><p>摩尔定律：</p>
<p>当价格不变时，集成电路上的元器件大约每隔18~24个月便会增加一倍，性能也会增加一倍。</p>
</li>
<li><p>安迪·比尔定律：</p>
<p>当计算机硬件进行更新时，操作系统（软件）也会跟着更新。</p>
<blockquote>
<p>ps：这也是为什么我们更换了我们的计算机后，我们并没有感到计算机更加流畅原因。因为操作系统也随着硬件的更新而更新了。</p>
</blockquote>
</li>
<li><p>反摩尔定律：</p>
<p>一个IT公司如果今天卖出和18个月前同样多的、同样的商品，它的营业额减半。</p>
</li>
</ol>
<blockquote>
<p>ps：这三大定律其实更像是商业定律，IT行业迭代如此之快，某种意义上也是受了这三大定律的影响。毕竟，如果别的公司遵守这三大定律，而自己的公司不去追赶，早晚会被同行远远甩开。</p>
</blockquote>
<h2 id="中央处理器（CPU）"><a href="#中央处理器（CPU）" class="headerlink" title="中央处理器（CPU）"></a>中央处理器（CPU）</h2><p>CPU是计算机的大脑。它从内存中获取指令，然后执行指令。</p>
<ol>
<li><p>组成：</p>
<ul>
<li>控制单元：从内存中接受指令，并向其他设备、组件发出指令</li>
<li>算术/逻辑单元：完成对数据的逻辑处理。</li>
</ul>
</li>
<li><p>CPU的速度：CPU的速度用赫兹（Hz）表示，1Hz表示计算机每秒能发射一个电子脉冲（可以理解为高低电压电流，对于CPU来说就是‘０’‘１’信号），速度越快CPU在给定时间内执行的指令就越多。目前CPU的速度一般以千兆赫（ＧＨｚ）作为常用单位。</p>
</li>
<li><p>双核ＣＰＵ：</p>
<p>双核CPU实际上就是两个小CPU组成了一个大CPU，只不过一般把小CPU称为“核”。多核可以提高CPU的处理能力。</p>
</li>
</ol>
<h2 id="内存"><a href="#内存" class="headerlink" title="内存"></a>内存</h2><h3 id="比特（bit）和字节（byte）"><a href="#比特（bit）和字节（byte）" class="headerlink" title="比特（bit）和字节（byte）"></a>比特（bit）和字节（byte）</h3><ul>
<li><p>计算机是一系列电路的集合，通过开和关来实现低电压电流（值为0）和高电压电流（值为1）。一个1或一个0存储为1个比特，比特也是计算机最小的存储单位。</p>
</li>
<li><p>字节是计算机的最基本存储单位，一个字节由8个连续的比特构成。</p>
</li>
<li><p>1千字节（KB）=1024字节（B）</p>
<p>1兆字节（MB）=1024千字节（KB）</p>
<p>1千兆字节（GB）=1024兆字节（MB）</p>
<p>1万亿兆字节（TB）=1024千兆字节（GB）</p>
</li>
</ul>
<h3 id="内存-1"><a href="#内存-1" class="headerlink" title="内存"></a>内存</h3><ul>
<li><p>内存的特点：</p>
<ol>
<li>速度比硬盘快10倍以上，但比CPU慢的多的多。</li>
<li>只能缓存数据，断电数据就会被清除</li>
</ol>
</li>
<li><p>CPU只在内存中处理数据</p>
<p>当需要CPU处理数据时，对应的数据会从硬盘中传递到内存中被CPU执行处理</p>
<blockquote>
<p>CPU的运算速度比硬盘快的太多，如果在硬盘中处理数据会导致速度奇慢（硬盘太慢了），因此CPU在内存中处理数据</p>
</blockquote>
</li>
<li><p>内存越大与计算机速度越快，但如果内存占有没有饱和，内存增大，计算机速度不会增快。</p>
</li>
<li><p>内存的意义：</p>
<p>相当于为电脑开了一个高速公路，解决了CPU在硬盘中处理数据过于缓慢的问题。</p>
</li>
<li><p>内存的每一个字节都对应一个唯一的地址。</p>
</li>
</ul>
<h2 id="存储设备"><a href="#存储设备" class="headerlink" title="存储设备"></a>存储设备</h2><ol>
<li><p>内存</p>
<p>速度快，短暂缓存数据，断电即消失</p>
</li>
<li><p>硬盘</p>
<p>速度慢，永久储存数据。</p>
</li>
</ol>
<h2 id="输入输出设备"><a href="#输入输出设备" class="headerlink" title="输入输出设备"></a>输入输出设备</h2><h3 id="输入设备"><a href="#输入设备" class="headerlink" title="输入设备"></a>输入设备</h3><ul>
<li>键盘</li>
<li>鼠标</li>
</ul>
<h3 id="输出设备"><a href="#输出设备" class="headerlink" title="输出设备"></a>输出设备</h3><ul>
<li>显示器</li>
<li>打印机</li>
<li>音箱</li>
</ul>
<h2 id="通信设备"><a href="#通信设备" class="headerlink" title="通信设备"></a>通信设备</h2><p>用于联网</p>
<ul>
<li>拨号调制解调器</li>
<li>DSL（数字用户线）</li>
<li>电缆调制解调器</li>
<li>网络接口卡</li>
<li>无线网络</li>
</ul>
]]></content>
      <categories>
        <category>计算机组成原理</category>
      </categories>
      <tags>
        <tag>学习笔记</tag>
        <tag>计算机组成原理</tag>
      </tags>
  </entry>
  <entry>
    <title>编译运行一个简单的Java程序&quot;Hello XX&quot;</title>
    <url>/2021/07/24/%E7%BC%96%E8%AF%91%E8%BF%90%E8%A1%8C%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84Java%E7%A8%8B%E5%BA%8F/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><blockquote>
<p>前言：</p>
<p>java有些高级编译器用着是是非常方便的，但是对于初学者并不建议使用。编程过程中很多东西都会由高级编译器自动生成，不利于初学者对于底层原理的理解和手感的锻炼。所以建议初学者只用记事本和命令行进行初期的学习，不要嫌low，这对初学者的学习很有何好处。</p>
</blockquote>
<blockquote>
<p>参考价值：已完结、无错误，可作为教程使用。</p>
</blockquote>
<hr>
<h1 id="前期准备"><a href="#前期准备" class="headerlink" title="前期准备"></a>前期准备</h1><h2 id="打开记事本"><a href="#打开记事本" class="headerlink" title="打开记事本"></a>打开记事本</h2><p>打开Windows开始界面–&gt;Windows附件–&gt;记事本</p>
<p><img src="https://i.loli.net/2021/07/24/T4j3Qgrmxklpou6.jpg" alt="text"></p>
<h2 id="写一个简单的代码"><a href="#写一个简单的代码" class="headerlink" title="写一个简单的代码"></a>写一个简单的代码</h2><p><img src="https://i.loli.net/2021/07/24/JsE95o2uUgTkyOp.jpg" alt="java"></p>
<p>代码看不懂没关系西，以后总会看懂的 ! </p>
<h2 id="保存"><a href="#保存" class="headerlink" title="保存"></a>保存</h2><p><img src="https://i.loli.net/2021/07/24/EJ3p9jyqVaIYAxw.jpg" alt="s"></p>
<p>文件名：xxx.java</p>
<p>编码要调到ANSI</p>
<h1 id="打开命令行进行操作（敲黑板！！！）"><a href="#打开命令行进行操作（敲黑板！！！）" class="headerlink" title="打开命令行进行操作（敲黑板！！！）"></a>打开命令行进行操作（敲黑板！！！）</h1><p><img src="https://i.loli.net/2021/07/24/5feq7gFJo8dYST1.jpg"></p>
<p><img src="https://i.loli.net/2021/07/24/V2W8kyxwnXQ1Y4h.jpg"></p>
<ol>
<li><p>cd到java文档存储的目录</p>
</li>
<li><p>使用javac程序对java文档进行编译</p>
<p>语法：javac 文档名.java</p>
<p>得到class文件，如图：</p>
<p><img src="https://i.loli.net/2021/07/24/fMvcnLzK7yXsilS.jpg" alt="class"></p>
</li>
<li><p>使用java程序运行class文件</p>
</li>
<li><p>退到D盘我们再执行class文件，发现找不到文件。</p>
<p>这是因为我们没有配置class文件的环境变量，为了让我们可以在任何路径执行class文件，我们需要配置classpath环境变量。</p>
</li>
<li><p>配置临时环境变量</p>
<ul>
<li><p>为什么要配置”临时”环境变量？</p>
<p>java开发工具包一般存放在固定的文件夹里，所以我们只需要配置系统环境变量，并且平时几乎不需要改动。</p>
<p>但是class文件我们一般并不是存储在一个目录（文件夹）里。这次此我们要执行A目录里的class文件，下一次我们就可能要执行B目录里的文件，总是对系统环境变量改来改去不仅麻烦而且容易遗忘。</p>
<p>所以我们需要通过配置临时环境变量应对这种情况。</p>
</li>
<li><p>如何配置临时环境变量？</p>
<p>以下指令可以在任意目录下执行：<br>//查看所有环境变量</p>
<p>set</p>
<p>//查看某个环境变量</p>
<p>set Path</p>
<p>//定义某个环境变量</p>
<p>set classpath=路径</p>
<p>//清除环境变量</p>
<p>set classpath=</p>
</li>
<li><p>临时配置环境变量有什么特点？</p>
<ol>
<li>它实际上并不会改变系统的环境变量</li>
<li>只临时起作用，命令行窗口关闭后所有设置全部清零</li>
</ol>
</li>
</ul>
</li>
<li><p>在D盘运行class文件</p>
</li>
<li><p>清楚classpath变量，并在D盘建立一个新的java文档并编译</p>
<p><img src="https://i.loli.net/2021/07/24/lo2PkRQrcN6HdUA.jpg" alt="java"></p>
<p><img src="https://i.loli.net/2021/07/24/VFwyWNLKcgT2CHP.jpg" alt="D"></p>
</li>
<li><p>在D盘运行Hello文件</p>
</li>
<li><p>分别以两种方式设置临时环境变量，并进行以下测试：</p>
<ol>
<li><p>设置classpath=路径；，执行Hello文件，删除”路径“中的class文件，并执行Hello文件</p>
</li>
<li><p>清除classpath，设置classpath=路径，执行Hello文件</p>
</li>
</ol>
<ul>
<li><p>测试结果的原理：<br>调用Java从程序执行class文件时，虚拟机会想寻找classpath中存储的目录下的class文件，之后分三种情况：</p>
<ol>
<li><p>没有设置classpath环境变量：</p>
<p>直接在当前目录下寻找对应的class文件，有则运行，没有则”报错“。</p>
</li>
<li><p>设置了classpath=路径；</p>
<p>虚拟机先查看存储在classpath中的目录下的class文件，若有则执行，若没有则查看当前目录下的class文件，若有则执行，若无则“报错”。</p>
</li>
<li><p>设置了classpath=路径</p>
<p>虚拟机先查看存储在classpath中的目录下的class文件，若有则执行，若没有则 “报错”。</p>
</li>
</ol>
</li>
<li><p>*注：一般推荐使用 classpath=路径 的环境配置方式</p>
</li>
</ul>
</li>
</ol>
]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>学习笔记</tag>
      </tags>
  </entry>
  <entry>
    <title>Java环境搭建</title>
    <url>/2021/07/22/Java%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><blockquote>
<p>参考价值：已完结，无错误、可实现，可作为教程使用</p>
</blockquote>
<hr>
<h1 id="JRE与JDK"><a href="#JRE与JDK" class="headerlink" title="JRE与JDK"></a>JRE与JDK</h1><h2 id="什么是JRE"><a href="#什么是JRE" class="headerlink" title="什么是JRE ?"></a>什么是JRE ?</h2><p>JRE全称Java Runtime Environment，即Java运行环境。</p>
<p>其主要包括Java虚拟机和Java的一些核心类库，用来运行Java程序。</p>
<h2 id="什么是JDK？"><a href="#什么是JDK？" class="headerlink" title="什么是JDK？"></a>什么是JDK？</h2><p>JDK全称Java Development Kit , 即Java开发工具包。</p>
<p>其主要包括Java的开发工具（编译工具、打包工具等），也包括了JRE，用来开发运行Java程序。</p>
<p>*注：因此，安装了JDk就不用安装JRE。</p>
<h1 id="下载JDK"><a href="#下载JDK" class="headerlink" title="下载JDK"></a>下载JDK</h1><p><a href="https://www.oracle.com/">官方网址</a></p>
<p><img src="https://i.loli.net/2021/07/22/aWqHLzuyrgO7k4R.jpg" alt="JDK"></p>
<p>点击Products -&gt; Java</p>
<p><img src="https://i.loli.net/2021/07/22/qGkfjZtyzEp5PvQ.jpg" alt="JDk"></p>
<p>点击Download Java now</p>
<p><img src="https://i.loli.net/2021/07/22/Fum4IVRv3OBoUdP.jpg" alt="JDK"></p>
<p>点击 JDK Download</p>
<p><img src="https://i.loli.net/2021/07/22/YrsZ8gXC5PHFRmb.jpg" alt="JDK"></p>
<p>点击Windows x64 Installer 行的下载，安装即可（也可以i下载Windows x64 Compressed Archive 后解压到自己想存放的位置）</p>
<p><img src="https://i.loli.net/2021/07/23/62OZUkx3umwhWc8.jpg" alt="JDK"></p>
<h1 id="环境配置"><a href="#环境配置" class="headerlink" title="环境配置"></a>环境配置</h1><h2 id="为什么要配置环境"><a href="#为什么要配置环境" class="headerlink" title="为什么要配置环境 ?"></a>为什么要配置环境 ?</h2><p>首先，我们要知道在命令行中我们只能打开当前目录下的文件，否则就会报错,如下图所示：</p>
<p><img src="https://i.loli.net/2021/07/23/S7OygTc1W59JHb8.jpg" alt="erro"></p>
<p>我们不可能每次开发java都要cd到对应目录下打开开发工具，这未免也太过麻烦。所以我们要通过配置环境来让我们可以在任意目录下都能够直接执行bin目录（里面都是Java开发工具）里的程序。效果如图所示：</p>
<p><img src="https://i.loli.net/2021/07/23/Powb3SQFJZeGHh7.jpg" alt="result"></p>
<h2 id="如何配置环境-？"><a href="#如何配置环境-？" class="headerlink" title="如何配置环境 ？"></a>如何配置环境 ？</h2><ol>
<li><p>打开环境变量配置窗口</p>
<p>Windows设置–&gt;系统–&gt;关于–&gt;系统信息</p>
<p><img src="https://i.loli.net/2021/07/23/qS7TwruPNB9e3ij.jpg" alt="系统信息"></p>
</li>
<li><p>高级系统设置–&gt;高级–&gt;环境变量</p>
<p><img src="https://i.loli.net/2021/07/23/9s8FBGkXMoPANtQ.jpg" alt="环境变量"></p>
</li>
<li><p>在系统变量里创建新的变量“JAVA_HOME”并将它写进Path变量里去。（这一步的目的是把bin目录的路径储存在Path中)</p>
<p><img src="https://i.loli.net/2021/07/23/7hX5ySGbRuroOPT.jpg" alt="wdad"></p>
<p><img src="https://i.loli.net/2021/07/23/S7vPB56arGyzcOg.jpg" alt="add"></p>
</li>
</ol>
<p><a href="https://dengxiayouhun.github.io/2021/09/07/%E5%A6%82%E4%BD%95%E8%A7%A3%E5%86%B3Win10%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F%E9%85%8D%E7%BD%AE%E6%97%B6Path%E5%8F%98%E9%87%8F%E5%8F%AA%E6%98%BE%E7%A4%BA%E4%B8%80%E8%A1%8C%E7%9A%84%E9%97%AE%E9%A2%98/"><strong>如何解决Win10环境变量Path只显示一行的问题</strong></a></p>
<h2 id="原理解释"><a href="#原理解释" class="headerlink" title="原理解释"></a>原理解释</h2><p><img src="https://i.loli.net/2021/07/23/Powb3SQFJZeGHh7.jpg" alt="result"></p>
<p>当我们在C盘执行javac时，cmd会把命令提交给Windows系统。Windows会在当前目录里寻找，而且还会在环境变量Path的路径里寻找，因此，当我们把bin目录的路径存放在Path变量里后，我们就可以在任何目录执行bin目录里的文件了。</p>
<p>*path环境变量：Windows系统执行命令时需要搜寻的路径。</p>
<h2 id="环境的临时配置"><a href="#环境的临时配置" class="headerlink" title="环境的临时配置"></a>环境的临时配置</h2><h3 id="为什么要临时配置环境？"><a href="#为什么要临时配置环境？" class="headerlink" title="为什么要临时配置环境？"></a>为什么要临时配置环境？</h3><p>通常来说我们一般都是用自己的设备进行程序开RR发。但有些时候我们也需要插上U盘，用别人的设备进行开发。这时候，我们就不能随便改变别人设备的参数了，所以只能进行临时配置，使我们不仅能够良好的的进行开发，而且不改变设备参数。</p>
<h3 id="如何进行临时配置"><a href="#如何进行临时配置" class="headerlink" title="如何进行临时配置?"></a>如何进行临时配置?</h3><ol>
<li><p>打开cmd，执行set命令，查看环境变量</p>
<p><img src="https://i.loli.net/2021/07/23/9HcPdFA6mX3KbvB.jpg" alt="set"></p>
</li>
<li><p>执行set path，查看path变量</p>
<p><img src="https://i.loli.net/2021/07/23/HKpoLlvBsXjuNV9.jpg" alt="set path"></p>
</li>
<li><p>执行set path=bin储存路径，修改path变量（使用时，直接执行这一步即可）</p>
<p><img src="https://i.loli.net/2021/07/23/BWhqfEFiwOS63NG.jpg" alt="path="></p>
</li>
<li><p>执行set path，查看path变量</p>
<p><img src="https://i.loli.net/2021/07/23/U4hAajTluOZWr3J.jpg" alt="set path"></p>
</li>
<li><p>执行javac,结果：可执行</p>
<p><img src="https://i.loli.net/2021/07/23/5IqzjKg2yJdV3oD.jpg" alt="javac"></p>
</li>
<li><p>关闭窗口，重新打开cmd，执行set path，查看path变量，path变量未被修改</p>
<p><img src="https://i.loli.net/2021/07/23/uAsftHQyRxqZFh2.jpg" alt="set path"></p>
</li>
</ol>
<h1 id="未完待续"><a href="#未完待续" class="headerlink" title="未完待续 . . ."></a>未完待续 . . .</h1>]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>学习笔记</tag>
      </tags>
  </entry>
  <entry>
    <title>java语言的特点</title>
    <url>/2021/07/20/Java%E8%AF%AD%E8%A8%80%E7%9A%84%E7%89%B9%E7%82%B9/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><blockquote>
<p>参考价值：没有错误、但不完善、仅供参考、等待重置（遥遥无期）</p>
</blockquote>
<hr>
<h2 id="跨平台性"><a href="#跨平台性" class="headerlink" title="跨平台性"></a>跨平台性</h2><h3 id="平台"><a href="#平台" class="headerlink" title="平台"></a>平台</h3><p>这里的平台是指计算机的系统平台，也就是Windows、Linux、Mac等。所有软件（可以看成代码集合体）都是基于平台运行的。</p>
<h3 id="什么叫做跨平台性？"><a href="#什么叫做跨平台性？" class="headerlink" title="什么叫做跨平台性？"></a>什么叫做跨平台性？</h3><p>软件是基于平台进行运行的，也就是说一个又C++编写的软件能够在Windows上运行，但如果换一个平台就不能运行了，所以说C++不具备跨平台性（相对来说是这样，在源码级别，C++还是跨平台的）。而一个用java’编写的软件能够在所有平台上运行，因此java具有跨平台性。</p>
<h3 id="为什么Java能够跨平台"><a href="#为什么Java能够跨平台" class="headerlink" title="为什么Java能够跨平台"></a>为什么Java能够跨平台</h3><p>实际上，Java应用程序并不是在新系统平台上运行的，它是由在Java虚拟机（JVM）上运行，然后发送指令给计算机进行操作的。因此，我们只需要在计算机上装一个JVM，就可以领java应用程序在计算机上运行。</p>
<p>ps：JVM是不能跨平台的</p>
<h2 id="图示"><a href="#图示" class="headerlink" title="图示"></a>图示</h2><p>Java应用程序的执行过程（从左往右）</p>
<p><img src="https://i.loli.net/2021/07/20/Lp43gtW526G9zEk.jpg" alt="Java应用程序"></p>
<p>C++应用程序的执行过程（从右往左）</p>
<p><img src="https://i.loli.net/2021/07/20/Frm6JiXpPf3VkZT.jpg" alt="C++应用程序的执行过程"></p>
<h2 id="未完待续"><a href="#未完待续" class="headerlink" title="未完待续 . . ."></a>未完待续 . . .</h2>]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>学习笔记</tag>
      </tags>
  </entry>
  <entry>
    <title>DOS命令行的简单操作</title>
    <url>/2021/07/19/DOS%E5%91%BD%E4%BB%A4%E8%A1%8C%E7%9A%84%E7%AE%80%E5%8D%95%E6%93%8D%E4%BD%9C/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><blockquote>
<p>参考价值：已完结，可作为教程学习</p>
</blockquote>
<hr>
<h2 id="Dos命令行的作用"><a href="#Dos命令行的作用" class="headerlink" title="Dos命令行的作用"></a>Dos命令行的作用</h2><p>通过在控制台输入特定指令使计算机完成一些操作，实现人机交互。</p>
<h2 id="打开控制台"><a href="#打开控制台" class="headerlink" title="打开控制台"></a>打开控制台</h2><p>开始+R打开快捷运行窗口，输入cmd打开控制台。</p>
<p><img src="https://i.loli.net/2021/07/19/UAZIDxrnsKVYtpw.jpg" alt="控制台"></p>
<h2 id="常见Dos命令行"><a href="#常见Dos命令行" class="headerlink" title="常见Dos命令行"></a>常见Dos命令行</h2><h4 id="打开当前目录"><a href="#打开当前目录" class="headerlink" title="打开当前目录"></a>打开当前目录</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//语法:</span></span><br><span class="line">dir</span><br><span class="line"><span class="comment">//作用：</span></span><br><span class="line">列出当前目录下的文件和和文件夹。</span><br></pre></td></tr></table></figure>

<p><img src="https://i.loli.net/2021/07/19/wJghOLvdmNyX18Q.jpg" alt="dir"></p>
<h4 id="创建新文件夹"><a href="#创建新文件夹" class="headerlink" title="创建新文件夹"></a>创建新文件夹</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//语法:</span></span><br><span class="line">md</span><br><span class="line"><span class="comment">//作用：</span></span><br><span class="line">在当前目录新建文件夹</span><br></pre></td></tr></table></figure>

<p><img src="https://i.loli.net/2021/07/19/aX73l9xEOyFQiSW.jpg" alt="md"></p>
<p><img src="https://i.loli.net/2021/07/19/DJYkxZCnpavQbrc.jpg" alt="md"></p>
<h4 id="删除文件"><a href="#删除文件" class="headerlink" title="删除文件"></a>删除文件</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//语法:</span></span><br><span class="line">rd</span><br><span class="line">del</span><br><span class="line"><span class="comment">//作用：</span></span><br><span class="line">删除当前目录下的空文件夹</span><br><span class="line">删除当前目录下的文件或者清空文件夹</span><br></pre></td></tr></table></figure>

<p><img src="https://i.loli.net/2021/07/19/XMp1HDtzyrGA5cE.jpg" alt="rd"></p>
<p><img src="https://i.loli.net/2021/07/19/FjOspAvorzPh3Lc.jpg" alt="del"></p>
<h4 id="进入文件夹"><a href="#进入文件夹" class="headerlink" title="进入文件夹"></a>进入文件夹</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//语法：</span></span><br><span class="line">cd</span><br><span class="line"><span class="comment">//作用：</span></span><br><span class="line">进入文件</span><br></pre></td></tr></table></figure>

<p><img src="https://i.loli.net/2021/07/19/iXraNLjwC4Rv2gq.jpg" alt="进入D盘"></p>
<p><img src="https://i.loli.net/2021/07/19/xoP2Yf71DcyIeGQ.jpg" alt="进入文件夹"></p>
<p><img src="https://i.loli.net/2021/07/19/x9CauovqGc23wF1.jpg" alt="cd \ "></p>
<p>)</p>
<h4 id="返回上一级目录"><a href="#返回上一级目录" class="headerlink" title="返回上一级目录"></a>返回上一级目录</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//语法：</span></span><br><span class="line">cd..</span><br><span class="line">cd\</span><br><span class="line"><span class="comment">//作用：</span></span><br><span class="line">返回上一级目录</span><br><span class="line">返回主根目录</span><br></pre></td></tr></table></figure>

<p><img src="https://i.loli.net/2021/07/19/isV14gIWtjDwKBq.jpg" alt="cd..."></p>
<p><img src="https://i.loli.net/2021/07/19/BitazJ3Yhf9MuS7.jpg" alt="cd \ "></p>
<h4 id="退出dos命令行控制台"><a href="#退出dos命令行控制台" class="headerlink" title="退出dos命令行控制台"></a>退出dos命令行控制台</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//语法</span></span><br><span class="line">exit</span><br><span class="line"><span class="comment">//作用：</span></span><br><span class="line">退出控制台</span><br></pre></td></tr></table></figure>

<p><img src="https://i.loli.net/2021/07/19/6bXLPRAMredIHQS.jpg" alt="exit"></p>
]]></content>
      <tags>
        <tag>DOS命令行</tag>
      </tags>
  </entry>
  <entry>
    <title>Java后端学习路线及规划</title>
    <url>/2021/07/17/Java%E5%90%8E%E7%AB%AF%E5%AD%A6%E4%B9%A0%E8%B7%AF%E7%BA%BF%E4%B8%8E%E8%A7%84%E5%88%92/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><blockquote>
<h2 id="观前提示"><a href="#观前提示" class="headerlink" title="观前提示"></a>观前提示</h2><p>建议心态乐观的小伙伴展开折叠的代码块观看呦~~</p>
<p>想看思维导图的可以直接拉到最后 (&gt;_&lt;) !</p>
<p><img src="https://i.loli.net/2021/07/18/Ipn9jcsRz63wLGE.png" alt="滑稽"></p>
<p>友情提示：右下角点击设置，可开启极简阅读模式 ！</p>
</blockquote>
<blockquote>
<p>参考价值：极高，可作为定制个人学习计划的参考资料。</p>
</blockquote>
<hr>
<h2 id="编程基础"><a href="#编程基础" class="headerlink" title="编程基础"></a>编程基础</h2><h3 id="Java语言"><a href="#Java语言" class="headerlink" title="Java语言"></a>Java语言</h3><ul>
<li><p>语言基础</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="number">1.</span> 基础语法</span><br><span class="line"><span class="number">2.</span> 面向对象</span><br><span class="line"><span class="number">3.</span> 接口</span><br><span class="line"><span class="number">4.</span> 容器</span><br><span class="line"><span class="number">5.</span> 异常</span><br><span class="line"><span class="number">6.</span> 泛式</span><br><span class="line"><span class="number">7.</span> 反射</span><br><span class="line"><span class="number">8.</span> 注解</span><br><span class="line"><span class="number">9.</span> I/O</span><br><span class="line"><span class="number">10.</span> ~~图形化（Spring）~~</span><br></pre></td></tr></table></figure></li>
<li><p>Java虚拟机</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="number">1.</span> 类加载机制</span><br><span class="line"><span class="number">2.</span> 字节码执行机制</span><br><span class="line"><span class="number">3.</span> JVM内存模型</span><br><span class="line"><span class="number">4.</span> GC垃圾回收</span><br><span class="line"><span class="number">5.</span> JVM性能监控与故障定位</span><br><span class="line"><span class="number">6.</span> JVM调优</span><br></pre></td></tr></table></figure></li>
<li><p>多线程/并发</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="number">1.</span> 并发编程基础</span><br><span class="line"><span class="number">2.</span> 线程池</span><br><span class="line"><span class="number">3.</span> 锁</span><br><span class="line"><span class="number">4.</span> 并发容器</span><br><span class="line"><span class="number">5.</span> 原子类</span><br><span class="line"><span class="number">6.</span> JUC并发工具类</span><br></pre></td></tr></table></figure></li>
</ul>
<h3 id="数据结构和算法"><a href="#数据结构和算法" class="headerlink" title="数据结构和算法"></a>数据结构和算法</h3><ul>
<li><p>数据结构</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="number">1.</span> 字符串</span><br><span class="line"><span class="number">2.</span> 数组</span><br><span class="line"><span class="number">3.</span> 链表</span><br><span class="line"><span class="number">4.</span> 堆、栈、队列</span><br><span class="line"><span class="number">5.</span> 二叉树</span><br><span class="line"><span class="number">6.</span> 哈希</span><br><span class="line"><span class="number">7.</span> 图</span><br></pre></td></tr></table></figure></li>
<li><p>算法</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="number">1.</span> 排序</span><br><span class="line"><span class="number">2.</span> 查找</span><br><span class="line"><span class="number">3.</span> 贪心</span><br><span class="line"><span class="number">4.</span> 分治</span><br><span class="line"><span class="number">5.</span> 动态规划</span><br><span class="line"><span class="number">6.</span> 回溯</span><br></pre></td></tr></table></figure></li>
</ul>
<h3 id="计算机网络"><a href="#计算机网络" class="headerlink" title="计算机网络"></a>计算机网络</h3><ul>
<li><p>ARP协议</p>
</li>
<li><p>IP协议、ICMP协议</p>
</li>
<li><p>TCP、UDP协议</p>
</li>
<li><p>DNS/HTTP/HTTPS协议</p>
</li>
<li><p>Session/Cookie</p>
</li>
<li><p>SQL/数据库</p>
</li>
<li><p>SQL语句的书写</p>
</li>
<li><p>SQL语句的优化</p>
</li>
<li><p>事务/隔离级别</p>
</li>
<li><p>索引</p>
</li>
<li><p>锁</p>
</li>
</ul>
<h3 id="操作系统"><a href="#操作系统" class="headerlink" title="操作系统"></a>操作系统</h3><ul>
<li><p>进程、线程</p>
</li>
<li><p>并发、锁</p>
</li>
<li><p>内存管理和调度</p>
</li>
<li><p>I/O原理</p>
</li>
</ul>
<h3 id="设计模式"><a href="#设计模式" class="headerlink" title="设计模式"></a>设计模式</h3><ul>
<li><p>单例</p>
</li>
<li><p>工厂</p>
</li>
<li><p>代理</p>
</li>
<li><p>策略</p>
</li>
<li><p>模板方法</p>
</li>
<li><p>观察者</p>
</li>
<li><p>适配器</p>
</li>
<li><p>责任链</p>
</li>
<li><p>建造者</p>
</li>
</ul>
<h2 id="开发工具"><a href="#开发工具" class="headerlink" title="开发工具"></a>开发工具</h2><h3 id="集成开发环境"><a href="#集成开发环境" class="headerlink" title="集成开发环境"></a>集成开发环境</h3><ul>
<li>Eclipse</li>
<li>IDEA</li>
<li>VSCode</li>
</ul>
<h3 id="Linux系统"><a href="#Linux系统" class="headerlink" title="Linux系统"></a>Linux系统</h3><ul>
<li>常用命令</li>
<li>Shell脚本</li>
</ul>
<h3 id="项目管理工具-构建工具"><a href="#项目管理工具-构建工具" class="headerlink" title="项目管理工具/构建工具"></a>项目管理工具/构建工具</h3><ul>
<li>Maven</li>
<li>Gradle</li>
</ul>
<h3 id="代码管理工具"><a href="#代码管理工具" class="headerlink" title="代码管理工具"></a>代码管理工具</h3><ul>
<li>SVN</li>
<li>Git</li>
</ul>
<h2 id="应用框架"><a href="#应用框架" class="headerlink" title="应用框架"></a>应用框架</h2><h3 id="后端"><a href="#后端" class="headerlink" title="后端"></a>后端</h3><ul>
<li><p>Spring家族框架</p>
<ol>
<li><p>Spring</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="number">1</span>、IOC</span><br><span class="line"><span class="number">2</span>、AOP</span><br></pre></td></tr></table></figure></li>
<li><p>SpringMVC</p>
</li>
<li><p>Spring Boot</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="number">1</span>、自动配置、开箱即用</span><br><span class="line"><span class="number">2</span>、整合Web</span><br><span class="line"><span class="number">3</span>、整合数据库（事务问题）</span><br><span class="line"><span class="number">4</span>、整合权限</span><br><span class="line">   <span class="number">1</span>、Shiro</span><br><span class="line">   <span class="number">2</span>、Spring Security</span><br><span class="line"><span class="number">5</span>、整合各种中间件</span><br><span class="line">   <span class="number">1</span>、Redis</span><br><span class="line">   <span class="number">2</span>、MQ</span><br><span class="line">   <span class="number">3</span>、RPC框架</span><br><span class="line">   <span class="number">4</span>、NIO框架</span><br></pre></td></tr></table></figure></li>
</ol>
</li>
<li><p>服务器软件</p>
<ol>
<li><p>Web服务器 —— Nginx</p>
</li>
<li><p>应用服务器</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="number">1</span>、Tomcat</span><br><span class="line"><span class="number">2</span>、Jetty</span><br><span class="line"><span class="number">3</span>、Undertow</span><br></pre></td></tr></table></figure></li>
</ol>
</li>
<li><p>中间件</p>
<ol>
<li><p>缓存</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Redis</span><br><span class="line">  1、5大基础数据类型</span><br><span class="line">  2、事务</span><br><span class="line">  3、管道</span><br><span class="line">  4、持久化</span><br><span class="line">  5、集群</span><br></pre></td></tr></table></figure></li>
<li><p>消息队列</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="number">1</span>、RocketMQ</span><br><span class="line"><span class="number">2</span>、RabbitMQ</span><br><span class="line"><span class="number">3</span>、Kafka</span><br></pre></td></tr></table></figure></li>
<li><p>RPC框架</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="number">1</span>、Dubbo</span><br><span class="line"><span class="number">2</span>、GRPC</span><br><span class="line"><span class="number">3</span>、Thrift</span><br><span class="line"><span class="number">4</span>、Spring Cloud</span><br><span class="line"><span class="number">5</span>、Netty</span><br></pre></td></tr></table></figure></li>
</ol>
</li>
<li><p>数据库框架</p>
<ol>
<li><p>GRM层框架</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="number">1</span>、MyBatis</span><br><span class="line"><span class="number">2</span>、Hibernate</span><br><span class="line"><span class="number">3</span>、JPA</span><br></pre></td></tr></table></figure></li>
<li><p>连接池</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="number">1</span>、Druid</span><br><span class="line"><span class="number">2</span>、HikariCP</span><br><span class="line"><span class="number">3</span>、C3P0</span><br></pre></td></tr></table></figure></li>
<li><p>分库分表</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="number">1</span>、MyCat</span><br><span class="line"><span class="number">2</span>、Sharding-JDBC</span><br><span class="line"><span class="number">3</span>、Sharding-Sphere</span><br></pre></td></tr></table></figure></li>
</ol>
</li>
<li><p>搜索引擎</p>
<ol>
<li>ElassticSearch</li>
<li>Soir</li>
</ol>
</li>
<li><p>分布式/微服务</p>
<ol>
<li><p>服务发现/注册</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="number">1</span>、Eureka</span><br><span class="line"><span class="number">2</span>、Consul</span><br><span class="line"><span class="number">3</span>、Zookeeper</span><br><span class="line"><span class="number">4</span>、Nacos</span><br></pre></td></tr></table></figure></li>
<li><p>网关</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="number">1</span>、Zuul</span><br><span class="line"><span class="number">2</span>、Gateway</span><br></pre></td></tr></table></figure></li>
<li><p>服务调用（负载均衡）</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="number">1</span>、Ribbon</span><br><span class="line"><span class="number">2</span>、Feign</span><br></pre></td></tr></table></figure></li>
<li><p>熔断/降级</p>
<ul>
<li>Hystrix</li>
</ul>
</li>
<li><p>配置中心</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="number">1</span>、Config</span><br><span class="line"><span class="number">2</span>、Apollo</span><br><span class="line"><span class="number">3</span>、Nacos</span><br></pre></td></tr></table></figure></li>
<li><p>认证和鉴权</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="number">1</span>、Spring Security</span><br><span class="line"><span class="number">2</span>、QAuth2</span><br><span class="line"><span class="number">3</span>、SSO单点登录</span><br></pre></td></tr></table></figure></li>
<li><p>分布式事务</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="number">1</span>、JTA接口——Atomikos组件</span><br><span class="line"><span class="number">2</span>、2PC、3PC</span><br><span class="line"><span class="number">3</span>、XA模式</span><br><span class="line"><span class="number">4</span>、TPC模式</span><br><span class="line">   <span class="number">1</span>、tcc-transaction</span><br><span class="line">   <span class="number">2</span>、ByteTCC</span><br><span class="line">   <span class="number">3</span>、EasyTransaction</span><br><span class="line">   <span class="number">4</span>、Seata</span><br><span class="line"><span class="number">5</span>、SAGA模式</span><br><span class="line">   <span class="number">1</span>、ServiceComb</span><br><span class="line">   <span class="number">2</span>、Seata</span><br><span class="line"><span class="number">6</span>、LCN模式——tx-lcn</span><br></pre></td></tr></table></figure></li>
<li><p>任务调度</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="number">1</span>、Quartz</span><br><span class="line"><span class="number">2</span>、Elastic-Job</span><br></pre></td></tr></table></figure></li>
<li><p>链路追踪和监控</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="number">1</span>、Zipkin</span><br><span class="line"><span class="number">2</span>、Sleuth</span><br><span class="line"><span class="number">3</span>、Skywalking</span><br></pre></td></tr></table></figure></li>
<li><p>日志分析与监控</p>
<ul>
<li><p>ELK</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="number">1</span>、ElasticSearch</span><br><span class="line"><span class="number">2</span>、Logstash</span><br><span class="line"><span class="number">3</span>、Kibana</span><br></pre></td></tr></table></figure></li>
</ul>
</li>
</ol>
</li>
<li><p>虚拟化/容器化</p>
<ol>
<li><p>容器技术</p>
<ul>
<li>Docker</li>
</ul>
</li>
<li><p>容器编排技术</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="number">1</span>、Kubernetes</span><br><span class="line"><span class="number">2</span>、Swarm</span><br></pre></td></tr></table></figure></li>
</ol>
</li>
</ul>
<h3 id="前端"><a href="#前端" class="headerlink" title="前端"></a>前端</h3><ul>
<li><p>基础套餐</p>
<ol>
<li><p>三大件</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="number">1</span>、HTML</span><br><span class="line"><span class="number">2</span>、JavaScript</span><br><span class="line"><span class="number">3</span>、CSS</span><br></pre></td></tr></table></figure></li>
<li><p>基础库</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="number">1</span>、jquery</span><br><span class="line"><span class="number">2</span>、Ajax</span><br></pre></td></tr></table></figure></li>
</ol>
</li>
<li><p>模板框架</p>
<ol>
<li>JSP/JSTL</li>
<li>Thymeleaf</li>
<li>FreeMarker</li>
</ol>
</li>
<li><p>组件化框架</p>
<ol>
<li>Node</li>
<li>VUE</li>
<li>React</li>
<li>Angular</li>
</ol>
</li>
</ul>
<h2 id="运维知识"><a href="#运维知识" class="headerlink" title="*运维知识"></a>*运维知识</h2><h3 id="Web服务器"><a href="#Web服务器" class="headerlink" title="Web服务器"></a>Web服务器</h3><ul>
<li>Nginx</li>
</ul>
<h3 id="应用服务器"><a href="#应用服务器" class="headerlink" title="应用服务器"></a>应用服务器</h3><ul>
<li>Tomcat</li>
<li>Jetty</li>
<li>Undertow</li>
</ul>
<h3 id="CDN加速"><a href="#CDN加速" class="headerlink" title="CDN加速"></a>CDN加速</h3><h3 id="持续集成-持续部署"><a href="#持续集成-持续部署" class="headerlink" title="持续集成/持续部署"></a>持续集成/持续部署</h3><ul>
<li>Jenkins</li>
</ul>
<h3 id="代码质量检查"><a href="#代码质量检查" class="headerlink" title="代码质量检查"></a>代码质量检查</h3><ul>
<li>sonar</li>
</ul>
<h3 id="日志收集和分析"><a href="#日志收集和分析" class="headerlink" title="日志收集和分析"></a>日志收集和分析</h3><ul>
<li>ELK</li>
</ul>
<h2 id="成神之路（在梦里）"><a href="#成神之路（在梦里）" class="headerlink" title="*成神之路（在梦里）"></a>*成神之路（在梦里）</h2><ul>
<li><p>徒手撕源码</p>
</li>
<li><p>光脚造轮子</p>
</li>
<li><p>闭着眼睛深度调优</p>
</li>
<li><p>吊打面试官</p>
</li>
</ul>
<hr>
<p><img src="https://i.loli.net/2021/07/18/Ipn9jcsRz63wLGE.png" alt="滑稽"></p>
<p>​             很恐怖！兄弟们，有没有还没有入门就已经入土的感觉呀！不过不用过分担心，这些很多东西都不是在大学就需要学完的。而且，并不是每一项都需要深入学习，有些只需要了解即可。当然，学的越多竞争力越大这是肯定的。</p>
<p><img src="https://i.loli.net/2021/07/18/x1cbzBjWm3CfvhQ.png" alt="吃瓜ing"></p>
<hr>
<h2 id="学习计划（已废弃）"><a href="#学习计划（已废弃）" class="headerlink" title="学习计划（已废弃）"></a>学习计划（已废弃）</h2><table>
<thead>
<tr>
<th>阶段</th>
<th>资料</th>
<th>目标</th>
</tr>
</thead>
<tbody><tr>
<td>第一阶段</td>
<td>Java SE教学视频（+一本教科书）</td>
<td>入门了解Java</td>
</tr>
<tr>
<td>第二阶段</td>
<td>《Java核心技术 卷Ⅰ 卷Ⅱ》（+《Java编程思想》）</td>
<td>深入理解Java</td>
</tr>
<tr>
<td>第三阶段</td>
<td>《Java并发编程实战》《Java网络编程》《深入理解Java虚拟机》</td>
<td>学习Java虚拟机（JVM）、并发编程、多线程编程、网络编程</td>
</tr>
<tr>
<td>第四阶段</td>
<td>《深入分析Java Web技术内幕》（+《TCP、IP详解 卷Ⅰ》）</td>
<td>进入Java Web、设计、架构方面</td>
</tr>
<tr>
<td>贯穿始终</td>
<td>《大话数据结构》（《算法》）、《计算机网络 自顶向下》《TCP、IP详解 卷Ⅰ》（二选一）、《鸟哥的Linux私房菜》</td>
<td>数据结构与算法、操作系统、计算机网络、计算机组成原理、编译原理</td>
</tr>
<tr>
<td>工具方面</td>
<td>《鸟哥的Linux私房菜》</td>
<td>Linux系统</td>
</tr>
<tr>
<td>应用框架</td>
<td>《Spring实战》《Spring Boot实战》《Spring MVC+MyBatis开发从入门到项目实战》《Spring技术内幕》（可以挑战一下自己，）</td>
<td>Spring家族</td>
</tr>
</tbody></table>
<h2 id="思维导图"><a href="#思维导图" class="headerlink" title="思维导图"></a>思维导图</h2><p><img src="https://i.loli.net/2021/07/19/q1QM5XCRLy2j8BE.jpg" alt="思维导图"></p>
<hr>
<p>大家要注意保护自己的头发呦~</p>
<p><img src="https://i.loli.net/2021/07/19/7Lx2PbNjnfDurVg.png" alt="休息"></p>
]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>规划</tag>
        <tag>java</tag>
      </tags>
  </entry>
  <entry>
    <title>Markdown语法简单教程</title>
    <url>/2021/07/16/Markdown%E8%AF%AD%E6%B3%95%E7%AE%80%E5%8D%95%E6%95%99%E7%A8%8B/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><blockquote>
<p>参考价值：无错误，可当作教程学习。</p>
</blockquote>
<hr>
<h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><p>markdown语言是一种轻量级的标记语言，主要通过一些简单的符号对文本进行处理，可以说是程序员写博客的首选语言。</p>
<h1 id="程序员为什么比较偏爱markdown-？"><a href="#程序员为什么比较偏爱markdown-？" class="headerlink" title="程序员为什么比较偏爱markdown ？"></a>程序员为什么比较偏爱markdown ？</h1><ul>
<li><p><strong>markdown比较符合程序员的平时习惯</strong></p>
<p>程序员平时做的最多的就是敲代码。而在敲代码的过程中，鼠标就成为了一个很“碍事”的东西。每一次使用鼠标都会不同程度上的打断程序员的思维，从而给编程带来麻烦。程序员的工作也不需要大量使用鼠标，久而久之，程序员对频繁使用鼠标就有了一定的抗拒。</p>
<p>markdown语言就是一个能够解放鼠标的语言。平时我们使用word编辑文档时，需要使用鼠标点击达到各种格式，比如：字体调节，列表，定标题等。对于平时不怎么喜欢使用鼠标的程序员来说，这是一种心灵上的折磨。因此，markdown因其可以通过各种符号进行文本处理的特性就成为了程序员的最佳选择。</p>
</li>
<li><p><strong>markdown语言格式统一，便于阅读</strong></p>
<p>在丰富度方面，word是碾压mark down的，基于word丰富的功能，总会很多人通过自己的脑洞用word搞出各种奇葩的文章风格。而markdown的各种处理都是固定的，因此用markdown写出来的文章风格几乎都一模一样。</p>
<p>格式简洁、单一看似是markdown的缺点，实际上却是markdown的真正魅力所在。如果100个人用word写文章，会有100种风格，而1000个人用markdown写文章也只有一种风格。一个人习惯了自己的风格，再去看别人的风格的文章就会形成阅读壁垒，从而降低阅读效率。而markdown就不存在这种问题，因为它只有一种风格，只要我们习惯了自己的风格，再去看其他程序员的技术博客就不会有阅读壁垒，因为大家都用markdown，大家的风格都是一样的。</p>
</li>
<li><p><strong>格式简约，更多的注意力都聚焦于文章内容</strong></p>
<p>程序员的博客大多是技术博客和知识分享博客，这些文章的价值主要聚焦于其内容，过于花里胡哨的格式反而会令文章价值大打折扣，而markdown走的就是极致简约路线，很符合技术博客的需求。</p>
</li>
<li><p><strong>稳定性强，可移植性强</strong></p>
<p>word最令人诟病的一点就是文章稳定性差，可移植性极差，往往一篇文章在自己电脑里排版的整整齐齐，换一台设备打开，排版就会被打乱，一般都需要转成PDF在别的设备上的开。</p>
<p>markdown就不存在这种问题，只要是支持markdown语言的，无论在哪里打开都不会乱。这也算是个相当省头发特性。</p>
</li>
</ul>
<blockquote>
<p>以上均为个人使用体验加上网上查询资料后的感受（也有一些个人臆想）</p>
</blockquote>
<h1 id="Markdown语法快速入门（typora）："><a href="#Markdown语法快速入门（typora）：" class="headerlink" title="Markdown语法快速入门（typora）："></a>Markdown语法快速入门（typora）：</h1><h2 id="代码块："><a href="#代码块：" class="headerlink" title="代码块："></a>代码块：</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//代码块语法：</span></span><br><span class="line">~~~语言名</span><br><span class="line">比如：~~~java</span><br><span class="line">     ~~~c++</span><br></pre></td></tr></table></figure>

<p><strong>Java代码块</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.yrp.po;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br></pre></td></tr></table></figure>

<p><strong>C++代码块</strong></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">cout&lt;&lt;<span class="string">&quot;C++代码块&quot;</span>;</span><br><span class="line">cout&lt;&lt;endl;</span><br></pre></td></tr></table></figure>

<h2 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//标题语法</span></span><br><span class="line"># 一级标题</span><br><span class="line">## 二级标题</span><br><span class="line">### 三级标题</span><br><span class="line">#### 四级标题    </span><br><span class="line">##### 五级标题    </span><br><span class="line">###### 六级标题   </span><br></pre></td></tr></table></figure>

<h1 id="一级标题"><a href="#一级标题" class="headerlink" title="一级标题"></a>一级标题</h1><h2 id="二级标题"><a href="#二级标题" class="headerlink" title="二级标题"></a>二级标题</h2><h3 id="三级标题"><a href="#三级标题" class="headerlink" title="三级标题"></a>三级标题</h3><h4 id="四级标题"><a href="#四级标题" class="headerlink" title="四级标题"></a>四级标题</h4><h5 id="五级标题"><a href="#五级标题" class="headerlink" title="五级标题"></a>五级标题</h5><h6 id="六级标题"><a href="#六级标题" class="headerlink" title="六级标题"></a>六级标题</h6><h2 id="字体"><a href="#字体" class="headerlink" title="字体"></a>字体</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 加粗</span></span><br><span class="line">**加粗**</span><br><span class="line"><span class="comment">//代码高亮显示</span></span><br><span class="line">    ==代码高亮显示==</span><br><span class="line"><span class="comment">//删除线</span></span><br><span class="line">    ~~删除线~~</span><br><span class="line"><span class="comment">//斜体</span></span><br><span class="line">    *斜体*</span><br></pre></td></tr></table></figure>

<p>// 加粗<br><strong>加粗</strong><br>//代码高亮显示<br>    ==代码高亮显示==<br>//删除线<br>    <del>删除线</del><br>//斜体<br>    <em>斜体</em></p>
<h2 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//引用语法：</span></span><br><span class="line">&gt;一级引用</span><br><span class="line">&gt;&gt;二级引用</span><br><span class="line">&gt;&gt;&gt;三级引用</span><br></pre></td></tr></table></figure>

<blockquote>
<p>一级引用</p>
<blockquote>
<p>二级引用</p>
</blockquote>
<blockquote>
<blockquote>
<p>三级引用</p>
</blockquote>
</blockquote>
</blockquote>
<h2 id="分割线"><a href="#分割线" class="headerlink" title="分割线"></a>分割线</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//分割线语法：</span></span><br><span class="line"><span class="comment">//全屏分割线：</span></span><br><span class="line">---</span><br><span class="line"><span class="comment">//分割线</span></span><br><span class="line">***</span><br></pre></td></tr></table></figure>

<p>//全屏分割线：</p>
<hr>
<p>//分割线</p>
<hr>
<h2 id="图片插入"><a href="#图片插入" class="headerlink" title="图片插入"></a>图片插入</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//在线图片/本地图片</span></span><br><span class="line">![甘雨](https:<span class="comment">//i.loli.net/2021/07/16/URVdtBlu7KyI3fW.jpg) </span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><img src="https://i.loli.net/2021/07/16/URVdtBlu7KyI3fW.jpg" alt="甘雨"></p>
<h2 id="超链接"><a href="#超链接" class="headerlink" title="超链接"></a>超链接</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//超链接语法</span></span><br><span class="line">[我的个人博客](https:<span class="comment">//dengxiayouhun.github.io/)</span></span><br></pre></td></tr></table></figure>

<p><a href="https://dengxiayouhun.github.io/">我的个人博客</a></p>
<h2 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//列表语法</span></span><br><span class="line"><span class="comment">//无序列表</span></span><br><span class="line">- 目录<span class="number">1</span></span><br><span class="line">- 目录<span class="number">2</span></span><br><span class="line">- 目录<span class="number">3</span></span><br><span class="line"><span class="comment">//有序列表</span></span><br><span class="line"> 数字. 名称</span><br><span class="line"> <span class="number">1.</span> 首页</span><br><span class="line"> <span class="number">2.</span> 标签</span><br><span class="line"> <span class="number">3.</span> 分类</span><br></pre></td></tr></table></figure>

<p>//无序列表</p>
<ul>
<li>目录1</li>
<li>目录2</li>
<li>目录3</li>
</ul>
<p>//有序列表</p>
<ol>
<li>首页</li>
<li>标签</li>
<li>分类</li>
</ol>
<h2 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//建议用快捷键：Ctrl+T</span></span><br><span class="line"><span class="comment">//表格语法</span></span><br><span class="line">|数据结构与算法| 计算机组成原理|计算机网络|</span><br><span class="line">|-|-|-|</span><br><span class="line">| 操作系统|编译原理|汇编语言| </span><br><span class="line">|Java SE|Java Web||</span><br></pre></td></tr></table></figure>



<table>
<thead>
<tr>
<th>数据结构与算法</th>
<th>计算机组成原理</th>
<th>计算机网络</th>
</tr>
</thead>
<tbody><tr>
<td>操作系统</td>
<td>编译原理</td>
<td>汇编语言</td>
</tr>
<tr>
<td>Java SE</td>
<td>Java Web</td>
<td></td>
</tr>
</tbody></table>
]]></content>
      <categories>
        <category>工具</category>
      </categories>
      <tags>
        <tag>markdown</tag>
      </tags>
  </entry>
  <entry>
    <title>客户信息管理系统</title>
    <url>/2021/10/26/%E5%AE%A2%E6%88%B7%E4%BF%A1%E6%81%AF%E7%AE%A1%E7%90%86/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><h2 id="技能点："><a href="#技能点：" class="headerlink" title="技能点："></a>技能点：</h2><ol>
<li>类结构的使用：属性、方法及构造器</li>
<li>对象的创建与使用</li>
<li>类的封装性</li>
<li>声明和使用数组</li>
<li>数组的插入、删除和替换</li>
<li>关键字的使用：this</li>
</ol>
<h2 id="需求说明："><a href="#需求说明：" class="headerlink" title="需求说明："></a>需求说明：</h2><p>该软件能够实现对客户对象的插入、修改和删除（用数组实现），并能够打印客户明细表。</p>
<ol>
<li><p>菜单：</p>
<p><img src="https://i.loli.net/2021/10/26/1ifULI2MCBmGDRp.jpg"></p>
</li>
<li><p>功能一：</p>
<p><img src="https://i.loli.net/2021/10/26/DterT6GQn4R9wdh.jpg"></p>
</li>
<li><p>功能二：</p>
<p><img src="https://i.loli.net/2021/10/26/P8csQbXJ6wIpvY3.jpg"></p>
</li>
<li><p>功能三：</p>
<p><img src="https://i.loli.net/2021/10/26/pZsHveRdDjUwcIt.jpg"></p>
</li>
<li><p>功能四：</p>
<p><img src="https://i.loli.net/2021/10/26/JvniLlfzFRqeUm4.jpg"></p>
</li>
</ol>
<h2 id="框架搭建："><a href="#框架搭建：" class="headerlink" title="框架搭建："></a>框架搭建：</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">菜单面板</span><br><span class="line">    循环&#123;</span><br><span class="line">    输出“\t\t......\n\t\t请选择（<span class="number">1</span>-<span class="number">5</span>）：”</span><br><span class="line">        选择：</span><br><span class="line">            功能<span class="number">1</span></span><br><span class="line">        	功能<span class="number">2</span></span><br><span class="line">        	功能<span class="number">3</span></span><br><span class="line">        	功能<span class="number">4</span></span><br><span class="line">        	功能<span class="number">5</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="代码实现："><a href="#代码实现：" class="headerlink" title="代码实现："></a>代码实现：</h2><ul>
<li><p><strong>Main类：</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> view_ui;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @项目名称：Customer_Information_management_System</span></span><br><span class="line"><span class="comment"> * @包名称：view_ui</span></span><br><span class="line"><span class="comment"> * @类名称：Main</span></span><br><span class="line"><span class="comment"> * @类描述：Main方法，搭建起主要框架</span></span><br><span class="line"><span class="comment"> * @创建人：青春玩命的年代</span></span><br><span class="line"><span class="comment"> * @创建时间：2021年10月26日</span></span><br><span class="line"><span class="comment"> * @版本：</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">import</span> model_bean.*;</span><br><span class="line"><span class="keyword">import</span> controller_service.*;</span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">		Scanner scan = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line"></span><br><span class="line">		SqList.InitList();</span><br><span class="line">		</span><br><span class="line">		<span class="keyword">boolean</span> flag = <span class="keyword">true</span>;</span><br><span class="line">		<span class="keyword">int</span> selection;</span><br><span class="line">		System.out.println(<span class="string">&quot;--------------客户信息管理软件--------------&quot;</span>);</span><br><span class="line">		System.out.println(<span class="string">&quot;&quot;</span>);</span><br><span class="line">		System.out.println(<span class="string">&quot;\t\t1 添 加 客 户&quot;</span>);</span><br><span class="line">		System.out.println(<span class="string">&quot;\t\t2 修 改 客 户&quot;</span>);</span><br><span class="line">		System.out.println(<span class="string">&quot;\t\t3 删 除 客 户&quot;</span>);</span><br><span class="line">		System.out.println(<span class="string">&quot;\t\t4 客 户 列 表&quot;</span>);</span><br><span class="line">		System.out.println(<span class="string">&quot;\t\t5 退           出&quot;</span>);</span><br><span class="line">		System.out.println(<span class="string">&quot;&quot;</span>);</span><br><span class="line">		<span class="keyword">while</span>(flag) &#123;</span><br><span class="line">			System.out.println(<span class="string">&quot;\t\t   ......&quot;</span>);</span><br><span class="line">			System.out.print(<span class="string">&quot;\t\t请选择(1-5):&quot;</span>);</span><br><span class="line">			<span class="comment">//获取用户选择</span></span><br><span class="line">			selection = scan.nextInt();</span><br><span class="line">			<span class="comment">//输入保护机制</span></span><br><span class="line">			selection = Utility.Protected(selection);</span><br><span class="line">			<span class="comment">//选择模块</span></span><br><span class="line">			<span class="keyword">switch</span>(selection) &#123;</span><br><span class="line">			<span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">				<span class="comment">//功能1</span></span><br><span class="line">				Utility.Insert();</span><br><span class="line">				<span class="keyword">break</span>;</span><br><span class="line">			<span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">				<span class="comment">//功能2</span></span><br><span class="line">				Utility.Change();</span><br><span class="line">				<span class="keyword">break</span>;</span><br><span class="line">			<span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">				<span class="comment">//功能3</span></span><br><span class="line">				Utility.Delet();</span><br><span class="line">				<span class="keyword">break</span>;</span><br><span class="line">			<span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">				<span class="comment">//功能4</span></span><br><span class="line">				Utility.Print();</span><br><span class="line">				<span class="keyword">break</span>;</span><br><span class="line">			<span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line">				<span class="comment">//功能5</span></span><br><span class="line">				Utility.Exite(flag);</span><br><span class="line">				<span class="keyword">break</span>;</span><br><span class="line">			&#125;</span><br><span class="line">			</span><br><span class="line">		&#125;</span><br><span class="line">		scan.close();</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></li>
<li><p><strong>Utility工具类：</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> controller_service;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @项目名称：Customer_Information_management_System</span></span><br><span class="line"><span class="comment"> * @包名称：controller_service</span></span><br><span class="line"><span class="comment"> * @类名称：Utility</span></span><br><span class="line"><span class="comment"> * @类描述：工具类，封装了一些Main方法中调用的方法</span></span><br><span class="line"><span class="comment"> * @创建人：青春玩命的年代</span></span><br><span class="line"><span class="comment"> * @创建时间：2021年10月26日</span></span><br><span class="line"><span class="comment"> * @版本：</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> model_bean.*;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Utility</span> </span>&#123;</span><br><span class="line">	<span class="keyword">static</span> Scanner scan = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">	<span class="comment">//声明常用变量</span></span><br><span class="line">	<span class="keyword">static</span> <span class="keyword">int</span> num, age;</span><br><span class="line">	<span class="keyword">static</span> String name, sex, tel, email;</span><br><span class="line">	</span><br><span class="line">	<span class="comment">//输入保护机制</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">Protected</span><span class="params">(<span class="keyword">int</span> selection)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">if</span>(selection &gt;= <span class="number">1</span> &amp;&amp; selection &lt;= <span class="number">5</span>) </span><br><span class="line">			<span class="keyword">return</span> selection;</span><br><span class="line">		<span class="keyword">else</span> &#123;</span><br><span class="line">			<span class="keyword">int</span> e = <span class="number">0</span>;</span><br><span class="line">			<span class="keyword">boolean</span> flag = <span class="keyword">true</span>;</span><br><span class="line">			<span class="keyword">while</span>(flag) &#123;</span><br><span class="line">				System.out.print(<span class="string">&quot;\t\t请重新选择：&quot;</span>);</span><br><span class="line">				e = scan.nextInt();</span><br><span class="line">				<span class="keyword">if</span>(e &gt;= <span class="number">1</span> &amp;&amp; e &lt;= <span class="number">5</span>) </span><br><span class="line">					flag = <span class="keyword">false</span>;</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">return</span> e;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">//添加客户</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Insert</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		System.out.println(<span class="string">&quot;------------------添加客户------------------&quot;</span>);</span><br><span class="line">		System.out.print(<span class="string">&quot;姓名：&quot;</span>);</span><br><span class="line">		name = scan.next();</span><br><span class="line">		System.out.print(<span class="string">&quot;性别：&quot;</span>);</span><br><span class="line">		sex = scan.next();</span><br><span class="line">		System.out.print(<span class="string">&quot;年龄：&quot;</span>);</span><br><span class="line">		age = scan.nextInt();</span><br><span class="line">		System.out.print(<span class="string">&quot;电话：&quot;</span>);</span><br><span class="line">		tel = scan.next();</span><br><span class="line">		System.out.print(<span class="string">&quot;邮箱：&quot;</span>);</span><br><span class="line">		email = scan.next();</span><br><span class="line">		SqList.Insert(name, sex, age, tel, email);</span><br><span class="line">		System.out.println(<span class="string">&quot;------------------添加完成------------------&quot;</span>);</span><br><span class="line">		</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">//修改客户</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Change</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		System.out.println(<span class="string">&quot;------------------修改客户------------------&quot;</span>);</span><br><span class="line">		System.out.print(<span class="string">&quot;请选择待修改客户的编号（-1退出）：&quot;</span>);</span><br><span class="line">		num = scan.nextInt();</span><br><span class="line">		<span class="keyword">if</span>(num == -<span class="number">1</span>) </span><br><span class="line">			<span class="keyword">return</span>;</span><br><span class="line">		System.out.print(<span class="string">&quot;姓名&quot;</span> + <span class="string">&quot;(&quot;</span> + SqList.getCustomers(num).getName() + <span class="string">&quot;):&quot;</span>);</span><br><span class="line">		name = scan.next();</span><br><span class="line">		System.out.print(<span class="string">&quot;性别&quot;</span> + <span class="string">&quot;(&quot;</span> + SqList.getCustomers(num).getSex() + <span class="string">&quot;):&quot;</span>);</span><br><span class="line">		sex = scan.next();</span><br><span class="line">		System.out.print(<span class="string">&quot;年龄&quot;</span> + <span class="string">&quot;(&quot;</span> + SqList.getCustomers(num).getAge() + <span class="string">&quot;):&quot;</span>);</span><br><span class="line">		age = scan.nextInt();</span><br><span class="line">		System.out.print(<span class="string">&quot;电话&quot;</span> + <span class="string">&quot;(&quot;</span> + SqList.getCustomers(num).getTel() + <span class="string">&quot;):&quot;</span>);</span><br><span class="line">		tel = scan.next();</span><br><span class="line">		System.out.print(<span class="string">&quot;邮箱&quot;</span> + <span class="string">&quot;(&quot;</span> + SqList.getCustomers(num).getEmail() + <span class="string">&quot;):&quot;</span>);	</span><br><span class="line">		email = scan.next();</span><br><span class="line">		SqList.Change(num, name, sex, age, tel, email);</span><br><span class="line">		System.out.println(<span class="string">&quot;------------------修改完成------------------&quot;</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">//删除客户</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Delet</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		System.out.println(<span class="string">&quot;------------------删除客户------------------&quot;</span>);</span><br><span class="line">		System.out.print(<span class="string">&quot;请选择待删除客户的编号（-1退出）：&quot;</span>);</span><br><span class="line">		num = scan.nextInt();</span><br><span class="line">		<span class="keyword">if</span>(num == -<span class="number">1</span>) </span><br><span class="line">			<span class="keyword">return</span>;</span><br><span class="line">		System.out.print(<span class="string">&quot;确认是否删除(Y/N):&quot;</span>);</span><br><span class="line">		String flag = scan.next();</span><br><span class="line">		<span class="keyword">if</span>(flag == <span class="string">&quot;Y&quot;</span>) &#123;</span><br><span class="line">			SqList.Delet(num);</span><br><span class="line">			System.out.println(<span class="string">&quot;------------------删除完成------------------&quot;</span>);</span><br><span class="line">		&#125;<span class="keyword">else</span></span><br><span class="line">			System.out.println(<span class="string">&quot;------------------删除中止------------------&quot;</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">//输出客户列表</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Print</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		System.out.println(<span class="string">&quot;------------------客户列表------------------&quot;</span>);</span><br><span class="line">		System.out.println(<span class="string">&quot;编号  姓名   性别  年龄  电话\t\t邮箱&quot;</span>);</span><br><span class="line">		SqList.Print();</span><br><span class="line">		System.out.println(<span class="string">&quot;------------------列表完成------------------&quot;</span>);</span><br><span class="line">	&#125;	</span><br><span class="line">	<span class="comment">//退出</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Exite</span><span class="params">(<span class="keyword">boolean</span> flag)</span> </span>&#123;</span><br><span class="line">		System.out.println(<span class="string">&quot;------------------退        出------------------&quot;</span>);</span><br><span class="line">		System.out.println(<span class="string">&quot;确认是否删除(Y/N):&quot;</span>);</span><br><span class="line">		String flags = scan.next();</span><br><span class="line">		<span class="keyword">if</span>(flags == <span class="string">&quot;Y&quot;</span>) &#123;</span><br><span class="line">			flag = <span class="keyword">false</span>;</span><br><span class="line">			System.out.println(<span class="string">&quot;------------------退出成功------------------&quot;</span>);</span><br><span class="line">		&#125;<span class="keyword">else</span></span><br><span class="line">			System.out.println(<span class="string">&quot;------------------退出中止------------------&quot;</span>);</span><br><span class="line">		System.out.println(<span class="string">&quot;------------------退出成功------------------&quot;</span>);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></li>
<li><p><strong>SqList类：</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> model_bean;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @项目名称：Customer_Information_management_System</span></span><br><span class="line"><span class="comment"> * @包名称：model_bean</span></span><br><span class="line"><span class="comment"> * @类名称：SqList</span></span><br><span class="line"><span class="comment"> * @类描述：线性表类，封装了线性表的属性和需要的基本方法</span></span><br><span class="line"><span class="comment"> * @创建人：青春玩命的年代</span></span><br><span class="line"><span class="comment"> * @创建时间：2021年10月28日</span></span><br><span class="line"><span class="comment"> * @版本：</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SqList</span> </span>&#123;</span><br><span class="line">	<span class="comment">//属性:</span></span><br><span class="line">	<span class="keyword">final</span> <span class="keyword">int</span> MAXSIZE = <span class="number">20</span>;</span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">static</span> Customer[] customer = <span class="keyword">new</span> Customer[<span class="number">20</span>];</span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">int</span> length = <span class="number">0</span>;</span><br><span class="line">	<span class="comment">//方法：</span></span><br><span class="line">	<span class="comment">//初始化线性表</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">InitList</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">20</span>; i ++) &#123;</span><br><span class="line">			customer[i] = <span class="keyword">new</span> Customer();</span><br><span class="line">		&#125;</span><br><span class="line">		length = <span class="number">0</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">//插入新的对象</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Insert</span><span class="params">(String name, String sex, <span class="keyword">int</span> age, String tel, String email)</span> </span>&#123;</span><br><span class="line">		customer[length].setName(name);</span><br><span class="line">		customer[length].setSex(sex);</span><br><span class="line">		customer[length].setAge(age);</span><br><span class="line">		customer[length].setTel(tel);</span><br><span class="line">		customer[length].setEmail(email);</span><br><span class="line">		length ++;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">//调用数组</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Customer <span class="title">getCustomers</span><span class="params">(<span class="keyword">int</span> num)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> customer[num];</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">//修改某个数组的数据</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Change</span><span class="params">(<span class="keyword">int</span> num, String name, String sex, <span class="keyword">int</span> age, String tel, String email)</span> </span>&#123;</span><br><span class="line">		num = num - <span class="number">1</span>; </span><br><span class="line">		customer[num].setName(name);</span><br><span class="line">		customer[num].setSex(sex);</span><br><span class="line">		customer[num].setAge(age);</span><br><span class="line">		customer[num].setTel(tel);</span><br><span class="line">		customer[num].setEmail(email);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">//删除某个元素</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Delet</span><span class="params">(<span class="keyword">int</span> num)</span> </span>&#123;</span><br><span class="line">		<span class="comment">//删除第i个元素，并将后面的元素前移</span></span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> k = num; k &lt; length; k++)</span><br><span class="line">	    &#123;</span><br><span class="line">	        customer[k-<span class="number">1</span>] = customer[k];</span><br><span class="line">	    &#125;</span><br><span class="line">		length ++;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">//输出线性表</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Print</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; length; i ++) &#123;</span><br><span class="line">			System.out.println((i + <span class="number">1</span>) + <span class="string">&quot;     &quot;</span> + customer[i].getName() + <span class="string">&quot;   &quot;</span> + customer[i].getSex() + <span class="string">&quot;  &quot;</span> + customer[i].getAge() + <span class="string">&quot;  &quot;</span> + customer[i].getTel() + <span class="string">&quot;\t&quot;</span> + customer[i].getEmail());</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></li>
<li><p><strong>Customer客户类 ：</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> model_bean;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @项目名称：Customer_Information_management_System</span></span><br><span class="line"><span class="comment"> * @包名称：model_bean</span></span><br><span class="line"><span class="comment"> * @类名称：Customer</span></span><br><span class="line"><span class="comment"> * @类描述：客户类，用来辅助构成线性表结构</span></span><br><span class="line"><span class="comment"> * @创建人：青春玩命的年代</span></span><br><span class="line"><span class="comment"> * @创建时间：2021年10月28日</span></span><br><span class="line"><span class="comment"> * @版本：</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Customer</span> </span>&#123;</span><br><span class="line">	<span class="comment">//属性：</span></span><br><span class="line">	<span class="keyword">private</span> String name, sex, tel, email;</span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">int</span> age;</span><br><span class="line">	<span class="comment">//构造器：</span></span><br><span class="line">	Customer()&#123;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="title">Customer</span><span class="params">(String name, String sex, <span class="keyword">int</span> age, String tel, String email)</span></span>&#123;</span><br><span class="line">		<span class="keyword">this</span>.name = name;</span><br><span class="line">		<span class="keyword">this</span>.sex = sex;</span><br><span class="line">		<span class="keyword">this</span>.age = age;</span><br><span class="line">		<span class="keyword">this</span>.tel = tel;</span><br><span class="line">		<span class="keyword">this</span>.email = email;		</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">//方法：</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="keyword">this</span>.name;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> String <span class="title">getSex</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="keyword">this</span>.sex;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> String <span class="title">getEmail</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="keyword">this</span>.email;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> String <span class="title">getTel</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="keyword">this</span>.tel;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getAge</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="keyword">this</span>.age;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">this</span>.name = name;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setSex</span><span class="params">(String sex)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">this</span>.sex = sex;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setEmail</span><span class="params">(String email)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">this</span>.email = email;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setTel</span><span class="params">(String tel)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">this</span>.tel = tel;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setAge</span><span class="params">(<span class="keyword">int</span> age)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">this</span>.age = age;</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></li>
</ul>
]]></content>
  </entry>
  <entry>
    <title>GUI页面设计练习题</title>
    <url>/2021/10/21/GUI%E9%A1%B5%E9%9D%A2%E8%AE%BE%E8%AE%A1%E7%BB%83%E4%B9%A0%E9%A2%98/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><h2 id="1-1"><a href="#1-1" class="headerlink" title="1.1"></a>1.1</h2><h3 id="任务要求"><a href="#任务要求" class="headerlink" title="任务要求:"></a>任务要求:</h3><p><img src="https://i.loli.net/2021/10/21/jJwClSuOtYmhs1L.png"></p>
<h3 id="代码实现："><a href="#代码实现：" class="headerlink" title="代码实现："></a>代码实现：</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> one_ten;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"><span class="keyword">import</span> javax.swing.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">GUI_1_1</span> </span>&#123;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">		<span class="comment">//创建一个窗口对象，并添加标题</span></span><br><span class="line">		JFrame frame = <span class="keyword">new</span> JFrame(<span class="string">&quot;changeBagColor&quot;</span>);</span><br><span class="line">		<span class="comment">//设置窗口的布局方式</span></span><br><span class="line">		frame.setLayout(<span class="keyword">new</span> FlowLayout(FlowLayout.LEFT));</span><br><span class="line">		<span class="comment">//设置初始位置和大小</span></span><br><span class="line">		frame.setBounds(<span class="number">100</span>, <span class="number">200</span>, <span class="number">300</span>, <span class="number">300</span>);</span><br><span class="line">		<span class="comment">//设置窗口是否可以伸缩</span></span><br><span class="line">		frame.setResizable(<span class="keyword">false</span>);</span><br><span class="line">		<span class="comment">//设置窗口是否显示</span></span><br><span class="line">		frame.setVisible(<span class="keyword">true</span>);</span><br><span class="line">		<span class="comment">//设置关闭方式</span></span><br><span class="line">		frame.setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);</span><br><span class="line">		</span><br><span class="line">		<span class="comment">//创建按钮对象</span></span><br><span class="line">		JButton button_green = <span class="keyword">new</span> JButton(<span class="string">&quot;green&quot;</span>);</span><br><span class="line">		JButton button_red = <span class="keyword">new</span> JButton(<span class="string">&quot;red&quot;</span>);</span><br><span class="line">		<span class="comment">//添加进窗口</span></span><br><span class="line">		frame.add(button_green);</span><br><span class="line">		frame.add(button_red);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<h3 id="运行检测："><a href="#运行检测：" class="headerlink" title="运行检测："></a>运行检测：</h3><p><img src="https://i.loli.net/2021/10/21/5YHT4fS8vbdsFeu.jpg"></p>
<h2 id="1-2"><a href="#1-2" class="headerlink" title="1.2"></a>1.2</h2><h3 id="任务要求-1"><a href="#任务要求-1" class="headerlink" title="任务要求:"></a>任务要求:</h3><p><img src="https://i.loli.net/2021/10/21/agWyUXZrwtj8FhV.png"></p>
<h3 id="代码实现：-1"><a href="#代码实现：-1" class="headerlink" title="代码实现："></a>代码实现：</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> one_ten;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"><span class="keyword">import</span> javax.swing.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">GUI_1_2</span> </span>&#123;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">		<span class="comment">//创建一个窗口对象，并添加标题</span></span><br><span class="line">		JFrame frame = <span class="keyword">new</span> JFrame(<span class="string">&quot;changeBagColor&quot;</span>);</span><br><span class="line">		<span class="comment">//设置窗口的布局方式</span></span><br><span class="line">		frame.setLayout(<span class="keyword">null</span>);</span><br><span class="line">		<span class="comment">//设置初始位置和大小</span></span><br><span class="line">		frame.setBounds(<span class="number">100</span>, <span class="number">200</span>, <span class="number">300</span>, <span class="number">300</span>);</span><br><span class="line">		<span class="comment">//设置窗口是否可以伸缩</span></span><br><span class="line">		frame.setResizable(<span class="keyword">false</span>);</span><br><span class="line">		<span class="comment">//设置窗口是否显示</span></span><br><span class="line">		frame.setVisible(<span class="keyword">true</span>);</span><br><span class="line">		<span class="comment">//设置关闭方式</span></span><br><span class="line">		frame.setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);</span><br><span class="line">		</span><br><span class="line">		<span class="comment">//创建面板对象</span></span><br><span class="line">		JPanel panel1 = <span class="keyword">new</span> JPanel(<span class="keyword">new</span> FlowLayout(FlowLayout.LEFT));</span><br><span class="line">		JPanel panel2 = <span class="keyword">new</span> JPanel(<span class="keyword">new</span> FlowLayout(FlowLayout.CENTER));</span><br><span class="line">		<span class="comment">//设置面板位置和大小</span></span><br><span class="line">		panel1.setBounds(<span class="number">0</span>, <span class="number">0</span>, <span class="number">300</span>, <span class="number">40</span>);</span><br><span class="line">		panel2.setBounds(<span class="number">0</span>, <span class="number">40</span>, <span class="number">180</span>, <span class="number">100</span>);</span><br><span class="line">		<span class="comment">//将面板插入窗口</span></span><br><span class="line">		frame.add(panel1);</span><br><span class="line">		frame.add(panel2);</span><br><span class="line">		</span><br><span class="line">		<span class="comment">//创建按钮对象</span></span><br><span class="line">		JButton button1 = <span class="keyword">new</span> JButton(<span class="string">&quot;按钮1&quot;</span>);</span><br><span class="line">		JButton button2 = <span class="keyword">new</span> JButton(<span class="string">&quot; 按钮2 &quot;</span>);</span><br><span class="line">		<span class="comment">//添加进窗口</span></span><br><span class="line">		panel1.add(button1);</span><br><span class="line">		panel2.add(button2);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h3 id="运行检测：-1"><a href="#运行检测：-1" class="headerlink" title="运行检测："></a>运行检测：</h3><p><img src="https://i.loli.net/2021/10/21/PGq59JkHlwtre8m.jpg"></p>
<h2 id="1-3"><a href="#1-3" class="headerlink" title="1.3"></a>1.3</h2><h3 id="任务要求-2"><a href="#任务要求-2" class="headerlink" title="任务要求:"></a>任务要求:</h3><p><img src="https://i.loli.net/2021/10/21/tzN9Vw86JhX4Glb.png"></p>
<h3 id="代码实现：-2"><a href="#代码实现：-2" class="headerlink" title="代码实现："></a>代码实现：</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> one_ten;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.*;</span><br><span class="line"><span class="keyword">import</span> javax.swing.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">GUI_1_3</span> </span>&#123;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">		<span class="comment">//创建一个窗口对象，并添加标题</span></span><br><span class="line">		JFrame frame = <span class="keyword">new</span> JFrame(<span class="string">&quot;changeBagColor&quot;</span>);</span><br><span class="line">		<span class="comment">//设置窗口的布局方式</span></span><br><span class="line">		frame.setLayout(<span class="keyword">new</span> FlowLayout(FlowLayout.LEFT));</span><br><span class="line">		<span class="comment">//设置初始位置和大小</span></span><br><span class="line">		frame.setBounds(<span class="number">100</span>, <span class="number">200</span>, <span class="number">160</span>, <span class="number">150</span>);</span><br><span class="line">		<span class="comment">//设置窗口是否可以伸缩</span></span><br><span class="line">		frame.setResizable(<span class="keyword">false</span>);</span><br><span class="line">		<span class="comment">//设置窗口是否显示</span></span><br><span class="line">		frame.setVisible(<span class="keyword">true</span>);</span><br><span class="line">		<span class="comment">//设置关闭方式</span></span><br><span class="line">		frame.setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);</span><br><span class="line">		</span><br><span class="line">		<span class="comment">//创建按钮对象</span></span><br><span class="line">		JButton button_green = <span class="keyword">new</span> JButton(<span class="string">&quot;Green&quot;</span>);</span><br><span class="line">		JButton button_red = <span class="keyword">new</span> JButton(<span class="string">&quot;Red&quot;</span>);</span><br><span class="line">		<span class="comment">//添加进窗口</span></span><br><span class="line">		frame.add(button_green);</span><br><span class="line">		frame.add(button_red);</span><br><span class="line">		</span><br><span class="line">		button_green.addMouseListener(<span class="keyword">new</span> MouseAdapter() &#123;</span><br><span class="line">			<span class="meta">@Override</span></span><br><span class="line">			<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">mouseEntered</span><span class="params">(MouseEvent e)</span> </span>&#123;</span><br><span class="line">				frame.setBackground(Color.GREEN);</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;);</span><br><span class="line"> </span><br><span class="line">		button_green.addMouseListener(<span class="keyword">new</span> MouseAdapter() &#123;</span><br><span class="line">			<span class="meta">@Override</span></span><br><span class="line">			<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">mouseExited</span><span class="params">(MouseEvent e)</span> </span>&#123;</span><br><span class="line">				frame.setBackground(Color.WHITE);</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>其实是个半成品，知识储备不足，写不出来</p>
<h3 id="运行检测：-2"><a href="#运行检测：-2" class="headerlink" title="运行检测："></a>运行检测：</h3><p><img src="https://i.loli.net/2021/10/21/ezPxRQtkGSAXou3.jpg"></p>
<h2 id="1-4"><a href="#1-4" class="headerlink" title="1.4"></a>1.4</h2><h3 id="任务要求-3"><a href="#任务要求-3" class="headerlink" title="任务要求:"></a>任务要求:</h3><p><img src="https://i.loli.net/2021/10/21/bGyEVdzk2Q8NWIB.png"></p>
<h3 id="代码实现：-3"><a href="#代码实现：-3" class="headerlink" title="代码实现："></a>代码实现：</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> one_ten;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.swing.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">GUI_1_4</span> </span>&#123;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">		<span class="comment">//创建一个窗口对象，并添加标题</span></span><br><span class="line">		JFrame frame = <span class="keyword">new</span> JFrame();</span><br><span class="line">		<span class="comment">//设置窗口的布局方式</span></span><br><span class="line">	    frame.setLayout(<span class="keyword">new</span> FlowLayout(FlowLayout.CENTER));</span><br><span class="line">		<span class="comment">//设置初始位置和大小</span></span><br><span class="line">		frame.setBounds(<span class="number">100</span>, <span class="number">200</span>, <span class="number">260</span>, <span class="number">75</span>);</span><br><span class="line">		<span class="comment">//设置窗口是否可以伸缩</span></span><br><span class="line">		frame.setResizable(<span class="keyword">false</span>);</span><br><span class="line">		<span class="comment">//设置窗口是否显示</span></span><br><span class="line">		frame.setVisible(<span class="keyword">true</span>);</span><br><span class="line">		<span class="comment">//设置关闭方式</span></span><br><span class="line">		frame.setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);</span><br><span class="line">		</span><br><span class="line">		</span><br><span class="line">		<span class="comment">//创建标签</span></span><br><span class="line">		JLabel label = <span class="keyword">new</span> JLabel(<span class="string">&quot;+&quot;</span>);</span><br><span class="line">		<span class="comment">//创建文本</span></span><br><span class="line">		JTextField text1 = <span class="keyword">new</span> JTextField(<span class="number">5</span>);</span><br><span class="line">		JTextField text2 = <span class="keyword">new</span> JTextField(<span class="number">5</span>);</span><br><span class="line">		JTextField text3 = <span class="keyword">new</span> JTextField(<span class="number">5</span>);</span><br><span class="line">		<span class="comment">//创建按钮</span></span><br><span class="line">		JButton button = <span class="keyword">new</span> JButton(<span class="string">&quot;=&quot;</span>);</span><br><span class="line">		<span class="comment">//插入窗口</span></span><br><span class="line">		frame.add(text1);</span><br><span class="line">		frame.add(label);</span><br><span class="line">		frame.add(text2);</span><br><span class="line">		frame.add(button);</span><br><span class="line">		frame.add(text3);</span><br><span class="line">		</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<h3 id="运行检测：-3"><a href="#运行检测：-3" class="headerlink" title="运行检测："></a>运行检测：</h3><p><img src="https://i.loli.net/2021/10/21/TpikVzRdw4KmQeU.jpg"></p>
<h2 id="1-5"><a href="#1-5" class="headerlink" title="1.5"></a>1.5</h2><h3 id="任务要求-4"><a href="#任务要求-4" class="headerlink" title="任务要求:"></a>任务要求:</h3><p><img src="https://i.loli.net/2021/10/21/bGoPKVD7WBmneMC.png"></p>
<h3 id="代码实现：-4"><a href="#代码实现：-4" class="headerlink" title="代码实现："></a>代码实现：</h3><p>知识储备不足，写不出来</p>
<h3 id="运行检测：-4"><a href="#运行检测：-4" class="headerlink" title="运行检测："></a>运行检测：</h3><p><img src=""></p>
<h2 id="1-6"><a href="#1-6" class="headerlink" title="1.6"></a>1.6</h2><h3 id="任务要求-5"><a href="#任务要求-5" class="headerlink" title="任务要求:"></a>任务要求:</h3><p><img src="https://i.loli.net/2021/10/21/irf9woxKSRWbc3E.png"></p>
<h3 id="代码实现：-5"><a href="#代码实现：-5" class="headerlink" title="代码实现："></a>代码实现：</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> one_ten;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.swing.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">GUI_1_6</span> </span>&#123;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">		<span class="comment">//创建一个窗口对象，并添加标题</span></span><br><span class="line">		JFrame frame = <span class="keyword">new</span> JFrame();</span><br><span class="line">		<span class="comment">//设置窗口的布局方式</span></span><br><span class="line">		frame.setLayout(<span class="keyword">null</span>);</span><br><span class="line">		<span class="comment">//设置初始位置和大小</span></span><br><span class="line">		frame.setBounds(<span class="number">100</span>, <span class="number">200</span>, <span class="number">320</span>, <span class="number">240</span>);</span><br><span class="line">		<span class="comment">//设置窗口是否可以伸缩</span></span><br><span class="line">		frame.setResizable(<span class="keyword">false</span>);</span><br><span class="line">		<span class="comment">//设置窗口是否显示</span></span><br><span class="line">		frame.setVisible(<span class="keyword">true</span>);</span><br><span class="line">		<span class="comment">//设置关闭方式</span></span><br><span class="line">		frame.setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);</span><br><span class="line">			</span><br><span class="line">		<span class="comment">//创建面板对象</span></span><br><span class="line">		JPanel panel1 = <span class="keyword">new</span> JPanel(<span class="keyword">new</span> FlowLayout(FlowLayout.CENTER));</span><br><span class="line">		JPanel panel2 = <span class="keyword">new</span> JPanel(<span class="keyword">new</span> FlowLayout(FlowLayout.CENTER));</span><br><span class="line">		JPanel panel3 = <span class="keyword">new</span> JPanel(<span class="keyword">new</span> FlowLayout(FlowLayout.CENTER));</span><br><span class="line">		JPanel panel4 = <span class="keyword">new</span> JPanel(<span class="keyword">new</span> FlowLayout(FlowLayout.CENTER));</span><br><span class="line">		<span class="comment">//设置各面板的位置</span></span><br><span class="line">		panel1.setBounds(<span class="number">0</span>, <span class="number">0</span>, <span class="number">150</span>, <span class="number">100</span>);</span><br><span class="line">		panel2.setBounds(<span class="number">150</span>, <span class="number">0</span>, <span class="number">150</span>, <span class="number">100</span>);</span><br><span class="line">		panel3.setBounds(<span class="number">0</span>, <span class="number">100</span>, <span class="number">150</span>, <span class="number">100</span>);</span><br><span class="line">		panel4.setBounds(<span class="number">150</span>, <span class="number">100</span>, <span class="number">150</span>, <span class="number">100</span>);</span><br><span class="line">		<span class="comment">//将面板插入窗口</span></span><br><span class="line">		frame.add(panel1);</span><br><span class="line">		frame.add(panel2);</span><br><span class="line">		frame.add(panel3);</span><br><span class="line">		frame.add(panel4);</span><br><span class="line">		<span class="comment">//创建按钮对象</span></span><br><span class="line">		JButton button1 = <span class="keyword">new</span> JButton(<span class="string">&quot;1&quot;</span>);</span><br><span class="line">		JButton button2 = <span class="keyword">new</span> JButton(<span class="string">&quot;2&quot;</span>);</span><br><span class="line">		JButton button3 = <span class="keyword">new</span> JButton(<span class="string">&quot;3&quot;</span>);</span><br><span class="line">		JButton button4 = <span class="keyword">new</span> JButton(<span class="string">&quot;1&quot;</span>);</span><br><span class="line">		JButton button5 = <span class="keyword">new</span> JButton(<span class="string">&quot;2&quot;</span>);</span><br><span class="line">		JButton button6 = <span class="keyword">new</span> JButton(<span class="string">&quot;1&quot;</span>);</span><br><span class="line">		JButton button7 = <span class="keyword">new</span> JButton(<span class="string">&quot;2&quot;</span>);</span><br><span class="line">		JButton button8 = <span class="keyword">new</span> JButton(<span class="string">&quot;1&quot;</span>);</span><br><span class="line">		JButton button9 = <span class="keyword">new</span> JButton(<span class="string">&quot;2&quot;</span>);</span><br><span class="line">		<span class="comment">//设置按钮的大小</span></span><br><span class="line">		button1.setPreferredSize(<span class="keyword">new</span> Dimension(<span class="number">40</span>,<span class="number">90</span>));</span><br><span class="line">		button2.setPreferredSize(<span class="keyword">new</span> Dimension(<span class="number">40</span>,<span class="number">90</span>));</span><br><span class="line">		button3.setPreferredSize(<span class="keyword">new</span> Dimension(<span class="number">40</span>,<span class="number">90</span>));</span><br><span class="line">		button4.setPreferredSize(<span class="keyword">new</span> Dimension(<span class="number">65</span>,<span class="number">90</span>));</span><br><span class="line">		button5.setPreferredSize(<span class="keyword">new</span> Dimension(<span class="number">65</span>,<span class="number">90</span>));</span><br><span class="line">		button6.setPreferredSize(<span class="keyword">new</span> Dimension(<span class="number">65</span>,<span class="number">90</span>));</span><br><span class="line">		button7.setPreferredSize(<span class="keyword">new</span> Dimension(<span class="number">65</span>,<span class="number">90</span>));</span><br><span class="line">		button8.setPreferredSize(<span class="keyword">new</span> Dimension(<span class="number">140</span>,<span class="number">45</span>));</span><br><span class="line">		button9.setPreferredSize(<span class="keyword">new</span> Dimension(<span class="number">140</span>,<span class="number">45</span>));</span><br><span class="line">		</span><br><span class="line">		<span class="comment">//将组件插入窗口</span></span><br><span class="line">		panel1.add(button1);</span><br><span class="line">		panel1.add(button2);</span><br><span class="line">		panel1.add(button3);</span><br><span class="line">		panel2.add(button4);</span><br><span class="line">		panel2.add(button5);</span><br><span class="line">		panel3.add(button6);</span><br><span class="line">		panel3.add(button7);</span><br><span class="line">		panel4.add(button8);</span><br><span class="line">		panel4.add(button9);</span><br><span class="line">		</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h3 id="运行检测：-5"><a href="#运行检测：-5" class="headerlink" title="运行检测："></a>运行检测：</h3><p><img src="https://i.loli.net/2021/10/21/ZW9ymNESbiHX8Mk.jpg"></p>
<h2 id="2-1"><a href="#2-1" class="headerlink" title="2.1"></a>2.1</h2><h3 id="任务要求-6"><a href="#任务要求-6" class="headerlink" title="任务要求:"></a>任务要求:</h3><p><img src="https://i.loli.net/2021/10/21/eDASX2uq1F9WJjm.png"></p>
<h3 id="代码实现：-6"><a href="#代码实现：-6" class="headerlink" title="代码实现："></a>代码实现：</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> one_ten;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.swing.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">GUI_2_1</span> </span>&#123;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">		<span class="comment">//创建一个窗口对象，并添加标题</span></span><br><span class="line">		JFrame frame = <span class="keyword">new</span> JFrame(<span class="string">&quot;登录窗口&quot;</span>);</span><br><span class="line">		<span class="comment">//设置窗口的布局方式</span></span><br><span class="line">	    frame.setLayout(<span class="keyword">null</span>);</span><br><span class="line">		<span class="comment">//设置初始位置和大小</span></span><br><span class="line">		frame.setBounds(<span class="number">100</span>, <span class="number">200</span>, <span class="number">300</span>, <span class="number">175</span>);</span><br><span class="line">		<span class="comment">//设置窗口是否可以伸缩</span></span><br><span class="line">		frame.setResizable(<span class="keyword">false</span>);</span><br><span class="line">		<span class="comment">//设置窗口是否显示</span></span><br><span class="line">		frame.setVisible(<span class="keyword">true</span>);</span><br><span class="line">		<span class="comment">//设置关闭方式</span></span><br><span class="line">		frame.setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);</span><br><span class="line">		</span><br><span class="line">		<span class="comment">//创建面板</span></span><br><span class="line">		JPanel panel1 = <span class="keyword">new</span> JPanel(<span class="keyword">new</span> FlowLayout(FlowLayout.CENTER));</span><br><span class="line">		JPanel panel2 = <span class="keyword">new</span> JPanel(<span class="keyword">new</span> FlowLayout(FlowLayout.CENTER));</span><br><span class="line">		<span class="comment">//设置面板位置</span></span><br><span class="line">		panel1.setBounds(<span class="number">25</span>, <span class="number">0</span>, <span class="number">250</span>, <span class="number">75</span>);</span><br><span class="line">		panel2.setBounds(<span class="number">0</span>, <span class="number">75</span>, <span class="number">300</span>, <span class="number">50</span>);</span><br><span class="line">		<span class="comment">//插入窗口</span></span><br><span class="line">		frame.add(panel1);</span><br><span class="line">		frame.add(panel2);</span><br><span class="line">		</span><br><span class="line">		<span class="comment">//创建标签</span></span><br><span class="line">		JLabel label1 = <span class="keyword">new</span> JLabel(<span class="string">&quot;用户名：&quot;</span>);</span><br><span class="line">		JLabel label2 = <span class="keyword">new</span> JLabel(<span class="string">&quot;密    码：&quot;</span>);</span><br><span class="line">		<span class="comment">//创建文本</span></span><br><span class="line">		JTextField text1 = <span class="keyword">new</span> JTextField(<span class="number">15</span>);</span><br><span class="line">		JTextField text2 = <span class="keyword">new</span> JTextField(<span class="number">15</span>);</span><br><span class="line">		<span class="comment">//创建按钮</span></span><br><span class="line">		JButton button1 = <span class="keyword">new</span> JButton(<span class="string">&quot;登录&quot;</span>);</span><br><span class="line">		JButton button2 = <span class="keyword">new</span> JButton(<span class="string">&quot;重置&quot;</span>);</span><br><span class="line">		<span class="comment">//组件插入面板</span></span><br><span class="line">		panel1.add(label1);</span><br><span class="line">		panel1.add(text1);</span><br><span class="line">		panel1.add(label2);</span><br><span class="line">		panel1.add(text2);</span><br><span class="line">		panel2.add(button1);</span><br><span class="line">		panel2.add(button2);</span><br><span class="line">		</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h3 id="运行检测：-6"><a href="#运行检测：-6" class="headerlink" title="运行检测："></a>运行检测：</h3><p><img src="https://i.loli.net/2021/10/21/wayxO3NRE6h75PZ.jpg"></p>
<h2 id="2-2"><a href="#2-2" class="headerlink" title="2.2"></a>2.2</h2><h3 id="任务要求-7"><a href="#任务要求-7" class="headerlink" title="任务要求:"></a>任务要求:</h3><p><img src="https://i.loli.net/2021/10/21/ac8IGdie5DLCHNW.png"></p>
<h3 id="代码实现：-7"><a href="#代码实现：-7" class="headerlink" title="代码实现："></a>代码实现：</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> one_ten;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.swing.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">GUI_2_2</span> </span>&#123;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">		<span class="comment">//创建一个窗口对象，并添加标题</span></span><br><span class="line">		JFrame frame = <span class="keyword">new</span> JFrame(<span class="string">&quot;登录窗口&quot;</span>);</span><br><span class="line">		<span class="comment">//设置窗口的布局方式</span></span><br><span class="line">	    frame.setLayout(<span class="keyword">null</span>);</span><br><span class="line">		<span class="comment">//设置初始位置和大小</span></span><br><span class="line">		frame.setBounds(<span class="number">100</span>, <span class="number">200</span>, <span class="number">300</span>, <span class="number">175</span>);</span><br><span class="line">		<span class="comment">//设置窗口是否可以伸缩</span></span><br><span class="line">		frame.setResizable(<span class="keyword">false</span>);</span><br><span class="line">		<span class="comment">//设置窗口是否显示</span></span><br><span class="line">		frame.setVisible(<span class="keyword">true</span>);</span><br><span class="line">		<span class="comment">//设置关闭方式</span></span><br><span class="line">		frame.setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);</span><br><span class="line">		</span><br><span class="line">		<span class="comment">//创建面板</span></span><br><span class="line">		JPanel panel1 = <span class="keyword">new</span> JPanel(<span class="keyword">new</span> FlowLayout(FlowLayout.CENTER));</span><br><span class="line">		JPanel panel2 = <span class="keyword">new</span> JPanel(<span class="keyword">new</span> FlowLayout(FlowLayout.CENTER));</span><br><span class="line">		<span class="comment">//设置面板位置</span></span><br><span class="line">		panel1.setBounds(<span class="number">25</span>, <span class="number">0</span>, <span class="number">250</span>, <span class="number">75</span>);</span><br><span class="line">		panel2.setBounds(<span class="number">0</span>, <span class="number">75</span>, <span class="number">300</span>, <span class="number">50</span>);</span><br><span class="line">		<span class="comment">//插入窗口</span></span><br><span class="line">		frame.add(panel1);</span><br><span class="line">		frame.add(panel2);</span><br><span class="line">		</span><br><span class="line">		<span class="comment">//创建标签</span></span><br><span class="line">		JLabel label1 = <span class="keyword">new</span> JLabel(<span class="string">&quot;用户名：&quot;</span>);</span><br><span class="line">		JLabel label2 = <span class="keyword">new</span> JLabel(<span class="string">&quot;密    码：&quot;</span>);</span><br><span class="line">		<span class="comment">//创建文本</span></span><br><span class="line">		JTextField text1 = <span class="keyword">new</span> JTextField(<span class="number">15</span>);</span><br><span class="line">		JTextField text2 = <span class="keyword">new</span> JTextField(<span class="number">15</span>);</span><br><span class="line">		<span class="comment">//创建按钮</span></span><br><span class="line">		JButton button1 = <span class="keyword">new</span> JButton(<span class="string">&quot;确定&quot;</span>);</span><br><span class="line">		JButton button2 = <span class="keyword">new</span> JButton(<span class="string">&quot;取消&quot;</span>);</span><br><span class="line">		<span class="comment">//组件插入面板</span></span><br><span class="line">		panel1.add(label1);</span><br><span class="line">		panel1.add(text1);</span><br><span class="line">		panel1.add(label2);</span><br><span class="line">		panel1.add(text2);</span><br><span class="line">		panel2.add(button1);</span><br><span class="line">		panel2.add(button2);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<h3 id="运行检测：-7"><a href="#运行检测：-7" class="headerlink" title="运行检测："></a>运行检测：</h3><p><img src="https://i.loli.net/2021/10/21/QwuxJka6SZ1X2dG.jpg"></p>
<h2 id="3"><a href="#3" class="headerlink" title="3"></a>3</h2><h3 id="任务要求-8"><a href="#任务要求-8" class="headerlink" title="任务要求:"></a>任务要求:</h3><p><img src="https://i.loli.net/2021/10/21/khNyQHSwJKsFIoB.png"></p>
<h3 id="代码实现：-8"><a href="#代码实现：-8" class="headerlink" title="代码实现："></a>代码实现：</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> one_ten;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.swing.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">GUI_3</span> </span>&#123;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">		<span class="comment">//创建一个窗口对象，并添加标题</span></span><br><span class="line">		JFrame frame = <span class="keyword">new</span> JFrame(<span class="string">&quot;简易计算器&quot;</span>);</span><br><span class="line">		<span class="comment">//设置窗口的布局方式</span></span><br><span class="line">	    frame.setLayout(<span class="keyword">null</span>);</span><br><span class="line">		<span class="comment">//设置初始位置和大小</span></span><br><span class="line">		frame.setBounds(<span class="number">100</span>, <span class="number">200</span>, <span class="number">570</span>, <span class="number">625</span>);</span><br><span class="line">		<span class="comment">//设置窗口是否可以伸缩</span></span><br><span class="line">		frame.setResizable(<span class="keyword">false</span>);</span><br><span class="line">		<span class="comment">//设置窗口是否显示</span></span><br><span class="line">		frame.setVisible(<span class="keyword">true</span>);</span><br><span class="line">		<span class="comment">//设置关闭方式</span></span><br><span class="line">		frame.setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);</span><br><span class="line">		</span><br><span class="line">		<span class="comment">//创建面板</span></span><br><span class="line">		JPanel panel1 = <span class="keyword">new</span> JPanel(<span class="keyword">new</span> FlowLayout(FlowLayout.LEFT));</span><br><span class="line">		JPanel panel2 = <span class="keyword">new</span> JPanel(<span class="keyword">new</span> GridLayout(<span class="number">5</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">5</span>));</span><br><span class="line">		<span class="comment">//设置面板位置</span></span><br><span class="line">		panel1.setBounds(<span class="number">0</span>, <span class="number">0</span>, <span class="number">550</span>, <span class="number">75</span>);</span><br><span class="line">		panel2.setBounds(<span class="number">0</span>, <span class="number">75</span>, <span class="number">550</span>, <span class="number">500</span>);</span><br><span class="line">		<span class="comment">//插入窗口</span></span><br><span class="line">		frame.add(panel1);</span><br><span class="line">		frame.add(panel2);</span><br><span class="line">	</span><br><span class="line">		<span class="comment">//创建文本</span></span><br><span class="line">		JTextField text = <span class="keyword">new</span> JTextField(<span class="string">&quot;0&quot;</span>);</span><br><span class="line">		<span class="comment">//设置文本大小</span></span><br><span class="line">		text.setPreferredSize(<span class="keyword">new</span> Dimension(<span class="number">540</span>, <span class="number">60</span>));</span><br><span class="line"></span><br><span class="line">		<span class="comment">//创建按钮对象</span></span><br><span class="line">		JButton button1 = <span class="keyword">new</span> JButton(<span class="string">&quot;CE&quot;</span>);</span><br><span class="line">		JButton button2 = <span class="keyword">new</span> JButton(<span class="string">&quot;C&quot;</span>);</span><br><span class="line">		JButton button3 = <span class="keyword">new</span> JButton(<span class="string">&quot;Back&quot;</span>);</span><br><span class="line">		JButton button4 = <span class="keyword">new</span> JButton(<span class="string">&quot;%&quot;</span>);</span><br><span class="line">		JButton button5 = <span class="keyword">new</span> JButton(<span class="string">&quot;7&quot;</span>);</span><br><span class="line">		JButton button6 = <span class="keyword">new</span> JButton(<span class="string">&quot;8&quot;</span>);</span><br><span class="line">		JButton button7 = <span class="keyword">new</span> JButton(<span class="string">&quot;9&quot;</span>);</span><br><span class="line">		JButton button8 = <span class="keyword">new</span> JButton(<span class="string">&quot;/&quot;</span>);</span><br><span class="line">		JButton button9 = <span class="keyword">new</span> JButton(<span class="string">&quot;4&quot;</span>);</span><br><span class="line">		JButton button10 = <span class="keyword">new</span> JButton(<span class="string">&quot;5&quot;</span>);</span><br><span class="line">		JButton button11 = <span class="keyword">new</span> JButton(<span class="string">&quot;6&quot;</span>);</span><br><span class="line">		JButton button12 = <span class="keyword">new</span> JButton(<span class="string">&quot;*&quot;</span>);</span><br><span class="line">		JButton button13 = <span class="keyword">new</span> JButton(<span class="string">&quot;1&quot;</span>);</span><br><span class="line">		JButton button14 = <span class="keyword">new</span> JButton(<span class="string">&quot;2&quot;</span>);</span><br><span class="line">		JButton button15 = <span class="keyword">new</span> JButton(<span class="string">&quot;3&quot;</span>);</span><br><span class="line">		JButton button16 = <span class="keyword">new</span> JButton(<span class="string">&quot;+&quot;</span>);</span><br><span class="line">		JButton button17 = <span class="keyword">new</span> JButton(<span class="string">&quot;0&quot;</span>);</span><br><span class="line">		JButton button18 = <span class="keyword">new</span> JButton(<span class="string">&quot;.&quot;</span>);</span><br><span class="line">		JButton button19 = <span class="keyword">new</span> JButton(<span class="string">&quot;=&quot;</span>);</span><br><span class="line">		JButton button20 = <span class="keyword">new</span> JButton(<span class="string">&quot;-&quot;</span>);</span><br><span class="line">		<span class="comment">//组件插入面板</span></span><br><span class="line">		panel1.add(text);</span><br><span class="line">		panel2.add(button1);</span><br><span class="line">		panel2.add(button2);</span><br><span class="line">		panel2.add(button3);</span><br><span class="line">		panel2.add(button4);</span><br><span class="line">		panel2.add(button5);</span><br><span class="line">		panel2.add(button6);</span><br><span class="line">		panel2.add(button7);</span><br><span class="line">		panel2.add(button8);</span><br><span class="line">		panel2.add(button9);</span><br><span class="line">		panel2.add(button10);</span><br><span class="line">		panel2.add(button11);</span><br><span class="line">		panel2.add(button12);</span><br><span class="line">		panel2.add(button13);</span><br><span class="line">		panel2.add(button14);</span><br><span class="line">		panel2.add(button15);</span><br><span class="line">		panel2.add(button16);</span><br><span class="line">		panel2.add(button17);</span><br><span class="line">		panel2.add(button18);</span><br><span class="line">		panel2.add(button19);</span><br><span class="line">		panel2.add(button20);</span><br><span class="line">		</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>



<h3 id="运行检测：-8"><a href="#运行检测：-8" class="headerlink" title="运行检测："></a>运行检测：</h3><p><img src="https://i.loli.net/2021/10/21/srXOEy76vnTKbM9.jpg"></p>
<h2 id="4"><a href="#4" class="headerlink" title="4"></a>4</h2><h3 id="任务要求-9"><a href="#任务要求-9" class="headerlink" title="任务要求:"></a>任务要求:</h3><p><img src="https://i.loli.net/2021/10/21/anoYwEi5KVqtIlD.png"></p>
<h3 id="代码实现：-9"><a href="#代码实现：-9" class="headerlink" title="代码实现："></a>代码实现：</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> one_ten;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.swing.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">GUI_4</span> </span>&#123;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">		<span class="comment">//创建一个窗口对象，并添加标题</span></span><br><span class="line">		JFrame frame = <span class="keyword">new</span> JFrame(<span class="string">&quot;信息表&quot;</span>);</span><br><span class="line">		<span class="comment">//设置窗口的布局方式</span></span><br><span class="line">	    frame.setLayout(<span class="keyword">null</span>);</span><br><span class="line">		<span class="comment">//设置初始位置和大小</span></span><br><span class="line">		frame.setBounds(<span class="number">100</span>, <span class="number">200</span>, <span class="number">300</span>, <span class="number">250</span>);</span><br><span class="line">		<span class="comment">//设置窗口是否可以伸缩</span></span><br><span class="line">		frame.setResizable(<span class="keyword">false</span>);</span><br><span class="line">		<span class="comment">//设置窗口是否显示</span></span><br><span class="line">		frame.setVisible(<span class="keyword">true</span>);</span><br><span class="line">		<span class="comment">//设置关闭方式</span></span><br><span class="line">		frame.setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);</span><br><span class="line">		</span><br><span class="line">		<span class="comment">//创建面板</span></span><br><span class="line">		JPanel panel = <span class="keyword">new</span> JPanel(<span class="keyword">new</span> FlowLayout(FlowLayout.CENTER));</span><br><span class="line"></span><br><span class="line">		<span class="comment">//设置面板位置</span></span><br><span class="line">		panel.setBounds(<span class="number">35</span>, <span class="number">0</span>, <span class="number">230</span>, <span class="number">250</span>);</span><br><span class="line">		<span class="comment">//插入窗口</span></span><br><span class="line">		frame.add(panel);</span><br><span class="line">		</span><br><span class="line">		<span class="comment">//创建标签</span></span><br><span class="line">		JLabel label1 = <span class="keyword">new</span> JLabel(<span class="string">&quot;姓名：&quot;</span>);</span><br><span class="line">		JLabel label2 = <span class="keyword">new</span> JLabel(<span class="string">&quot;性别：&quot;</span>);</span><br><span class="line">		JLabel label3 = <span class="keyword">new</span> JLabel(<span class="string">&quot;学号：&quot;</span>);</span><br><span class="line">		JLabel label4 = <span class="keyword">new</span> JLabel(<span class="string">&quot;专业：&quot;</span>);</span><br><span class="line">		JLabel label5 = <span class="keyword">new</span> JLabel(<span class="string">&quot;班级：&quot;</span>);</span><br><span class="line">		JLabel label6 = <span class="keyword">new</span> JLabel(<span class="string">&quot;籍贯：&quot;</span>);</span><br><span class="line">		<span class="comment">//创建文本</span></span><br><span class="line">		JTextField text1 = <span class="keyword">new</span> JTextField(<span class="number">15</span>);</span><br><span class="line">		JTextField text2 = <span class="keyword">new</span> JTextField(<span class="number">15</span>);</span><br><span class="line">		JTextField text3 = <span class="keyword">new</span> JTextField(<span class="number">15</span>);</span><br><span class="line">		JTextField text4 = <span class="keyword">new</span> JTextField(<span class="number">15</span>);</span><br><span class="line">		<span class="comment">//创建下拉列表框</span></span><br><span class="line">		JComboBox&lt;String&gt; box1 = <span class="keyword">new</span> JComboBox&lt;String&gt;();</span><br><span class="line">		JComboBox&lt;String&gt; box2 = <span class="keyword">new</span> JComboBox&lt;String&gt;();</span><br><span class="line">		JComboBox&lt;String&gt; box3 = <span class="keyword">new</span> JComboBox&lt;String&gt;();</span><br><span class="line">		<span class="comment">//添加下拉内容</span></span><br><span class="line">		box1.addItem(<span class="string">&quot;男&quot;</span>);</span><br><span class="line">		box1.addItem(<span class="string">&quot;女&quot;</span>);</span><br><span class="line">		box2.addItem(<span class="string">&quot;河北省&quot;</span>);</span><br><span class="line">		box2.addItem(<span class="string">&quot;河南省&quot;</span>);</span><br><span class="line">		box2.addItem(<span class="string">&quot;湖南省&quot;</span>);</span><br><span class="line">		box2.addItem(<span class="string">&quot;湖北省&quot;</span>);</span><br><span class="line">		box3.addItem(<span class="string">&quot;邢台市&quot;</span>);</span><br><span class="line">		box3.addItem(<span class="string">&quot;邯郸市&quot;</span>);</span><br><span class="line">		box3.addItem(<span class="string">&quot;石家庄市&quot;</span>);</span><br><span class="line">		box3.addItem(<span class="string">&quot;廊坊市&quot;</span>);</span><br><span class="line">		box1.setPreferredSize(<span class="keyword">new</span> Dimension(<span class="number">150</span>, <span class="number">20</span>));</span><br><span class="line">		<span class="comment">//创建按钮</span></span><br><span class="line">		JButton button1 = <span class="keyword">new</span> JButton(<span class="string">&quot;确定&quot;</span>);</span><br><span class="line">		JButton button2 = <span class="keyword">new</span> JButton(<span class="string">&quot;取消&quot;</span>);</span><br><span class="line">		<span class="comment">//组件插入面板</span></span><br><span class="line">		panel.add(label1);</span><br><span class="line">		panel.add(text1);</span><br><span class="line">		panel.add(label2);</span><br><span class="line">		panel.add(box1);</span><br><span class="line">		panel.add(label3);</span><br><span class="line">		panel.add(text2);</span><br><span class="line">		panel.add(label4);</span><br><span class="line">		panel.add(text3);</span><br><span class="line">		panel.add(label5);</span><br><span class="line">		panel.add(text4);</span><br><span class="line">		panel.add(label6);</span><br><span class="line">		panel.add(box2);</span><br><span class="line">		panel.add(box3);</span><br><span class="line">		panel.add(button1);</span><br><span class="line">		panel.add(button2);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<h3 id="运行检测：-9"><a href="#运行检测：-9" class="headerlink" title="运行检测："></a>运行检测：</h3><p><img src="https://i.loli.net/2021/10/21/YCse1IaEn3cTP89.jpg"></p>
]]></content>
  </entry>
  <entry>
    <title>为什么Java中代码可以正常运行，封装成方法后却出现bug？(未完)</title>
    <url>/2021/10/17/%E4%B8%BA%E4%BB%80%E4%B9%88Java%E4%B8%AD%E4%BB%A3%E7%A0%81%E5%8F%AF%E4%BB%A5%E6%AD%A3%E5%B8%B8%E8%BF%90%E8%A1%8C%EF%BC%8C%E5%B0%81%E8%A3%85%E6%88%90%E6%96%B9%E6%B3%95%E5%90%8E%E5%8D%B4%E5%87%BA%E7%8E%B0bug%EF%BC%9F/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><blockquote>
<p>参考价值：未完善，不建议参考、等待重置（遥遥无期）</p>
</blockquote>
<hr>
<h2 id="解决标题问题需要以下知识点："><a href="#解决标题问题需要以下知识点：" class="headerlink" title="解决标题问题需要以下知识点："></a>解决标题问题需要以下知识点：</h2><ol>
<li><strong>栈和堆</strong></li>
<li><strong>基础数据类型和引用数据类型</strong></li>
<li><strong>局部变量</strong></li>
<li><strong>数组和类的声明和初始化解析</strong></li>
</ol>
<h2 id="知识点解释："><a href="#知识点解释：" class="headerlink" title="知识点解释："></a>知识点解释：</h2><ol>
<li><p><strong>栈和堆</strong></p>
<p>栈和堆是内存中的两个存储结构，相互之间通过地址进行联系。</p>
<ul>
<li><p><strong>栈：</strong></p>
<p>用于存储<strong>局部变量</strong>，声明变量并初始化后没有默认初始化值，赋值后才能使用，方法结束后会被垃圾回收机制清理掉（不会立刻清理）。</p>
<p>ps:通常说的栈是指虚拟机的栈</p>
</li>
<li><p><strong>堆：</strong></p>
<p>用于存储<strong>对象实例</strong>和<strong>数组的元素</strong>也就是<strong>new</strong>出来的东西，通过地址和栈里的局部变量相关联，如果关联消失会被垃圾回收机制清理掉（不会立刻清理）。</p>
<p>堆里的数据具有默认初始化值。</p>
<p><img src="https://i.loli.net/2021/10/09/kDOejrdQACTt3fu.jpg"></p>
</li>
</ul>
</li>
<li><p><strong>局部变量：</strong></p>
<p>在方法（包括main方法）和参数列表里声明的变量都是局部变量。</p>
</li>
<li><p><strong>基础数据类型和引用数据类型：</strong></p>
<ol>
<li><p><strong>基础数据类型：</strong></p>
<p>整型、char型、浮点型、布尔型都属于基础数据类型</p>
</li>
<li><p><strong>引用数据类型：</strong></p>
<p>只能用来存储地址或null，一般用来和基础数据类型产生联系。</p>
</li>
</ol>
</li>
<li><p><strong>数组的声明和初始化解析:</strong></p>
</li>
<li><p><strong>数组的类型：</strong></p>
<p>数组的类型是引用类型</p>
<p>数组的元素是基本数据类型或者引用数据类型（类的数组）。</p>
<p><img src="https://i.loli.net/2021/10/09/Nro6cuMGxCOmHhS.jpg"></p>
</li>
<li><p><strong>声明并初始化一个数组在内存中的实现：</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span>[] num = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">3</span>];</span><br></pre></td></tr></table></figure>

<p><img src="https://i.loli.net/2021/10/09/Nro6cuMGxCOmHhS.jpg"></p>
</li>
<li><p><strong>类的声明和初始化解析:</strong></p>
<p>类的对象是引用类型存储在栈里，是局部变量，与类的实例相关联</p>
<p><strong>类的声明和初始化：</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Text</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">        Worker xiaoming = <span class="keyword">new</span> Worker();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Worker</span></span>&#123;</span><br><span class="line">    <span class="comment">//属性：</span></span><br><span class="line">    String name;</span><br><span class="line">    <span class="keyword">int</span> age;</span><br><span class="line">    <span class="keyword">boolean</span> isMale;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>类的声明（创建一个对象）：</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Work xiaoming;</span><br></pre></td></tr></table></figure>

<p><img src="https://i.loli.net/2021/10/17/s8Bl9LmXQ5awqHI.jpg"></p>
<p><strong>对象的初始化：</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">xiaoming = <span class="keyword">new</span> Worker();</span><br></pre></td></tr></table></figure>

<p><img src="https://i.loli.net/2021/10/17/dSTj5gGt8cyrVNP.jpg"></p>
</li>
</ol>
<h2 id="案例分析："><a href="#案例分析：" class="headerlink" title="案例分析："></a>案例分析：</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Text</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">        String str = <span class="string">&quot;Yes&quot;</span>;</span><br><span class="line">        Method(str);</span><br><span class="line">    &#125;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Method</span><span class="params">(String e)</span></span>&#123;</span><br><span class="line">        String m = <span class="string">&quot;Yes&quot;</span>;</span><br><span class="line">        <span class="keyword">if</span>(e == m)</span><br><span class="line">            System.out.println(<span class="string">&quot;true&quot;</span>);</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            System.out.println(<span class="string">&quot;false&quot;</span>);</span><br><span class="line">    &#125; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>











]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>踩坑小记录</tag>
        <tag>java底层刨析</tag>
      </tags>
  </entry>
  <entry>
    <title>学生成绩管理系统</title>
    <url>/2021/10/14/%E5%AD%A6%E7%94%9F%E6%88%90%E7%BB%A9%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><h2 id="项目要求："><a href="#项目要求：" class="headerlink" title="项目要求："></a>项目要求：</h2><ul>
<li>需要实现9种功能<ol>
<li>录入初始数据</li>
<li>插入新同学信息</li>
<li>删除</li>
<li>总人数</li>
<li>按学号查找</li>
<li>按姓名查找</li>
<li>成绩排序</li>
<li>显示所有学生信息</li>
<li>退出</li>
</ol>
</li>
<li>功能选择需要通过控制面板实现</li>
<li>只能通过控制面板选项退出程序</li>
<li>线性表相关操作需要封装成方法</li>
</ul>
<h2 id="代码框架搭建："><a href="#代码框架搭建：" class="headerlink" title="代码框架搭建："></a>代码框架搭建：</h2><ol>
<li><p>实现功能需要选择</p>
<p>需要使用选择的流程控制语句，9种选择用switch语句实现</p>
</li>
<li><p>程序不能自动退出，只能通过选项实现</p>
<p>所以，控制面板和switch语句是在一个循环里的，并且“退出”功能能够跳出这个循环，结束程序.</p>
</li>
</ol>
<p><strong>总结：</strong></p>
<p>用while语句将控制面板和switch语句包含，并且设置boolean类型的变量作为while的循环条件，只有”退出“功能能够修改。</p>
<p>9种方法分别分隔到switch语句的9个case里，逐一实现。</p>
<p><strong>框架模拟：</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">boolean</span> flag = <span class="keyword">true</span>;</span><br><span class="line"><span class="keyword">while</span>(flag)&#123;</span><br><span class="line">    输出控制面板;</span><br><span class="line">    获取用户选项selection;</span><br><span class="line">    <span class="keyword">switch</span>(selection)&#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">1</span>:录入初始数据</span><br><span class="line">        <span class="keyword">case</span> <span class="number">2</span>:插入新同学信息</span><br><span class="line">        <span class="keyword">case</span> <span class="number">3</span>:删除</span><br><span class="line">        <span class="keyword">case</span> <span class="number">4</span>:总人数</span><br><span class="line">        <span class="keyword">case</span> <span class="number">5</span>:按学号查找</span><br><span class="line">        <span class="keyword">case</span> <span class="number">6</span>:按姓名查找</span><br><span class="line">        <span class="keyword">case</span> <span class="number">7</span>:成绩排序</span><br><span class="line">        <span class="keyword">case</span> <span class="number">8</span>:显示所有学生信息</span><br><span class="line">        <span class="keyword">case</span> <span class="number">9</span>:退出        </span><br><span class="line">    &#125;        </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="代码编译思想："><a href="#代码编译思想：" class="headerlink" title="代码编译思想："></a>代码编译思想：</h2><p>本次分别运用了两种思想写了两个版本的代码，分别是：<strong>标准版</strong>和<strong>Plus版</strong></p>
<p>标准版运用的是面向过程的思想</p>
<p>Plus版运用的是面向过程的思想</p>
<h2 id="代码实现："><a href="#代码实现：" class="headerlink" title="代码实现："></a>代码实现：</h2><h3 id="标准版"><a href="#标准版" class="headerlink" title="标准版"></a>标准版</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"><span class="meta">@SuppressWarnings(&quot;rawtypes&quot;)</span> </span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Student_Achievement_Management_System</span> </span>&#123;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">		Scanner scan = <span class="keyword">new</span> Scanner(System.in); </span><br><span class="line">		String selection;<span class="comment">//声明用户选项</span></span><br><span class="line">		SqList student = <span class="keyword">new</span> SqList();<span class="comment">//声明线性表</span></span><br><span class="line">		<span class="keyword">boolean</span> flag = <span class="keyword">true</span>;<span class="comment">//声明并初始化while语句的控制条件</span></span><br><span class="line">		<span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line">		<span class="keyword">while</span>(flag) &#123;</span><br><span class="line">			<span class="comment">//输出控制面板（可封装）</span></span><br><span class="line">			System.out.println(<span class="string">&quot;\t\t1---录入初始数据&quot;</span>);</span><br><span class="line">			System.out.println(<span class="string">&quot;\t\t2---插入新同学信息&quot;</span>);</span><br><span class="line">			System.out.println(<span class="string">&quot;\t\t3---删除&quot;</span>);</span><br><span class="line">			System.out.println(<span class="string">&quot;\t\t4---输出总人数&quot;</span>);</span><br><span class="line">			System.out.println(<span class="string">&quot;\t\t5---按学号查找&quot;</span>);</span><br><span class="line">			System.out.println(<span class="string">&quot;\t\t6---按姓名查找&quot;</span>);</span><br><span class="line">			System.out.println(<span class="string">&quot;\t\t7---按成绩排序&quot;</span>);</span><br><span class="line">			System.out.println(<span class="string">&quot;\t\t8---显示所有学生信息&quot;</span>);</span><br><span class="line">			System.out.println(<span class="string">&quot;\t\t9---退出&quot;</span>);</span><br><span class="line">			System.out.print(<span class="string">&quot;请选择功能：&quot;</span>);</span><br><span class="line">			<span class="comment">//获得用户选项</span></span><br><span class="line">			selection = scan.next();</span><br><span class="line">			<span class="comment">//加一个输入保护功能</span></span><br><span class="line">			<span class="keyword">char</span> chr = selection.charAt(<span class="number">0</span>);</span><br><span class="line">			<span class="keyword">while</span>(chr &gt; <span class="number">49</span> &amp;&amp; chr &gt; <span class="number">57</span>) &#123;</span><br><span class="line">				System.out.println(<span class="string">&quot;选择错误，请重新输入：&quot;</span>);</span><br><span class="line">				selection = scan.next();</span><br><span class="line">				chr = selection.charAt(<span class="number">0</span>);</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="comment">//9大功能模块</span></span><br><span class="line">			<span class="keyword">switch</span>(selection) &#123;</span><br><span class="line">				<span class="comment">//创建线性表</span></span><br><span class="line">				<span class="keyword">case</span> <span class="string">&quot;1&quot;</span>:</span><br><span class="line">					student.InitList();<span class="comment">//初始化线性表</span></span><br><span class="line">					System.out.println(<span class="string">&quot;请输入学生成绩，当前学号为#时结束\n&quot;</span>);</span><br><span class="line">					<span class="keyword">while</span>(<span class="keyword">true</span>) &#123;</span><br><span class="line">						</span><br><span class="line">						System.out.print(<span class="string">&quot;请输入学号：&quot;</span>);</span><br><span class="line">						student.num[i] = scan.next();</span><br><span class="line">						<span class="comment">//设置结束循环的逻辑</span></span><br><span class="line">						<span class="keyword">char</span> num_flag = student.num[i].charAt(<span class="number">0</span>);</span><br><span class="line">						<span class="keyword">if</span>(num_flag == <span class="string">&#x27;#&#x27;</span>) &#123;</span><br><span class="line">							student.Clean();<span class="comment">//暴力清屏逻辑</span></span><br><span class="line">							<span class="keyword">break</span>;</span><br><span class="line">						&#125;</span><br><span class="line">						System.out.print(<span class="string">&quot;请输入姓名：&quot;</span>);</span><br><span class="line">						student.name[i] = scan.next();</span><br><span class="line">						System.out.print(<span class="string">&quot;请输入成绩：&quot;</span>);</span><br><span class="line">						student.score[i] = scan.nextInt();</span><br><span class="line">						student.length ++;</span><br><span class="line">						i ++;</span><br><span class="line">					&#125;</span><br><span class="line">					<span class="keyword">break</span>;</span><br><span class="line">				<span class="comment">//插入新同学信息</span></span><br><span class="line">				<span class="keyword">case</span> <span class="string">&quot;2&quot;</span>:</span><br><span class="line">					<span class="comment">//获取新同学插入位置、学号、姓名、成绩信息</span></span><br><span class="line">					System.out.print(<span class="string">&quot;请输入插入位置：&quot;</span>);</span><br><span class="line">					<span class="keyword">int</span> location2 = scan.nextInt();</span><br><span class="line">					System.out.print(<span class="string">&quot;请输入学号：&quot;</span>);</span><br><span class="line">					String num = scan.next();</span><br><span class="line">					System.out.print(<span class="string">&quot;请输入姓名：&quot;</span>);</span><br><span class="line">					String name = scan.next();</span><br><span class="line">					System.out.print(<span class="string">&quot;请输入成绩：&quot;</span>);</span><br><span class="line">					<span class="keyword">int</span> score = scan.nextInt();</span><br><span class="line">					<span class="comment">//将新同学的信息插入线性表</span></span><br><span class="line">					student.ListInsert(location2, num, name, score);</span><br><span class="line">					<span class="comment">//暴力清屏逻辑</span></span><br><span class="line">					System.out.print(<span class="string">&quot;是否结束本次操作（Y/N）：&quot;</span>);</span><br><span class="line">					String flag2 = scan.next();</span><br><span class="line">					<span class="keyword">char</span> flag_chr2 = flag2.charAt(<span class="number">0</span>);</span><br><span class="line">					<span class="keyword">if</span>(flag_chr2 == <span class="string">&#x27;Y&#x27;</span>) &#123;</span><br><span class="line">						student.Clean();</span><br><span class="line">					&#125;</span><br><span class="line">					<span class="keyword">break</span>;</span><br><span class="line">				<span class="comment">//删除</span></span><br><span class="line">				<span class="keyword">case</span> <span class="string">&quot;3&quot;</span>:</span><br><span class="line">					System.out.print(<span class="string">&quot;请输入删除的位置：&quot;</span>);</span><br><span class="line">					<span class="keyword">int</span> location3 = scan.nextInt();</span><br><span class="line">					student.ListDelete(location3);</span><br><span class="line">					student.length --;<span class="comment">//线性表长度减一</span></span><br><span class="line">					<span class="comment">//暴力清屏逻辑</span></span><br><span class="line">					System.out.print(<span class="string">&quot;是否结束本次操作（Y/N）：&quot;</span>);</span><br><span class="line">					String flag3 = scan.next();</span><br><span class="line">					<span class="keyword">char</span> flag_chr3 = flag3.charAt(<span class="number">0</span>);</span><br><span class="line">					<span class="keyword">if</span>(flag_chr3 == <span class="string">&#x27;Y&#x27;</span>) &#123;</span><br><span class="line">						student.Clean();</span><br><span class="line">					&#125;</span><br><span class="line">					<span class="keyword">break</span>;</span><br><span class="line">				<span class="comment">//总人数</span></span><br><span class="line">				<span class="keyword">case</span> <span class="string">&quot;4&quot;</span>:</span><br><span class="line">					System.out.println(<span class="string">&quot;学生总数为：&quot;</span> + student.ListLength());</span><br><span class="line">					<span class="comment">//暴力清屏逻辑</span></span><br><span class="line">					System.out.print(<span class="string">&quot;是否结束本次操作（Y/N）：&quot;</span>);</span><br><span class="line">					String flag4 = scan.next();</span><br><span class="line">					<span class="keyword">char</span> flag_chr4 = flag4.charAt(<span class="number">0</span>);</span><br><span class="line">					<span class="keyword">if</span>(flag_chr4 == <span class="string">&#x27;Y&#x27;</span>) &#123;</span><br><span class="line">						student.Clean();</span><br><span class="line">					&#125;</span><br><span class="line">					<span class="keyword">break</span>;</span><br><span class="line">				<span class="comment">//按学号查找</span></span><br><span class="line">				<span class="keyword">case</span> <span class="string">&quot;5&quot;</span>:</span><br><span class="line">					System.out.print(<span class="string">&quot;请输入查找学生的学号：&quot;</span>);</span><br><span class="line">					String num5 = scan.next();</span><br><span class="line">					<span class="keyword">int</span> Location5 = student.LocationElem_num(num5) - <span class="number">1</span>;</span><br><span class="line">					System.out.println(<span class="string">&quot;查找到学生信息如下：&quot;</span>);</span><br><span class="line">					System.out.println(<span class="string">&quot;学号\t\t姓名\t\t成绩&quot;</span> );</span><br><span class="line">					System.out.println(student.num[Location5] + <span class="string">&quot;\t&quot;</span>+ student.name[Location5] + <span class="string">&quot;\t\t&quot;</span> + student.score[Location5]);</span><br><span class="line">					<span class="comment">//暴力清屏逻辑</span></span><br><span class="line">					System.out.print(<span class="string">&quot;是否结束本次操作（Y/N）：&quot;</span>);</span><br><span class="line">					String flag5 = scan.next();</span><br><span class="line">					<span class="keyword">char</span> flag_chr5 = flag5.charAt(<span class="number">0</span>);</span><br><span class="line">					<span class="keyword">if</span>(flag_chr5 == <span class="string">&#x27;Y&#x27;</span>) &#123;</span><br><span class="line">						student.Clean();</span><br><span class="line">					&#125;</span><br><span class="line">					<span class="keyword">break</span>;</span><br><span class="line">				<span class="comment">//按姓名查找</span></span><br><span class="line">				<span class="keyword">case</span> <span class="string">&quot;6&quot;</span>:</span><br><span class="line">					System.out.print(<span class="string">&quot;请输入查找学生的姓名：&quot;</span>);</span><br><span class="line">					String name6 = scan.next();</span><br><span class="line">					<span class="keyword">int</span> Location6 = student.LocationElem_name(name6) - <span class="number">1</span>;</span><br><span class="line">					System.out.println(<span class="string">&quot;查找到学生信息如下：&quot;</span>);</span><br><span class="line">					System.out.println(<span class="string">&quot;学号\t\t姓名\t\t成绩&quot;</span> );</span><br><span class="line">					System.out.println(student.num[Location6] + <span class="string">&quot;\t&quot;</span>+ student.name[Location6] + <span class="string">&quot;\t\t&quot;</span> + student.score[Location6]);</span><br><span class="line">					<span class="comment">//暴力清屏逻辑</span></span><br><span class="line">					System.out.print(<span class="string">&quot;是否结束本次操作（Y/N）：&quot;</span>);</span><br><span class="line">					String flag6 = scan.next();</span><br><span class="line">					<span class="keyword">char</span> flag_chr6 = flag6.charAt(<span class="number">0</span>);</span><br><span class="line">					<span class="keyword">if</span>(flag_chr6 == <span class="string">&#x27;Y&#x27;</span>) &#123;</span><br><span class="line">						student.Clean();</span><br><span class="line">					&#125;</span><br><span class="line">					<span class="keyword">break</span>;</span><br><span class="line">				<span class="comment">//成绩排序</span></span><br><span class="line">				<span class="keyword">case</span> <span class="string">&quot;7&quot;</span>:</span><br><span class="line">					System.out.println(<span class="string">&quot;将成绩从高到低排序&quot;</span>);</span><br><span class="line">					<span class="keyword">int</span> length7 = student.ListLength();</span><br><span class="line">					<span class="keyword">for</span>(<span class="keyword">int</span> m = <span class="number">0</span> ; m &lt; length7 - <span class="number">1</span>; m++) &#123;</span><br><span class="line">						<span class="comment">//循环(length-1)次</span></span><br><span class="line">						<span class="keyword">for</span>(<span class="keyword">int</span> n = <span class="number">0</span>; n &lt; length7 - <span class="number">1</span> - m; n ++) &#123;</span><br><span class="line">							<span class="keyword">if</span>(student.score[n] &lt; student.score[n+<span class="number">1</span>]) &#123;</span><br><span class="line">								<span class="comment">//将小的score[]前移一位</span></span><br><span class="line">								<span class="keyword">int</span> temp1 = student.score[n];</span><br><span class="line">								student.score[n] = student.score[n+<span class="number">1</span>];</span><br><span class="line">								student.score[n+<span class="number">1</span>] = temp1;</span><br><span class="line">								<span class="comment">//将name[]同步变换</span></span><br><span class="line">								String temp2 = student.name[n];</span><br><span class="line">								student.name[n] = student.name[n+<span class="number">1</span>];</span><br><span class="line">								student.name[n+<span class="number">1</span>] = temp2;</span><br><span class="line">								<span class="comment">//将num[]同步变换</span></span><br><span class="line">								String temp3 = student.num[n];</span><br><span class="line">								student.num[n] = student.num[n+<span class="number">1</span>];</span><br><span class="line">								student.num[n+<span class="number">1</span>] = temp3;</span><br><span class="line">							&#125;</span><br><span class="line">						&#125;</span><br><span class="line">					&#125; </span><br><span class="line">					<span class="comment">//暴力清屏逻辑</span></span><br><span class="line">					System.out.print(<span class="string">&quot;是否结束本次操作（Y/N）：&quot;</span>);</span><br><span class="line">					String flag7 = scan.next();</span><br><span class="line">					<span class="keyword">char</span> flag_chr7 = flag7.charAt(<span class="number">0</span>);</span><br><span class="line">					<span class="keyword">if</span>(flag_chr7 == <span class="string">&#x27;Y&#x27;</span>) &#123;</span><br><span class="line">						student.Clean();</span><br><span class="line">					&#125;</span><br><span class="line">					<span class="keyword">break</span>;</span><br><span class="line">				<span class="comment">//显示所有学生信息</span></span><br><span class="line">				<span class="keyword">case</span> <span class="string">&quot;8&quot;</span>:</span><br><span class="line">					System.out.println(<span class="string">&quot;学号\t\t\t姓名\t\t成绩&quot;</span> );</span><br><span class="line">					<span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j &lt;= student.length - <span class="number">1</span>; j ++ ) &#123;</span><br><span class="line">						System.out.println(student.num[j] + <span class="string">&quot;\t\t&quot;</span>+ student.name[j] + <span class="string">&quot;\t\t&quot;</span> + student.score[j]);</span><br><span class="line">					&#125;</span><br><span class="line">					<span class="comment">//暴力清屏逻辑</span></span><br><span class="line">					System.out.print(<span class="string">&quot;是否结束本次操作（Y/N）：&quot;</span>);</span><br><span class="line">					String flag8 = scan.next();</span><br><span class="line">					<span class="keyword">char</span> flag_chr8 = flag8.charAt(<span class="number">0</span>);</span><br><span class="line">					<span class="keyword">if</span>(flag_chr8 == <span class="string">&#x27;Y&#x27;</span>) &#123;</span><br><span class="line">						student.Clean();</span><br><span class="line">					&#125;</span><br><span class="line">					<span class="keyword">break</span>;</span><br><span class="line">				<span class="comment">//退出</span></span><br><span class="line">				<span class="keyword">case</span> <span class="string">&quot;9&quot;</span>:</span><br><span class="line">					System.out.println(<span class="string">&quot;您确定要退出吗？（Y/N）&quot;</span>);</span><br><span class="line">					String exit = scan.next();</span><br><span class="line">					<span class="keyword">char</span> exit_chr = exit.charAt(<span class="number">0</span>);</span><br><span class="line">					<span class="keyword">if</span>(exit_chr == <span class="string">&#x27;Y&#x27;</span>) &#123;</span><br><span class="line">						flag = <span class="keyword">false</span>;</span><br><span class="line">					&#125;</span><br><span class="line">					<span class="keyword">break</span>;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		scan.close();</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//线性表结构</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SqList</span>&lt;<span class="title">E</span>&gt; </span>&#123;</span><br><span class="line">	<span class="comment">//属性：</span></span><br><span class="line">	<span class="keyword">final</span> <span class="keyword">int</span> MAXSIZE = <span class="number">100</span>;</span><br><span class="line">	String[] num = <span class="keyword">new</span> String[MAXSIZE];</span><br><span class="line">	String[] name = <span class="keyword">new</span> String[MAXSIZE];</span><br><span class="line">	<span class="keyword">int</span>[] score = <span class="keyword">new</span> <span class="keyword">int</span>[MAXSIZE];</span><br><span class="line">	<span class="keyword">int</span> length;</span><br><span class="line">	<span class="comment">//方法</span></span><br><span class="line">	<span class="comment">//初始化线性表</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">InitList</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="keyword">this</span>.length = <span class="number">0</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">//插入新元素</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">ListInsert</span><span class="params">(<span class="keyword">int</span> i, String e1, String e2, <span class="keyword">int</span> e3)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">int</span> k;</span><br><span class="line">		<span class="comment">//判断线性表是否已满</span></span><br><span class="line">		<span class="keyword">if</span>(<span class="keyword">this</span>.length == MAXSIZE)</span><br><span class="line">			<span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">		<span class="comment">//判断i是否有效</span></span><br><span class="line">		<span class="keyword">if</span>(i &lt; <span class="number">1</span> || i &gt; <span class="keyword">this</span>.length + <span class="number">1</span>)</span><br><span class="line">			<span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">		<span class="keyword">if</span>(i &lt;= <span class="keyword">this</span>.length) &#123;</span><br><span class="line">			<span class="comment">//将第i个位置及其之后的元素后移一位</span></span><br><span class="line">			<span class="keyword">for</span>(k = <span class="keyword">this</span>.length-<span class="number">1</span>; k &gt;= i-<span class="number">1</span>; k--)</span><br><span class="line">		    &#123;</span><br><span class="line">		        <span class="keyword">this</span>.num[k+<span class="number">1</span>] = <span class="keyword">this</span>.num[k];</span><br><span class="line">		        <span class="keyword">this</span>.name[k+<span class="number">1</span>] = <span class="keyword">this</span>.name[k];</span><br><span class="line">		        <span class="keyword">this</span>.score[k+<span class="number">1</span>] = <span class="keyword">this</span>.score[k];</span><br><span class="line">		    &#125;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="comment">//将新元素插入</span></span><br><span class="line">		<span class="keyword">this</span>.num[i-<span class="number">1</span>] = e1;</span><br><span class="line">		<span class="keyword">this</span>.name[i-<span class="number">1</span>] = e2;</span><br><span class="line">		<span class="keyword">this</span>.score[i-<span class="number">1</span>] = e3;</span><br><span class="line">		<span class="comment">//更新线性表的长度</span></span><br><span class="line">	    <span class="keyword">this</span>.length ++; </span><br><span class="line">	    <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">//删除第i个元素</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">ListDelete</span><span class="params">(<span class="keyword">int</span> i)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">int</span> k;</span><br><span class="line">	    <span class="comment">//判断方法是否有意义</span></span><br><span class="line">	    <span class="keyword">if</span>(<span class="keyword">this</span>.length == <span class="number">0</span> || i &lt; <span class="number">1</span> || i &gt; <span class="keyword">this</span>.length)</span><br><span class="line">	        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">	    <span class="comment">//删除第i个元素，并将后面的元素前移</span></span><br><span class="line">	    <span class="keyword">for</span>(k = i; k &lt; <span class="keyword">this</span>.length; k++)</span><br><span class="line">	    &#123;</span><br><span class="line">	        <span class="keyword">this</span>.num[k-<span class="number">1</span>] = <span class="keyword">this</span>.num[k];</span><br><span class="line">	        <span class="keyword">this</span>.name[k-<span class="number">1</span>] = <span class="keyword">this</span>.name[k];</span><br><span class="line">	        <span class="keyword">this</span>.score[k-<span class="number">1</span>] = <span class="keyword">this</span>.score[k];</span><br><span class="line">	    &#125;</span><br><span class="line">	    <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">//获取线性表长度</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">ListLength</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="keyword">this</span>.length;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">//查找线性表中是否有某元素，并返回其索引(按学号查找)</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">LocationElem_num</span><span class="params">(String e)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">int</span> i;</span><br><span class="line">	    <span class="comment">//判断线性表是否为空</span></span><br><span class="line">	    <span class="keyword">if</span>(<span class="keyword">this</span>.length == <span class="number">0</span>)</span><br><span class="line">	        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">	    <span class="comment">//在线性表中寻找数据元素e，并获取其位置</span></span><br><span class="line">	    <span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; <span class="keyword">this</span>.length; i++)</span><br><span class="line">	    &#123;</span><br><span class="line">	        <span class="keyword">if</span>(<span class="keyword">this</span>.num[i].equals(e)) &#123;</span><br><span class="line">	        	<span class="keyword">return</span> (i+<span class="number">1</span>);</span><br><span class="line">	        &#125;</span><br><span class="line">	    &#125;</span><br><span class="line">	    <span class="comment">//返回数据元素e在线性表的位置</span></span><br><span class="line">	    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">//查找线性表中是否有某元素，并返回其索引(按姓名查找)</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">LocationElem_name</span><span class="params">(String e)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">int</span> i;</span><br><span class="line">	    <span class="comment">//判断线性表是否为空</span></span><br><span class="line">	    <span class="keyword">if</span>(<span class="keyword">this</span>.length == <span class="number">0</span>)</span><br><span class="line">	        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">	    <span class="comment">//在线性表中寻找数据元素e，并获取其位置</span></span><br><span class="line">	    <span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; <span class="keyword">this</span>.length; i++)</span><br><span class="line">	    &#123;</span><br><span class="line">	        <span class="keyword">if</span>(<span class="keyword">this</span>.name[i].equals(e)) &#123;</span><br><span class="line">	            <span class="keyword">return</span> (i + <span class="number">1</span>);</span><br><span class="line">	        &#125;</span><br><span class="line">	    &#125;</span><br><span class="line">	    <span class="comment">//返回数据元素e在线性表的位置</span></span><br><span class="line">	    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">//暴力清屏逻辑</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Clean</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= <span class="number">30</span>; i ++) &#123;</span><br><span class="line">			System.out.println(<span class="string">&quot;&quot;</span>);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h3 id="Plus版："><a href="#Plus版：" class="headerlink" title="Plus版："></a>Plus版：</h3><ul>
<li><p><strong>main方法:</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"><span class="meta">@SuppressWarnings(&quot;rawtypes&quot;)</span> </span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Student_Achievement_Management_System_Plus</span> </span>&#123;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">		Scanner scan = <span class="keyword">new</span> Scanner(System.in); </span><br><span class="line">		String selection;<span class="comment">//声明用户选项</span></span><br><span class="line">		SqList student = <span class="keyword">new</span> SqList();<span class="comment">//声明线性表</span></span><br><span class="line">		<span class="keyword">boolean</span> flag = <span class="keyword">true</span>;<span class="comment">//声明并初始化while语句的控制条件</span></span><br><span class="line">		<span class="keyword">while</span>(flag) &#123;</span><br><span class="line">			<span class="comment">//输出控制面板</span></span><br><span class="line">			Utility.Print_control_panel();</span><br><span class="line">			<span class="comment">//获得用户选项</span></span><br><span class="line">			selection = scan.next();</span><br><span class="line">			<span class="comment">//加一个输入保护功能</span></span><br><span class="line">			selection = Utility.Print_protect(selection);</span><br><span class="line">			<span class="comment">//9大功能模块</span></span><br><span class="line">			<span class="keyword">switch</span>(selection) &#123;</span><br><span class="line">				<span class="comment">//创建线性表</span></span><br><span class="line">				<span class="keyword">case</span> <span class="string">&quot;1&quot;</span>:</span><br><span class="line">					student.InitList();<span class="comment">//初始化线性表</span></span><br><span class="line">					<span class="comment">//获取新同学插入位置、学号、姓名、成绩信息</span></span><br><span class="line">					Utility.Check_in_Information(student);</span><br><span class="line">					<span class="keyword">break</span>;</span><br><span class="line">				<span class="comment">//插入新同学信息</span></span><br><span class="line">				<span class="keyword">case</span> <span class="string">&quot;2&quot;</span>:</span><br><span class="line">					Utility.Insert_new_information(student);</span><br><span class="line">					<span class="keyword">break</span>;</span><br><span class="line">				<span class="comment">//删除</span></span><br><span class="line">				<span class="keyword">case</span> <span class="string">&quot;3&quot;</span>:</span><br><span class="line">					Utility.Delet_information(student);</span><br><span class="line">					<span class="keyword">break</span>;</span><br><span class="line">				<span class="comment">//总人数</span></span><br><span class="line">				<span class="keyword">case</span> <span class="string">&quot;4&quot;</span>:</span><br><span class="line">					Utility.Length(student);</span><br><span class="line">					<span class="keyword">break</span>;</span><br><span class="line">				<span class="comment">//按学号查找</span></span><br><span class="line">				<span class="keyword">case</span> <span class="string">&quot;5&quot;</span>:</span><br><span class="line">					Utility.Location_num(student);</span><br><span class="line">					<span class="keyword">break</span>;</span><br><span class="line">				<span class="comment">//按姓名查找</span></span><br><span class="line">				<span class="keyword">case</span> <span class="string">&quot;6&quot;</span>:</span><br><span class="line">					Utility.Location_name(student);</span><br><span class="line">					<span class="keyword">break</span>;</span><br><span class="line">				<span class="comment">//成绩排序</span></span><br><span class="line">				<span class="keyword">case</span> <span class="string">&quot;7&quot;</span>:</span><br><span class="line">					Utility.Sort_score(student);</span><br><span class="line">					<span class="keyword">break</span>;</span><br><span class="line">				<span class="comment">//显示所有学生信息</span></span><br><span class="line">				<span class="keyword">case</span> <span class="string">&quot;8&quot;</span>:</span><br><span class="line">					Utility.Print_all(student);</span><br><span class="line">					<span class="keyword">break</span>;</span><br><span class="line">				<span class="comment">//退出</span></span><br><span class="line">				<span class="keyword">case</span> <span class="string">&quot;9&quot;</span>:</span><br><span class="line">					flag = Utility.Exite(flag);</span><br><span class="line">					<span class="keyword">break</span>;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		scan.close();</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
<li><p><strong>Utility工具类：</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> student_achievement_management_system_plus;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"><span class="meta">@SuppressWarnings(&quot;rawtypes&quot;)</span> </span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Utility</span> </span>&#123;</span><br><span class="line">	<span class="keyword">static</span> Scanner scan = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">	<span class="comment">//输出控制面板</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Print_control_panel</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		System.out.println(<span class="string">&quot;\t\t1---录入初始数据&quot;</span>);</span><br><span class="line">		System.out.println(<span class="string">&quot;\t\t2---插入新同学信息&quot;</span>);</span><br><span class="line">		System.out.println(<span class="string">&quot;\t\t3---删除&quot;</span>);</span><br><span class="line">		System.out.println(<span class="string">&quot;\t\t4---输出总人数&quot;</span>);</span><br><span class="line">		System.out.println(<span class="string">&quot;\t\t5---按学号查找&quot;</span>);</span><br><span class="line">		System.out.println(<span class="string">&quot;\t\t6---按姓名查找&quot;</span>);</span><br><span class="line">		System.out.println(<span class="string">&quot;\t\t7---按成绩排序&quot;</span>);</span><br><span class="line">		System.out.println(<span class="string">&quot;\t\t8---显示所有学生信息&quot;</span>);</span><br><span class="line">		System.out.println(<span class="string">&quot;\t\t9---退出&quot;</span>);</span><br><span class="line">		System.out.print(<span class="string">&quot;请选择功能：&quot;</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">//输入保护功能</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span>  String <span class="title">Print_protect</span><span class="params">(String e)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">char</span> chr = e.charAt(<span class="number">0</span>);</span><br><span class="line">		<span class="keyword">while</span>(chr &gt; <span class="number">49</span> &amp;&amp; chr &gt; <span class="number">57</span>) &#123;</span><br><span class="line">			System.out.print(<span class="string">&quot;选择错误，请重新输入：&quot;</span>);</span><br><span class="line">			e = scan.next();</span><br><span class="line">			chr = e.charAt(<span class="number">0</span>);</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">return</span> e;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">//输入线性表初始信息	</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Check_in_Information</span><span class="params">(SqList L)</span> </span>&#123;</span><br><span class="line">		System.out.println(<span class="string">&quot;请输入学生成绩，当前学号为#时结束\n&quot;</span>);</span><br><span class="line">		<span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line">		<span class="keyword">while</span>(<span class="keyword">true</span>) &#123;	</span><br><span class="line">			System.out.print(<span class="string">&quot;请输入学号：&quot;</span>);</span><br><span class="line">			L.num[i] = scan.next();</span><br><span class="line">			<span class="comment">//设置结束循环的逻辑</span></span><br><span class="line">			<span class="keyword">char</span> num_flag = L.num[i].charAt(<span class="number">0</span>);</span><br><span class="line">			<span class="keyword">if</span>(num_flag == <span class="string">&#x27;#&#x27;</span>) &#123;</span><br><span class="line">				L.Clean();<span class="comment">//暴力清屏逻辑</span></span><br><span class="line">				<span class="keyword">break</span>;</span><br><span class="line">			&#125;</span><br><span class="line">			System.out.print(<span class="string">&quot;请输入姓名：&quot;</span>);</span><br><span class="line">			L.name[i] = scan.next();</span><br><span class="line">			System.out.print(<span class="string">&quot;请输入成绩：&quot;</span>);</span><br><span class="line">			L.score[i] = scan.nextInt();</span><br><span class="line">			L.length ++;</span><br><span class="line">			i ++;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">//插入新同学信息</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Insert_new_information</span><span class="params">(SqList L)</span> </span>&#123;</span><br><span class="line">		<span class="comment">//获取新同学插入位置、学号、姓名、成绩信息</span></span><br><span class="line">		System.out.print(<span class="string">&quot;请输入插入位置：&quot;</span>);</span><br><span class="line">		<span class="keyword">int</span> location = scan.nextInt();</span><br><span class="line">		System.out.print(<span class="string">&quot;请输入学号：&quot;</span>);</span><br><span class="line">		String num = scan.next();</span><br><span class="line">		System.out.print(<span class="string">&quot;请输入姓名：&quot;</span>);</span><br><span class="line">		String name = scan.next();</span><br><span class="line">		System.out.print(<span class="string">&quot;请输入成绩：&quot;</span>);</span><br><span class="line">		<span class="keyword">int</span> score = scan.nextInt();</span><br><span class="line">		<span class="comment">//将新同学的信息插入线性表</span></span><br><span class="line">		L.ListInsert(location, num, name, score);</span><br><span class="line">		<span class="comment">//暴力清屏逻辑</span></span><br><span class="line">		Clean(L);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">//删除学生信息</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Delet_information</span><span class="params">(SqList L)</span> </span>&#123;</span><br><span class="line">		System.out.print(<span class="string">&quot;请输入删除的位置：&quot;</span>);</span><br><span class="line">		<span class="keyword">int</span> location = scan.nextInt();</span><br><span class="line">		L.ListDelete(location);</span><br><span class="line">		L.length --;<span class="comment">//线性表长度减一</span></span><br><span class="line">		<span class="comment">//暴力清屏逻辑</span></span><br><span class="line">		Clean(L);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">//总人数</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Length</span><span class="params">(SqList L)</span> </span>&#123;</span><br><span class="line">		System.out.println(<span class="string">&quot;学生总数为：&quot;</span> + L.ListLength());</span><br><span class="line">		<span class="comment">//暴力清屏逻辑</span></span><br><span class="line">		Clean(L);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">//按学号查找</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Location_num</span><span class="params">(SqList L)</span> </span>&#123;</span><br><span class="line">		System.out.print(<span class="string">&quot;请输入查找学生的学号：&quot;</span>);</span><br><span class="line">		String num = scan.next();</span><br><span class="line">		<span class="keyword">int</span> Location = L.LocationElem_num(num) - <span class="number">1</span>;</span><br><span class="line">		System.out.println(<span class="string">&quot;查找到学生信息如下：&quot;</span>);</span><br><span class="line">		System.out.println(<span class="string">&quot;学号\t\t姓名\t\t成绩&quot;</span> );</span><br><span class="line">		System.out.println(L.num[Location] + <span class="string">&quot;\t&quot;</span>+ L.name[Location] + <span class="string">&quot;\t\t&quot;</span> + L.score[Location]);</span><br><span class="line">		<span class="comment">//暴力清屏逻辑</span></span><br><span class="line">		Clean(L);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">//按姓名查找</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Location_name</span><span class="params">(SqList L)</span> </span>&#123;</span><br><span class="line">		System.out.print(<span class="string">&quot;请输入查找学生的姓名：&quot;</span>);</span><br><span class="line">		String name = scan.next();</span><br><span class="line">		<span class="keyword">int</span> Location = L.LocationElem_name(name) - <span class="number">1</span>;</span><br><span class="line">		System.out.println(<span class="string">&quot;查找到学生信息如下：&quot;</span>);</span><br><span class="line">		System.out.println(<span class="string">&quot;学号\t\t姓名\t\t成绩&quot;</span> );</span><br><span class="line">		System.out.println(L.num[Location] + <span class="string">&quot;\t&quot;</span>+ L.name[Location] + <span class="string">&quot;\t\t&quot;</span> + L.score[Location]);</span><br><span class="line">		<span class="comment">//暴力清屏逻辑</span></span><br><span class="line">		Clean(L);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">//按成绩排序</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Sort_score</span><span class="params">(SqList L)</span> </span>&#123;</span><br><span class="line">		System.out.println(<span class="string">&quot;将成绩从高到低排序&quot;</span>);</span><br><span class="line">		<span class="keyword">int</span> length = L.ListLength();</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> m = <span class="number">0</span> ; m &lt; length - <span class="number">1</span>; m++) &#123;</span><br><span class="line">			<span class="comment">//循环(length-1)次</span></span><br><span class="line">			<span class="keyword">for</span>(<span class="keyword">int</span> n = <span class="number">0</span>; n &lt; length - <span class="number">1</span> - m; n ++) &#123;</span><br><span class="line">				<span class="keyword">if</span>(L.score[n] &lt; L.score[n+<span class="number">1</span>]) &#123;</span><br><span class="line">					<span class="comment">//将小的score[]前移一位</span></span><br><span class="line">					Array_displace(n, L.score);</span><br><span class="line">					<span class="comment">//将name[]同步变换</span></span><br><span class="line">					Array_displace(n, L.name);</span><br><span class="line">					<span class="comment">//将num[]同步变换</span></span><br><span class="line">					Array_displace(n, L.num);</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125; </span><br><span class="line">		<span class="comment">//暴力清屏逻辑</span></span><br><span class="line">		Clean(L);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">//显示所有学生的信息</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Print_all</span><span class="params">(SqList L)</span> </span>&#123;</span><br><span class="line">		System.out.println(<span class="string">&quot;学号\t\t\t姓名\t\t成绩&quot;</span> );</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= L.length - <span class="number">1</span>; i ++ ) &#123;</span><br><span class="line">			System.out.println(L.num[i] + <span class="string">&quot;\t\t&quot;</span>+ L.name[i] + <span class="string">&quot;\t\t&quot;</span> + L.score[i]);</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="comment">//暴力清屏逻辑</span></span><br><span class="line">		Clean(L);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">//退出</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">Exite</span><span class="params">(<span class="keyword">boolean</span> flag)</span> </span>&#123;</span><br><span class="line">		System.out.println(<span class="string">&quot;您确定要退出吗？（Y/N）&quot;</span>);</span><br><span class="line">		String exit = scan.next();</span><br><span class="line">		<span class="keyword">char</span> exit_chr = exit.charAt(<span class="number">0</span>);</span><br><span class="line">		<span class="keyword">if</span>(exit_chr == <span class="string">&#x27;Y&#x27;</span>) &#123;</span><br><span class="line">			flag = <span class="keyword">false</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">return</span> flag;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">//暴力清屏逻辑</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Clean</span><span class="params">(SqList L)</span> </span>&#123;	</span><br><span class="line">		System.out.print(<span class="string">&quot;是否进行清屏操作（Y/Others）：&quot;</span>);</span><br><span class="line">		String flag2 = scan.next();</span><br><span class="line">		<span class="keyword">char</span> flag_chr2 = flag2.charAt(<span class="number">0</span>);</span><br><span class="line">		<span class="keyword">if</span>(flag_chr2 == <span class="string">&#x27;Y&#x27;</span>) &#123;</span><br><span class="line">			L.Clean();</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">//String型数组前移一位</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Array_displace</span><span class="params">(<span class="keyword">int</span> n, String[] array )</span> </span>&#123;		</span><br><span class="line">		String temp1 = array[n];</span><br><span class="line">		array[n] = array[n+<span class="number">1</span>];</span><br><span class="line">		array[n+<span class="number">1</span>] = temp1;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">//int型数组前移一位(这里运用到了方法的重载)</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Array_displace</span><span class="params">(<span class="keyword">int</span> n, <span class="keyword">int</span>[] array )</span> </span>&#123;		</span><br><span class="line">		<span class="keyword">int</span> temp1 = array[n];</span><br><span class="line">		array[n] = array[n+<span class="number">1</span>];</span><br><span class="line">		array[n+<span class="number">1</span>] = temp1;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
<li><p><strong>线性表类：</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SqList</span>&lt;<span class="title">E</span>&gt; </span>&#123;</span><br><span class="line">	<span class="comment">//属性：</span></span><br><span class="line">	<span class="keyword">final</span> <span class="keyword">int</span> MAXSIZE = <span class="number">100</span>;</span><br><span class="line">	String[] num = <span class="keyword">new</span> String[MAXSIZE];</span><br><span class="line">	String[] name = <span class="keyword">new</span> String[MAXSIZE];</span><br><span class="line">	<span class="keyword">int</span>[] score = <span class="keyword">new</span> <span class="keyword">int</span>[MAXSIZE];</span><br><span class="line">	<span class="keyword">int</span> length;</span><br><span class="line">	<span class="comment">//方法</span></span><br><span class="line">	<span class="comment">//初始化线性表</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">InitList</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="keyword">this</span>.length = <span class="number">0</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">//插入新元素</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">ListInsert</span><span class="params">(<span class="keyword">int</span> i, String e1, String e2, <span class="keyword">int</span> e3)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">int</span> k;</span><br><span class="line">		<span class="comment">//判断线性表是否已满</span></span><br><span class="line">		<span class="keyword">if</span>(<span class="keyword">this</span>.length == MAXSIZE)</span><br><span class="line">			<span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">		<span class="comment">//判断i是否有效</span></span><br><span class="line">		<span class="keyword">if</span>(i &lt; <span class="number">1</span> || i &gt; <span class="keyword">this</span>.length + <span class="number">1</span>)</span><br><span class="line">			<span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">		<span class="keyword">if</span>(i &lt;= <span class="keyword">this</span>.length) &#123;</span><br><span class="line">			<span class="comment">//将第i个位置及其之后的元素后移一位</span></span><br><span class="line">			<span class="keyword">for</span>(k = <span class="keyword">this</span>.length-<span class="number">1</span>; k &gt;= i-<span class="number">1</span>; k--)</span><br><span class="line">		    &#123;</span><br><span class="line">		        <span class="keyword">this</span>.num[k+<span class="number">1</span>] = <span class="keyword">this</span>.num[k];</span><br><span class="line">		        <span class="keyword">this</span>.name[k+<span class="number">1</span>] = <span class="keyword">this</span>.name[k];</span><br><span class="line">		        <span class="keyword">this</span>.score[k+<span class="number">1</span>] = <span class="keyword">this</span>.score[k];</span><br><span class="line">		    &#125;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="comment">//将新元素插入</span></span><br><span class="line">		<span class="keyword">this</span>.num[i-<span class="number">1</span>] = e1;</span><br><span class="line">		<span class="keyword">this</span>.name[i-<span class="number">1</span>] = e2;</span><br><span class="line">		<span class="keyword">this</span>.score[i-<span class="number">1</span>] = e3;</span><br><span class="line">		<span class="comment">//更新线性表的长度</span></span><br><span class="line">	    <span class="keyword">this</span>.length ++; </span><br><span class="line">	    <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">//删除第i个元素</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">ListDelete</span><span class="params">(<span class="keyword">int</span> i)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">int</span> k;</span><br><span class="line">	    <span class="comment">//判断方法是否有意义</span></span><br><span class="line">	    <span class="keyword">if</span>(<span class="keyword">this</span>.length == <span class="number">0</span> || i &lt; <span class="number">1</span> || i &gt; <span class="keyword">this</span>.length)</span><br><span class="line">	        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">	    <span class="comment">//删除第i个元素，并将后面的元素前移</span></span><br><span class="line">	    <span class="keyword">for</span>(k = i; k &lt; <span class="keyword">this</span>.length; k++)</span><br><span class="line">	    &#123;</span><br><span class="line">	        <span class="keyword">this</span>.num[k-<span class="number">1</span>] = <span class="keyword">this</span>.num[k];</span><br><span class="line">	        <span class="keyword">this</span>.name[k-<span class="number">1</span>] = <span class="keyword">this</span>.name[k];</span><br><span class="line">	        <span class="keyword">this</span>.score[k-<span class="number">1</span>] = <span class="keyword">this</span>.score[k];</span><br><span class="line">	    &#125;</span><br><span class="line">	    <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">//获取线性表长度</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">ListLength</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="keyword">this</span>.length;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">//查找线性表中是否有某元素，并返回其索引(按学号查找)</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">LocationElem_num</span><span class="params">(String e)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">int</span> i;</span><br><span class="line">	    <span class="comment">//判断线性表是否为空</span></span><br><span class="line">	    <span class="keyword">if</span>(<span class="keyword">this</span>.length == <span class="number">0</span>)</span><br><span class="line">	        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">	    <span class="comment">//在线性表中寻找数据元素e，并获取其位置</span></span><br><span class="line">	    <span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; <span class="keyword">this</span>.length; i++)</span><br><span class="line">	    &#123;</span><br><span class="line">	        <span class="keyword">if</span>(<span class="keyword">this</span>.num[i].equals(e)) &#123;</span><br><span class="line">	        	<span class="keyword">return</span> (i+<span class="number">1</span>);</span><br><span class="line">	        &#125;</span><br><span class="line">	    &#125;</span><br><span class="line">	    <span class="comment">//返回数据元素e在线性表的位置</span></span><br><span class="line">	    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">//查找线性表中是否有某元素，并返回其索引(按姓名查找)</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">LocationElem_name</span><span class="params">(String e)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">int</span> i;</span><br><span class="line">	    <span class="comment">//判断线性表是否为空</span></span><br><span class="line">	    <span class="keyword">if</span>(<span class="keyword">this</span>.length == <span class="number">0</span>)</span><br><span class="line">	        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">	    <span class="comment">//在线性表中寻找数据元素e，并获取其位置</span></span><br><span class="line">	    <span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; <span class="keyword">this</span>.length; i++)</span><br><span class="line">	    &#123;</span><br><span class="line">	        <span class="keyword">if</span>(<span class="keyword">this</span>.name[i].equals(e)) &#123;</span><br><span class="line">	            <span class="keyword">return</span> (i + <span class="number">1</span>);</span><br><span class="line">	        &#125;</span><br><span class="line">	    &#125;</span><br><span class="line">	    <span class="comment">//返回数据元素e在线性表的位置</span></span><br><span class="line">	    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">//暴力清屏逻辑</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Clean</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= <span class="number">30</span>; i ++) &#123;</span><br><span class="line">			System.out.println(<span class="string">&quot;&quot;</span>);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
</ul>
<h2 id="检测运行"><a href="#检测运行" class="headerlink" title="检测运行"></a>检测运行</h2><blockquote>
<p>标准版和Plus版的运行结果都是一样的。</p>
</blockquote>
<ol>
<li><p><strong>录入初始数据：</strong></p>
<p><img src="https://i.loli.net/2021/10/15/7z3SsrUYgEpGZ1T.jpg"></p>
</li>
<li><p><strong>插入新同学信息：</strong></p>
<p><img src="https://i.loli.net/2021/10/15/TDsC3vOMr5J18Fe.jpg"></p>
</li>
<li><p><strong>显示所有学生信息：</strong></p>
<p><img src="https://i.loli.net/2021/10/15/ZDFwrhYvg7u9bjB.jpg"></p>
</li>
<li><p><strong>按成绩排序：</strong></p>
<p><img src="https://i.loli.net/2021/10/15/MEbZ4kwGKqVL9sB.jpg"></p>
</li>
<li><p><strong>显示所有学生信息：</strong></p>
<p><img src="https://i.loli.net/2021/10/15/k9v8A4W1PQtlUbw.jpg"></p>
</li>
<li><p><strong>删除：</strong></p>
<p><img src="https://i.loli.net/2021/10/15/NaWgijHI5soJyu1.jpg"></p>
</li>
<li><p><strong>显示所有学生信息：</strong></p>
<p><img src="https://i.loli.net/2021/10/15/IjpsDOwLU3PHuza.jpg"></p>
</li>
<li><p><strong>输出总人数：</strong></p>
<p><img src="https://i.loli.net/2021/10/15/jVe8clg9rJU4qwG.jpg"></p>
</li>
<li><p><strong>按学号查找：</strong></p>
<p><img src="https://i.loli.net/2021/10/15/Hxuq4NDGgUTcZft.jpg"></p>
</li>
<li><p><strong>按姓名查找：</strong></p>
<p><img src="https://i.loli.net/2021/10/15/BHG8AQ6fqUPW1jO.jpg"></p>
</li>
<li><p><strong>退出：</strong></p>
<p><img src="https://i.loli.net/2021/10/15/rdfhy9mGPIMe1cJ.jpg"></p>
</li>
</ol>
<h2 id="代码自评："><a href="#代码自评：" class="headerlink" title="代码自评："></a>代码自评：</h2><ol>
<li><p><strong>标准版和Plus版哪个好？</strong></p>
<p>首先声明，之所以命名为Plus版和标准版并不是因为面向对象比面向过程好，单纯只是因为我是先写的面向过程，后写的面向对象，先标准后Plus算是我的个人习惯。</p>
<p>运行效率上两个差不多，编写难度看个人情况，哪个用的顺手哪个就容易（我写Plus比较快），代码量上Plus还要多上一丢丢（面向对象搭框架比较多）。总体评价标准版要略胜一筹，也就是面型过程要比面向对象强一点。</p>
<p><strong>这个项目用面向过程更好，为什么我写了标准版还要再写个Plus版本的呢？</strong></p>
<p>这个主要还是因为我主要学的是Java，以后肯定是要用面向对象的。但是和面向过程相比，面向对象再千行以上才能有较为明显的优势。然而在大学期间，基本不太可能经常接触千行量级的代码，难道就因为这个一直不用面向对象吗？</p>
<p>很显然不可能，所以在200行以上级别的代码，我都会尝试使用面向对象的思想设计程序。</p>
<p>*该评价很多观点的详细情况来自我的一篇博客<a href="https://dengxiayouhun.github.io/2021/10/06/Java%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E4%B9%8B%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E4%B8%8E%E9%9D%A2%E5%90%91%E8%BF%87%E7%A8%8B/">Java面向对象之面向对象的理解</a>,有兴趣的可以跳转过去看一下。</p>
</li>
<li><p><strong>代码评价：</strong></p>
<ul>
<li><p><strong>总体评价：</strong></p>
<p>比较满意，遗憾很多。</p>
<p>比较满意是因为总体来说大方向上做的都挺好，无论是框架搭建，还是代码逻辑设计都完成得很不错，并且收获不小。</p>
<p>遗憾的是由于几个方面的原因，导致这两个程序其实还有着不少的缺陷。</p>
</li>
<li><p><strong>遗憾：</strong></p>
<ol>
<li><p><strong>知识储备不足：</strong></p>
<p>由于我是不准备考研的，那么我就必须在技术上站得住脚，再加上我选的就是Java后端开发这条路，所以，我在Java底层和实践上钻的比较深。钻的比较深就意味着费时间，学得慢。所以我实际上面向对象只学了很少一部分，类及其成员只学了方法和属性，面向对象的特性只有大概的了解，关键字几乎一个没学。</p>
<p>这就导致这两个程序在很多细节上极其不完善，比如：构造器，private等我都没用（不是不会用，只是不熟练，索性就直接不用了——小声辩解）</p>
<p>也没办法，目前只能做到这一步。</p>
</li>
<li><p><strong>时间耗不起：</strong></p>
<p>其实在我的想法里，还要再加上很多保护机制，以防止用户乱输入导致程序出错。这一点其实挺重要的，但是最后我还是没弄。主要原因就是没时间。</p>
<p>保护机制和其他一些没加上的细节都没啥技术含量而且需要各种调试，十分的浪费时间。再加上本身我是特别缺时间的，前面也说了，我的知识储备还是很欠缺的，时间很紧张。花费大量时间到这些不痛不痒的事情上，实在有些得不偿失。</p>
<p>基于以上种种原因，我还是放弃了为程序增添一些细节上的东西。</p>
</li>
</ol>
<p>所以说挺遗憾的，但也没办法，成年人的世界不能像小孩子那样任性地说“我全都要”。有时候该舍弃就得舍弃，跑得越快损失越小。</p>
<p>(不知不觉，我也快20岁了，19岁和20岁，感觉明显不一样了)</p>
</li>
</ul>
</li>
</ol>
<h2 id="Plus-版"><a href="#Plus-版" class="headerlink" title="Plus+版:"></a>Plus+版:</h2><ul>
<li><p><strong>Main方法类：</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">package</span> student_achievement_management_system_plus;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"><span class="meta">@SuppressWarnings(&quot;rawtypes&quot;)</span> </span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Student_Achievement_Management_System_Plus</span> </span>&#123;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">		Scanner scan = <span class="keyword">new</span> Scanner(System.in); </span><br><span class="line">		String selection;<span class="comment">//声明用户选项</span></span><br><span class="line">		SqList student = <span class="keyword">new</span> SqList();<span class="comment">//声明线性表</span></span><br><span class="line">		<span class="keyword">boolean</span> flag = <span class="keyword">true</span>;<span class="comment">//声明并初始化while语句的控制条件</span></span><br><span class="line">		<span class="keyword">while</span>(flag) &#123;</span><br><span class="line">			<span class="comment">//输出控制面板</span></span><br><span class="line">			Utility.Print_control_panel();</span><br><span class="line">			<span class="comment">//获得用户选项</span></span><br><span class="line">			selection = scan.next();</span><br><span class="line">			<span class="comment">//加一个输入保护功能</span></span><br><span class="line">			selection = Utility.Print_protect(selection);</span><br><span class="line">			<span class="comment">//9大功能模块</span></span><br><span class="line">			<span class="keyword">switch</span>(selection) &#123;</span><br><span class="line">				<span class="comment">//创建线性表</span></span><br><span class="line">				<span class="keyword">case</span> <span class="string">&quot;1&quot;</span>:</span><br><span class="line">					student.InitList();<span class="comment">//初始化线性表</span></span><br><span class="line">					<span class="comment">//获取新同学插入位置、学号、姓名、成绩信息</span></span><br><span class="line">					Utility.Check_in_Information(student);</span><br><span class="line">					<span class="keyword">break</span>;</span><br><span class="line">				<span class="comment">//插入新同学信息</span></span><br><span class="line">				<span class="keyword">case</span> <span class="string">&quot;2&quot;</span>:</span><br><span class="line">					Utility.Insert_new_information(student);</span><br><span class="line">					<span class="keyword">break</span>;</span><br><span class="line">				<span class="comment">//删除</span></span><br><span class="line">				<span class="keyword">case</span> <span class="string">&quot;3&quot;</span>:</span><br><span class="line">					Utility.Delet_information(student);</span><br><span class="line">					<span class="keyword">break</span>;</span><br><span class="line">				<span class="comment">//总人数</span></span><br><span class="line">				<span class="keyword">case</span> <span class="string">&quot;4&quot;</span>:</span><br><span class="line">					Utility.Length(student);</span><br><span class="line">					<span class="keyword">break</span>;</span><br><span class="line">				<span class="comment">//按学号查找</span></span><br><span class="line">				<span class="keyword">case</span> <span class="string">&quot;5&quot;</span>:</span><br><span class="line">					Utility.Location_num(student);</span><br><span class="line">					<span class="keyword">break</span>;</span><br><span class="line">				<span class="comment">//按姓名查找</span></span><br><span class="line">				<span class="keyword">case</span> <span class="string">&quot;6&quot;</span>:</span><br><span class="line">					Utility.Location_name(student);</span><br><span class="line">					<span class="keyword">break</span>;</span><br><span class="line">				<span class="comment">//成绩排序</span></span><br><span class="line">				<span class="keyword">case</span> <span class="string">&quot;7&quot;</span>:</span><br><span class="line">					Utility.Sort_score(student);</span><br><span class="line">					<span class="keyword">break</span>;</span><br><span class="line">				<span class="comment">//显示所有学生信息</span></span><br><span class="line">				<span class="keyword">case</span> <span class="string">&quot;8&quot;</span>:</span><br><span class="line">					Utility.Print_all(student);</span><br><span class="line">					<span class="keyword">break</span>;</span><br><span class="line">				<span class="comment">//退出</span></span><br><span class="line">				<span class="keyword">case</span> <span class="string">&quot;9&quot;</span>:</span><br><span class="line">					flag = Utility.Exite(flag);</span><br><span class="line">					<span class="keyword">break</span>;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		scan.close();</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
<li><p><strong>Utility类：</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> student_achievement_management_system_plus;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"><span class="meta">@SuppressWarnings(&quot;rawtypes&quot;)</span> </span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Utility</span> </span>&#123;</span><br><span class="line">	<span class="keyword">static</span> Scanner scan = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">	<span class="comment">//输出控制面板</span></span><br><span class="line">	<span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Print_control_panel</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		System.out.println(<span class="string">&quot;\t\t1---录入初始数据&quot;</span>);</span><br><span class="line">		System.out.println(<span class="string">&quot;\t\t2---插入新同学信息&quot;</span>);</span><br><span class="line">		System.out.println(<span class="string">&quot;\t\t3---删除&quot;</span>);</span><br><span class="line">		System.out.println(<span class="string">&quot;\t\t4---输出总人数&quot;</span>);</span><br><span class="line">		System.out.println(<span class="string">&quot;\t\t5---按学号查找&quot;</span>);</span><br><span class="line">		System.out.println(<span class="string">&quot;\t\t6---按姓名查找&quot;</span>);</span><br><span class="line">		System.out.println(<span class="string">&quot;\t\t7---按成绩排序&quot;</span>);</span><br><span class="line">		System.out.println(<span class="string">&quot;\t\t8---显示所有学生信息&quot;</span>);</span><br><span class="line">		System.out.println(<span class="string">&quot;\t\t9---退出&quot;</span>);</span><br><span class="line">		System.out.print(<span class="string">&quot;请选择功能：&quot;</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">//输入保护功能</span></span><br><span class="line">	<span class="function"><span class="keyword">static</span>  String <span class="title">Print_protect</span><span class="params">(String e)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">char</span> chr = e.charAt(<span class="number">0</span>);</span><br><span class="line">		<span class="keyword">while</span>(chr &gt; <span class="number">49</span> &amp;&amp; chr &gt; <span class="number">57</span>) &#123;</span><br><span class="line">			System.out.print(<span class="string">&quot;选择错误，请重新输入：&quot;</span>);</span><br><span class="line">			e = scan.next();</span><br><span class="line">			chr = e.charAt(<span class="number">0</span>);</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">return</span> e;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">//输入线性表初始信息	</span></span><br><span class="line">	<span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Check_in_Information</span><span class="params">(SqList L)</span> </span>&#123;</span><br><span class="line">		System.out.println(<span class="string">&quot;请输入学生成绩，当前学号为#时结束\n&quot;</span>);</span><br><span class="line">		<span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line">		<span class="keyword">while</span>(<span class="keyword">true</span>) &#123;	</span><br><span class="line">			System.out.print(<span class="string">&quot;请输入学号：&quot;</span>);</span><br><span class="line">			L.setNum(i, scan.next());</span><br><span class="line">			<span class="comment">//设置结束循环的逻辑</span></span><br><span class="line">			<span class="keyword">char</span> num_flag = L.getNum(i).charAt(<span class="number">0</span>);</span><br><span class="line">			<span class="keyword">if</span>(num_flag == <span class="string">&#x27;#&#x27;</span>) &#123;</span><br><span class="line">				L.Clean();<span class="comment">//暴力清屏逻辑</span></span><br><span class="line">				<span class="keyword">break</span>;</span><br><span class="line">			&#125;</span><br><span class="line">			System.out.print(<span class="string">&quot;请输入姓名：&quot;</span>);</span><br><span class="line">			L.setName(i, scan.next());</span><br><span class="line">			System.out.print(<span class="string">&quot;请输入成绩：&quot;</span>);</span><br><span class="line">			L.setScore(i, scan.nextInt());</span><br><span class="line">			L.setLength(<span class="number">1</span>);</span><br><span class="line">			i ++;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">//插入新同学信息</span></span><br><span class="line">	<span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Insert_new_information</span><span class="params">(SqList L)</span> </span>&#123;</span><br><span class="line">		<span class="comment">//获取新同学插入位置、学号、姓名、成绩信息</span></span><br><span class="line">		System.out.print(<span class="string">&quot;请输入插入位置：&quot;</span>);</span><br><span class="line">		<span class="keyword">int</span> location = scan.nextInt();</span><br><span class="line">		System.out.print(<span class="string">&quot;请输入学号：&quot;</span>);</span><br><span class="line">		String num = scan.next();</span><br><span class="line">		System.out.print(<span class="string">&quot;请输入姓名：&quot;</span>);</span><br><span class="line">		String name = scan.next();</span><br><span class="line">		System.out.print(<span class="string">&quot;请输入成绩：&quot;</span>);</span><br><span class="line">		<span class="keyword">int</span> score = scan.nextInt();</span><br><span class="line">		<span class="comment">//将新同学的信息插入线性表</span></span><br><span class="line">		L.ListInsert(location, num, name, score);</span><br><span class="line">		<span class="comment">//暴力清屏逻辑</span></span><br><span class="line">		Clean(L);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">//删除学生信息</span></span><br><span class="line">	<span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Delet_information</span><span class="params">(SqList L)</span> </span>&#123;</span><br><span class="line">		System.out.print(<span class="string">&quot;请输入删除的位置：&quot;</span>);</span><br><span class="line">		<span class="keyword">int</span> location = scan.nextInt();</span><br><span class="line">		L.ListDelete(location);</span><br><span class="line">		L.setLength(-<span class="number">1</span>);<span class="comment">//线性表长度减一</span></span><br><span class="line">		<span class="comment">//暴力清屏逻辑</span></span><br><span class="line">		Clean(L);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">//总人数</span></span><br><span class="line">	<span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Length</span><span class="params">(SqList L)</span> </span>&#123;</span><br><span class="line">		System.out.println(<span class="string">&quot;学生总数为：&quot;</span> + L.ListLength());</span><br><span class="line">		<span class="comment">//暴力清屏逻辑</span></span><br><span class="line">		Clean(L);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">//按学号查找</span></span><br><span class="line">	<span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Location_num</span><span class="params">(SqList L)</span> </span>&#123;</span><br><span class="line">		System.out.print(<span class="string">&quot;请输入查找学生的学号：&quot;</span>);</span><br><span class="line">		String num = scan.next();</span><br><span class="line">		<span class="keyword">int</span> Location = L.LocationElem_num(num) - <span class="number">1</span>;</span><br><span class="line">		System.out.println(<span class="string">&quot;查找到学生信息如下：&quot;</span>);</span><br><span class="line">		System.out.println(<span class="string">&quot;学号\t\t姓名\t\t成绩&quot;</span> );</span><br><span class="line">		System.out.println(L.getNum(Location) + <span class="string">&quot;\t&quot;</span>+ L.getName(Location) + <span class="string">&quot;\t\t&quot;</span> + L.getScore(Location));</span><br><span class="line">		<span class="comment">//暴力清屏逻辑</span></span><br><span class="line">		Clean(L);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">//按姓名查找</span></span><br><span class="line">	<span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Location_name</span><span class="params">(SqList L)</span> </span>&#123;</span><br><span class="line">		System.out.print(<span class="string">&quot;请输入查找学生的姓名：&quot;</span>);</span><br><span class="line">		String name = scan.next();</span><br><span class="line">		<span class="keyword">int</span> Location = L.LocationElem_name(name) - <span class="number">1</span>;</span><br><span class="line">		System.out.println(<span class="string">&quot;查找到学生信息如下：&quot;</span>);</span><br><span class="line">		System.out.println(<span class="string">&quot;学号\t\t姓名\t\t成绩&quot;</span> );</span><br><span class="line">		System.out.println(L.getNum(Location) + <span class="string">&quot;\t&quot;</span>+ L.getName(Location) + <span class="string">&quot;\t\t&quot;</span> + L.getScore(Location));</span><br><span class="line">		<span class="comment">//暴力清屏逻辑</span></span><br><span class="line">		Clean(L);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">//按成绩排序</span></span><br><span class="line">	<span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Sort_score</span><span class="params">(SqList L)</span> </span>&#123;</span><br><span class="line">		System.out.println(<span class="string">&quot;将成绩从高到低排序&quot;</span>);</span><br><span class="line">		L.Sort_high();</span><br><span class="line">		<span class="comment">//暴力清屏逻辑</span></span><br><span class="line">		Clean(L);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">//显示所有学生的信息</span></span><br><span class="line">	<span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Print_all</span><span class="params">(SqList L)</span> </span>&#123;</span><br><span class="line">		System.out.println(<span class="string">&quot;学号\t\t\t姓名\t\t成绩&quot;</span> );</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= L.getLength() - <span class="number">1</span>; i ++ ) &#123;</span><br><span class="line">			System.out.println(L.getNum(i) + <span class="string">&quot;\t\t&quot;</span>+ L.getName(i) + <span class="string">&quot;\t\t&quot;</span> + L.getScore(i));</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="comment">//暴力清屏逻辑</span></span><br><span class="line">		Clean(L);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">//退出</span></span><br><span class="line">	<span class="function"><span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">Exite</span><span class="params">(<span class="keyword">boolean</span> flag)</span> </span>&#123;</span><br><span class="line">		System.out.println(<span class="string">&quot;您确定要退出吗？（Y/N）&quot;</span>);</span><br><span class="line">		String exit = scan.next();</span><br><span class="line">		<span class="keyword">char</span> exit_chr = exit.charAt(<span class="number">0</span>);</span><br><span class="line">		<span class="keyword">if</span>(exit_chr == <span class="string">&#x27;Y&#x27;</span>) &#123;</span><br><span class="line">			flag = <span class="keyword">false</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">return</span> flag;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">//暴力清屏逻辑</span></span><br><span class="line">	<span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Clean</span><span class="params">(SqList L)</span> </span>&#123;	</span><br><span class="line">		System.out.print(<span class="string">&quot;是否进行清屏操作（Y/Others）：&quot;</span>);</span><br><span class="line">		String flag2 = scan.next();</span><br><span class="line">		<span class="keyword">char</span> flag_chr2 = flag2.charAt(<span class="number">0</span>);</span><br><span class="line">		<span class="keyword">if</span>(flag_chr2 == <span class="string">&#x27;Y&#x27;</span>) &#123;</span><br><span class="line">			L.Clean();</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
<li><p><strong>SqList类：</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> student_achievement_management_system_plus;</span><br><span class="line"></span><br><span class="line"><span class="comment">//线性表结构</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SqList</span>&lt;<span class="title">E</span>&gt; </span>&#123;</span><br><span class="line">	<span class="comment">//属性：</span></span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">int</span> MAXSIZE = <span class="number">100</span>;</span><br><span class="line">	<span class="keyword">private</span> String[] num = <span class="keyword">new</span> String[MAXSIZE];</span><br><span class="line">	<span class="keyword">private</span> String[] name = <span class="keyword">new</span> String[MAXSIZE];</span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">int</span>[] score = <span class="keyword">new</span> <span class="keyword">int</span>[MAXSIZE];</span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">int</span> length;</span><br><span class="line">	<span class="comment">//方法</span></span><br><span class="line">	<span class="comment">//初始化线性表</span></span><br><span class="line">	<span class="function"><span class="keyword">void</span> <span class="title">InitList</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="keyword">this</span>.length = <span class="number">0</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">//获取属性的值</span></span><br><span class="line">	<span class="function">String <span class="title">getNum</span><span class="params">(<span class="keyword">int</span> i)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> num[i];</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="function">String <span class="title">getName</span><span class="params">(<span class="keyword">int</span> i)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> name[i];</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="function"><span class="keyword">int</span> <span class="title">getScore</span><span class="params">(<span class="keyword">int</span> i)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> score[i];</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="function"><span class="keyword">int</span> <span class="title">getLength</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> length;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">//设置属性的值</span></span><br><span class="line">	<span class="function"><span class="keyword">void</span> <span class="title">setNum</span><span class="params">(<span class="keyword">int</span> i, String e)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">this</span>.num[i] = e;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="function"><span class="keyword">void</span> <span class="title">setName</span><span class="params">(<span class="keyword">int</span> i, String e)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">this</span>.name[i] = e;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="function"><span class="keyword">void</span> <span class="title">setScore</span><span class="params">(<span class="keyword">int</span> i, <span class="keyword">int</span> e)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">this</span>.score[i] = e;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="function"><span class="keyword">void</span> <span class="title">setLength</span><span class="params">(<span class="keyword">int</span> e)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">this</span>.length = length + e;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">//插入新元素</span></span><br><span class="line">	<span class="function"><span class="keyword">boolean</span> <span class="title">ListInsert</span><span class="params">(<span class="keyword">int</span> i, String e1, String e2, <span class="keyword">int</span> e3)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">int</span> k;</span><br><span class="line">		<span class="comment">//判断线性表是否已满</span></span><br><span class="line">		<span class="keyword">if</span>(<span class="keyword">this</span>.length == MAXSIZE)</span><br><span class="line">			<span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">		<span class="comment">//判断i是否有效</span></span><br><span class="line">		<span class="keyword">if</span>(i &lt; <span class="number">1</span> || i &gt; <span class="keyword">this</span>.length + <span class="number">1</span>)</span><br><span class="line">			<span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">		<span class="keyword">if</span>(i &lt;= <span class="keyword">this</span>.length) &#123;</span><br><span class="line">			<span class="comment">//将第i个位置及其之后的元素后移一位</span></span><br><span class="line">			<span class="keyword">for</span>(k = <span class="keyword">this</span>.length-<span class="number">1</span>; k &gt;= i-<span class="number">1</span>; k--)</span><br><span class="line">		    &#123;</span><br><span class="line">		        <span class="keyword">this</span>.num[k+<span class="number">1</span>] = <span class="keyword">this</span>.num[k];</span><br><span class="line">		        <span class="keyword">this</span>.name[k+<span class="number">1</span>] = <span class="keyword">this</span>.name[k];</span><br><span class="line">		        <span class="keyword">this</span>.score[k+<span class="number">1</span>] = <span class="keyword">this</span>.score[k];</span><br><span class="line">		    &#125;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="comment">//将新元素插入</span></span><br><span class="line">		<span class="keyword">this</span>.num[i-<span class="number">1</span>] = e1;</span><br><span class="line">		<span class="keyword">this</span>.name[i-<span class="number">1</span>] = e2;</span><br><span class="line">		<span class="keyword">this</span>.score[i-<span class="number">1</span>] = e3;</span><br><span class="line">		<span class="comment">//更新线性表的长度</span></span><br><span class="line">	    <span class="keyword">this</span>.length ++; </span><br><span class="line">	    <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">//删除第i个元素</span></span><br><span class="line">	<span class="function"><span class="keyword">boolean</span> <span class="title">ListDelete</span><span class="params">(<span class="keyword">int</span> i)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">int</span> k;</span><br><span class="line">	    <span class="comment">//判断方法是否有意义</span></span><br><span class="line">	    <span class="keyword">if</span>(<span class="keyword">this</span>.length == <span class="number">0</span> || i &lt; <span class="number">1</span> || i &gt; <span class="keyword">this</span>.length)</span><br><span class="line">	        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">	    <span class="comment">//删除第i个元素，并将后面的元素前移</span></span><br><span class="line">	    <span class="keyword">for</span>(k = i; k &lt; <span class="keyword">this</span>.length; k++)</span><br><span class="line">	    &#123;</span><br><span class="line">	        <span class="keyword">this</span>.num[k-<span class="number">1</span>] = <span class="keyword">this</span>.num[k];</span><br><span class="line">	        <span class="keyword">this</span>.name[k-<span class="number">1</span>] = <span class="keyword">this</span>.name[k];</span><br><span class="line">	        <span class="keyword">this</span>.score[k-<span class="number">1</span>] = <span class="keyword">this</span>.score[k];</span><br><span class="line">	    &#125;</span><br><span class="line">	    <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">//获取线性表长度</span></span><br><span class="line">	<span class="function"><span class="keyword">int</span> <span class="title">ListLength</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="keyword">this</span>.length;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">//查找线性表中是否有某元素，并返回其索引(按学号查找)</span></span><br><span class="line">	<span class="function"><span class="keyword">int</span> <span class="title">LocationElem_num</span><span class="params">(String e)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">int</span> i;</span><br><span class="line">	    <span class="comment">//判断线性表是否为空</span></span><br><span class="line">	    <span class="keyword">if</span>(<span class="keyword">this</span>.length == <span class="number">0</span>)</span><br><span class="line">	        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">	    <span class="comment">//在线性表中寻找数据元素e，并获取其位置</span></span><br><span class="line">	    <span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; <span class="keyword">this</span>.length; i++)</span><br><span class="line">	    &#123;</span><br><span class="line">	        <span class="keyword">if</span>(<span class="keyword">this</span>.num[i].equals(e)) &#123;</span><br><span class="line">	        	<span class="keyword">return</span> (i+<span class="number">1</span>);</span><br><span class="line">	        &#125;</span><br><span class="line">	    &#125;</span><br><span class="line">	    <span class="comment">//返回数据元素e在线性表的位置</span></span><br><span class="line">	    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">//查找线性表中是否有某元素，并返回其索引(按姓名查找)</span></span><br><span class="line">	<span class="function"><span class="keyword">int</span> <span class="title">LocationElem_name</span><span class="params">(String e)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">int</span> i;</span><br><span class="line">	    <span class="comment">//判断线性表是否为空</span></span><br><span class="line">	    <span class="keyword">if</span>(<span class="keyword">this</span>.length == <span class="number">0</span>)</span><br><span class="line">	        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">	    <span class="comment">//在线性表中寻找数据元素e，并获取其位置</span></span><br><span class="line">	    <span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; <span class="keyword">this</span>.length; i++)</span><br><span class="line">	    &#123;	</span><br><span class="line">	        <span class="keyword">if</span>(<span class="keyword">this</span>.name[i].contentEquals(e)) &#123;</span><br><span class="line">	            <span class="keyword">return</span> (i + <span class="number">1</span>);</span><br><span class="line">	        &#125;</span><br><span class="line">	    &#125;</span><br><span class="line">	    <span class="comment">//返回数据元素e在线性表的位置</span></span><br><span class="line">	    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">//将成绩从高到低进行排序</span></span><br><span class="line">	<span class="function"><span class="keyword">void</span> <span class="title">Sort_high</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="keyword">int</span> length = <span class="keyword">this</span>.ListLength();</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> m = <span class="number">0</span> ; m &lt; length - <span class="number">1</span>; m++) &#123;</span><br><span class="line">			<span class="comment">//循环(length-1)次</span></span><br><span class="line">			<span class="keyword">for</span>(<span class="keyword">int</span> n = <span class="number">0</span>; n &lt; length - <span class="number">1</span> - m; n ++) &#123;</span><br><span class="line">				<span class="keyword">if</span>(<span class="keyword">this</span>.score[n] &lt; <span class="keyword">this</span>.score[n+<span class="number">1</span>]) &#123;</span><br><span class="line">					<span class="comment">//将小的score[]前移一位</span></span><br><span class="line">					Array_displace(n, <span class="keyword">this</span>.score);</span><br><span class="line">					<span class="comment">//将name[]同步变换</span></span><br><span class="line">					Array_displace(n, <span class="keyword">this</span>.name);</span><br><span class="line">					<span class="comment">//将num[]同步变换</span></span><br><span class="line">					Array_displace(n, <span class="keyword">this</span>.num);</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125; </span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">//暴力清屏逻辑</span></span><br><span class="line">	<span class="function"><span class="keyword">void</span> <span class="title">Clean</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= <span class="number">30</span>; i ++) &#123;</span><br><span class="line">			System.out.println(<span class="string">&quot;&quot;</span>);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">//String型数组前移一位</span></span><br><span class="line">	<span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Array_displace</span><span class="params">(<span class="keyword">int</span> n, String[] array )</span> </span>&#123;		</span><br><span class="line">		String temp1 = array[n];</span><br><span class="line">		array[n] = array[n+<span class="number">1</span>];</span><br><span class="line">		array[n+<span class="number">1</span>] = temp1;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">//int型数组前移一位(这里运用到了方法的重载)</span></span><br><span class="line">	<span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Array_displace</span><span class="params">(<span class="keyword">int</span> n, <span class="keyword">int</span>[] array )</span> </span>&#123;		</span><br><span class="line">		<span class="keyword">int</span> temp1 = array[n];</span><br><span class="line">		array[n] = array[n+<span class="number">1</span>];</span><br><span class="line">		array[n+<span class="number">1</span>] = temp1;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
</ul>
<h2 id="单链表版："><a href="#单链表版：" class="headerlink" title="单链表版："></a>单链表版：</h2><ul>
<li><p><strong>Main方法类：</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> view.ui;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"><span class="keyword">import</span> model.bean.*;</span><br><span class="line"><span class="keyword">import</span> controller.service.*;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">		Scanner scan = <span class="keyword">new</span> Scanner(System.in); </span><br><span class="line">		String selection;<span class="comment">//声明用户选项</span></span><br><span class="line">		LinkList student = <span class="keyword">new</span> LinkList();<span class="comment">//声明线性表</span></span><br><span class="line">		<span class="keyword">boolean</span> flag = <span class="keyword">true</span>;<span class="comment">//声明并初始化while语句的控制条件</span></span><br><span class="line">		<span class="keyword">while</span>(flag) &#123;</span><br><span class="line">			<span class="comment">//输出控制面板</span></span><br><span class="line">			Utility.Print_control_panel();</span><br><span class="line">			<span class="comment">//获得用户选项</span></span><br><span class="line">			selection = scan.next();</span><br><span class="line">			<span class="comment">//加一个输入保护功能</span></span><br><span class="line">			selection = Utility.Print_protect(selection);</span><br><span class="line">			<span class="comment">//9大功能模块</span></span><br><span class="line">			<span class="keyword">switch</span>(selection) &#123;</span><br><span class="line">				<span class="comment">//创建线性表</span></span><br><span class="line">				<span class="keyword">case</span> <span class="string">&quot;1&quot;</span>:</span><br><span class="line">					<span class="comment">//获取新同学插入位置、学号、姓名、成绩信息</span></span><br><span class="line">					Utility.Check_in_Information(student);</span><br><span class="line">					<span class="keyword">break</span>;</span><br><span class="line">				<span class="comment">//插入新同学信息</span></span><br><span class="line">				<span class="keyword">case</span> <span class="string">&quot;2&quot;</span>:</span><br><span class="line">					Utility.Insert_new_information(student);</span><br><span class="line">					<span class="keyword">break</span>;</span><br><span class="line">				<span class="comment">//删除</span></span><br><span class="line">				<span class="keyword">case</span> <span class="string">&quot;3&quot;</span>:</span><br><span class="line">					Utility.Delet_information(student);</span><br><span class="line">					<span class="keyword">break</span>;</span><br><span class="line">				<span class="comment">//总人数</span></span><br><span class="line">				<span class="keyword">case</span> <span class="string">&quot;4&quot;</span>:</span><br><span class="line">					Utility.Length(student);</span><br><span class="line">					<span class="keyword">break</span>;</span><br><span class="line">				<span class="comment">//按学号查找</span></span><br><span class="line">				<span class="keyword">case</span> <span class="string">&quot;5&quot;</span>:</span><br><span class="line">					Utility.Location_num(student);</span><br><span class="line">					<span class="keyword">break</span>;</span><br><span class="line">				<span class="comment">//按姓名查找</span></span><br><span class="line">				<span class="keyword">case</span> <span class="string">&quot;6&quot;</span>:</span><br><span class="line">					Utility.Location_name(student);</span><br><span class="line">					<span class="keyword">break</span>;</span><br><span class="line">				<span class="comment">//成绩排序</span></span><br><span class="line">				<span class="keyword">case</span> <span class="string">&quot;7&quot;</span>:</span><br><span class="line">					Utility.Sort_score(student);</span><br><span class="line">					<span class="keyword">break</span>;</span><br><span class="line">				<span class="comment">//显示所有学生信息</span></span><br><span class="line">				<span class="keyword">case</span> <span class="string">&quot;8&quot;</span>:</span><br><span class="line">					Utility.Print_all(student);</span><br><span class="line">					<span class="keyword">break</span>;</span><br><span class="line">				<span class="comment">//退出</span></span><br><span class="line">				<span class="keyword">case</span> <span class="string">&quot;9&quot;</span>:</span><br><span class="line">					flag = Utility.Exite(flag);</span><br><span class="line">					<span class="keyword">break</span>;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		scan.close();</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></li>
<li><p><strong>Utility类：</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> controller.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"><span class="keyword">import</span> model.bean.*;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Utility</span> </span>&#123;</span><br><span class="line">	<span class="keyword">static</span> Scanner scan = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">	<span class="comment">//输出控制面板</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Print_control_panel</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		System.out.println(<span class="string">&quot;\t\t1---录入初始数据&quot;</span>);</span><br><span class="line">		System.out.println(<span class="string">&quot;\t\t2---插入新同学信息&quot;</span>);</span><br><span class="line">		System.out.println(<span class="string">&quot;\t\t3---删除&quot;</span>);</span><br><span class="line">		System.out.println(<span class="string">&quot;\t\t4---输出总人数&quot;</span>);</span><br><span class="line">		System.out.println(<span class="string">&quot;\t\t5---按学号查找&quot;</span>);</span><br><span class="line">		System.out.println(<span class="string">&quot;\t\t6---按姓名查找&quot;</span>);</span><br><span class="line">		System.out.println(<span class="string">&quot;\t\t7---按成绩排序&quot;</span>);</span><br><span class="line">		System.out.println(<span class="string">&quot;\t\t8---显示所有学生信息&quot;</span>);</span><br><span class="line">		System.out.println(<span class="string">&quot;\t\t9---退出&quot;</span>);</span><br><span class="line">		System.out.print(<span class="string">&quot;请选择功能：&quot;</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">//输入保护功能</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span>  String <span class="title">Print_protect</span><span class="params">(String e)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">char</span> chr = e.charAt(<span class="number">0</span>);</span><br><span class="line">		<span class="keyword">while</span>(chr &gt; <span class="number">49</span> &amp;&amp; chr &gt; <span class="number">57</span>) &#123;</span><br><span class="line">			System.out.print(<span class="string">&quot;选择错误，请重新输入：&quot;</span>);</span><br><span class="line">			e = scan.next();</span><br><span class="line">			chr = e.charAt(<span class="number">0</span>);</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">return</span> e;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">//输入线性表初始信息	</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Check_in_Information</span><span class="params">(LinkList L)</span> </span>&#123;</span><br><span class="line">		System.out.println(<span class="string">&quot;请输入学生成绩，当前学号为#时结束\n&quot;</span>);</span><br><span class="line">		String num;</span><br><span class="line">		String name;</span><br><span class="line">		<span class="keyword">int</span> score;</span><br><span class="line">		<span class="keyword">while</span>(<span class="keyword">true</span>) &#123;	</span><br><span class="line">			System.out.print(<span class="string">&quot;请输入学号：&quot;</span>);</span><br><span class="line">			num = scan.next();</span><br><span class="line">			<span class="comment">//设置结束循环的逻辑</span></span><br><span class="line">			<span class="keyword">char</span> num_flag = num.charAt(<span class="number">0</span>);</span><br><span class="line">			<span class="keyword">if</span>(num_flag == <span class="string">&#x27;#&#x27;</span>) &#123;</span><br><span class="line">				L.Clean();<span class="comment">//暴力清屏逻辑</span></span><br><span class="line">				<span class="keyword">break</span>;</span><br><span class="line">			&#125;</span><br><span class="line">			System.out.print(<span class="string">&quot;请输入姓名：&quot;</span>);</span><br><span class="line">			name = scan.next();</span><br><span class="line">			System.out.print(<span class="string">&quot;请输入成绩：&quot;</span>);</span><br><span class="line">			score = scan.nextInt();</span><br><span class="line">			L.add( num, name, score);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">//插入新同学信息</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Insert_new_information</span><span class="params">(LinkList L)</span> </span>&#123;</span><br><span class="line">		<span class="comment">//获取新同学插入位置、学号、姓名、成绩信息</span></span><br><span class="line">		System.out.print(<span class="string">&quot;请输入插入位置：&quot;</span>);</span><br><span class="line">		<span class="keyword">int</span> location = scan.nextInt();</span><br><span class="line">		System.out.print(<span class="string">&quot;请输入学号：&quot;</span>);</span><br><span class="line">		String num = scan.next();</span><br><span class="line">		System.out.print(<span class="string">&quot;请输入姓名：&quot;</span>);</span><br><span class="line">		String name = scan.next();</span><br><span class="line">		System.out.print(<span class="string">&quot;请输入成绩：&quot;</span>);</span><br><span class="line">		<span class="keyword">int</span> score = scan.nextInt();</span><br><span class="line">		<span class="comment">//将新同学的信息插入线性表</span></span><br><span class="line">		L.ListInsert(location, num, name, score);</span><br><span class="line">		<span class="comment">//暴力清屏逻辑</span></span><br><span class="line">		Clean(L);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">//删除学生信息</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Delet_information</span><span class="params">(LinkList L)</span> </span>&#123;</span><br><span class="line">		System.out.print(<span class="string">&quot;请输入删除的位置：&quot;</span>);</span><br><span class="line">		<span class="keyword">int</span> location = scan.nextInt();</span><br><span class="line">		L.ListDelete(location);</span><br><span class="line">		<span class="comment">//暴力清屏逻辑</span></span><br><span class="line">		Clean(L);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">//总人数</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Length</span><span class="params">(LinkList L)</span> </span>&#123;</span><br><span class="line">		System.out.println(<span class="string">&quot;学生总数为：&quot;</span> + L.Length());</span><br><span class="line">		<span class="comment">//暴力清屏逻辑</span></span><br><span class="line">		Clean(L);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">//按学号查找</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Location_num</span><span class="params">(LinkList L)</span> </span>&#123;</span><br><span class="line">		System.out.print(<span class="string">&quot;请输入查找学生的学号：&quot;</span>);</span><br><span class="line">		String num = scan.next();</span><br><span class="line">		<span class="keyword">int</span> Location = L.LocateElem_num(num);</span><br><span class="line">		Node node_current = L.GetElem(Location);</span><br><span class="line">		System.out.println(Location + <span class="string">&quot;查找到学生信息如下：&quot;</span>);</span><br><span class="line">		System.out.println(<span class="string">&quot;学号\t\t姓名\t\t成绩&quot;</span> );</span><br><span class="line">		System.out.println(node_current.getNum() + <span class="string">&quot;\t&quot;</span>+ node_current.getName() + <span class="string">&quot;\t\t&quot;</span> + node_current.getScore());</span><br><span class="line">		<span class="comment">//暴力清屏逻辑</span></span><br><span class="line">		Clean(L);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">//按姓名查找</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Location_name</span><span class="params">(LinkList L)</span> </span>&#123;</span><br><span class="line">		System.out.print(<span class="string">&quot;请输入查找学生的姓名：&quot;</span>);</span><br><span class="line">		String name = scan.next();</span><br><span class="line">		<span class="keyword">int</span> Location = L.LocateElem_name(name);</span><br><span class="line">		Node node_current = L.GetElem(Location);</span><br><span class="line">		System.out.println(<span class="string">&quot;查找到学生信息如下：&quot;</span>);</span><br><span class="line">		System.out.println(<span class="string">&quot;学号\t\t姓名\t\t成绩&quot;</span> );</span><br><span class="line">		System.out.println(node_current.getNum() + <span class="string">&quot;\t&quot;</span>+ node_current.getName() + <span class="string">&quot;\t\t&quot;</span> + node_current.getScore());</span><br><span class="line">		<span class="comment">//暴力清屏逻辑</span></span><br><span class="line">		Clean(L);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">//按成绩排序</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Sort_score</span><span class="params">(LinkList L)</span> </span>&#123;</span><br><span class="line">		System.out.print(<span class="string">&quot;请选择排序方式(从高到低：1    从低到高：2)：&quot;</span>);</span><br><span class="line">		<span class="keyword">int</span> flag = scan.nextInt();</span><br><span class="line">		<span class="keyword">if</span>(flag == <span class="number">1</span>) &#123;</span><br><span class="line">			System.out.println(<span class="string">&quot;将成绩从高到低排序&quot;</span>);</span><br><span class="line">			L.SortList();</span><br><span class="line">			L.ReverseList();</span><br><span class="line">		&#125;<span class="keyword">else</span> &#123;</span><br><span class="line">			System.out.println(<span class="string">&quot;将成绩从低到高排序&quot;</span>);</span><br><span class="line">			L.SortList();</span><br><span class="line">		&#125;</span><br><span class="line">		</span><br><span class="line">		<span class="comment">//暴力清屏逻辑</span></span><br><span class="line">		Clean(L);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">//显示所有学生的信息</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Print_all</span><span class="params">(LinkList L)</span> </span>&#123;</span><br><span class="line">		System.out.println(<span class="string">&quot;学号\t\t\t姓名\t\t成绩&quot;</span> );</span><br><span class="line">		L.ListTraverse();</span><br><span class="line">		<span class="comment">//暴力清屏逻辑</span></span><br><span class="line">		Clean(L);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">//退出</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">Exite</span><span class="params">(<span class="keyword">boolean</span> flag)</span> </span>&#123;</span><br><span class="line">		System.out.println(<span class="string">&quot;您确定要退出吗？（Y/N）&quot;</span>);</span><br><span class="line">		String exit = scan.next();</span><br><span class="line">		<span class="keyword">char</span> exit_chr = exit.charAt(<span class="number">0</span>);</span><br><span class="line">		<span class="keyword">if</span>(exit_chr == <span class="string">&#x27;Y&#x27;</span>) &#123;</span><br><span class="line">			flag = <span class="keyword">false</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">return</span> flag;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">//暴力清屏逻辑</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Clean</span><span class="params">(LinkList L)</span> </span>&#123;	</span><br><span class="line">		System.out.print(<span class="string">&quot;是否进行清屏操作（Y/Others）：&quot;</span>);</span><br><span class="line">		String flag2 = scan.next();</span><br><span class="line">		<span class="keyword">char</span> flag_chr2 = flag2.charAt(<span class="number">0</span>);</span><br><span class="line">		<span class="keyword">if</span>(flag_chr2 == <span class="string">&#x27;Y&#x27;</span>) &#123;</span><br><span class="line">			L.Clean();</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">//String型数组前移一位</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Array_displace</span><span class="params">(<span class="keyword">int</span> n, String[] array )</span> </span>&#123;		</span><br><span class="line">		String temp1 = array[n];</span><br><span class="line">		array[n] = array[n+<span class="number">1</span>];</span><br><span class="line">		array[n+<span class="number">1</span>] = temp1;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">//int型数组前移一位(这里运用到了方法的重载)</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Array_displace</span><span class="params">(<span class="keyword">int</span> n, <span class="keyword">int</span>[] array )</span> </span>&#123;		</span><br><span class="line">		<span class="keyword">int</span> temp1 = array[n];</span><br><span class="line">		array[n] = array[n+<span class="number">1</span>];</span><br><span class="line">		array[n+<span class="number">1</span>] = temp1;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
<li><p><strong>LinkList类：</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> model.bean;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LinkList</span> </span>&#123;</span><br><span class="line">	<span class="comment">//属性：</span></span><br><span class="line">	Node node_head;</span><br><span class="line">	</span><br><span class="line">	<span class="comment">//方法:</span></span><br><span class="line">	<span class="comment">//长度：</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">Length</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="keyword">int</span> length = <span class="number">0</span>;</span><br><span class="line">		Node node_current = node_head;</span><br><span class="line">		<span class="keyword">while</span>(node_current != <span class="keyword">null</span>) &#123;</span><br><span class="line">			length ++;</span><br><span class="line">			node_current = node_current.next;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">return</span> length;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">//用元素e返回第i个元素的值</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> Node <span class="title">GetElem</span><span class="params">(<span class="keyword">int</span> i)</span> </span>&#123;</span><br><span class="line">		<span class="comment">//判断i是否合法</span></span><br><span class="line">		<span class="keyword">if</span>(i &gt; Length() || i &lt;= <span class="number">0</span>)</span><br><span class="line">			<span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">		<span class="comment">//将位置节点指向头节点并声明计数变变量来表示位置节点的位置</span></span><br><span class="line">		Node node_current = node_head;</span><br><span class="line">		<span class="keyword">int</span> count = <span class="number">1</span>;</span><br><span class="line">		<span class="comment">//令node_current的地址存储指定位置的节点的地址</span></span><br><span class="line">		<span class="keyword">while</span>(count != i) &#123;</span><br><span class="line">			node_current = node_current.next;<span class="comment">//将node_current的地址改为下一个节点的地址</span></span><br><span class="line">			count ++;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="comment">//返回第i个节点的地址</span></span><br><span class="line">		<span class="keyword">return</span> node_current;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">//返回链表中第一个与元素e相同的元素的位置(num)</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">LocateElem_num</span><span class="params">(String e)</span> </span>&#123; </span><br><span class="line">		<span class="comment">//将位置节点指向头节点并声明计数变变量来表示位置节点的位置</span></span><br><span class="line">		Node node_current = node_head;</span><br><span class="line">		<span class="keyword">int</span> count = <span class="number">1</span>;</span><br><span class="line">		<span class="keyword">while</span>( count != Length() + <span class="number">1</span>) &#123;</span><br><span class="line">			<span class="keyword">if</span>(node_current.getNum().equals(e))</span><br><span class="line">				<span class="keyword">break</span>;</span><br><span class="line">			node_current = node_current.next;</span><br><span class="line">			count ++;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span>(node_current != <span class="keyword">null</span>)</span><br><span class="line">			<span class="keyword">return</span> count;</span><br><span class="line">		<span class="keyword">else</span></span><br><span class="line">			<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">//返回链表中第一个与元素e相同的元素的位置(name)</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">LocateElem_name</span><span class="params">(String e)</span> </span>&#123;</span><br><span class="line">		<span class="comment">//将位置节点指向头节点并声明计数变变量来表示位置节点的位置</span></span><br><span class="line">		Node node_current = node_head;</span><br><span class="line">		<span class="keyword">int</span> count = <span class="number">1</span>;</span><br><span class="line">		<span class="keyword">while</span>( count != Length() + <span class="number">1</span>) &#123;</span><br><span class="line">			<span class="keyword">if</span>(node_current.getName().equals(e))</span><br><span class="line">				<span class="keyword">break</span>;</span><br><span class="line">			node_current = node_current.next;</span><br><span class="line">			count ++;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span>(node_current != <span class="keyword">null</span>)</span><br><span class="line">			<span class="keyword">return</span> count;</span><br><span class="line">		<span class="keyword">else</span></span><br><span class="line">			<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">//插入</span></span><br><span class="line">	<span class="comment">//添加新节点</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">add</span><span class="params">(String e1, String e2, <span class="keyword">int</span> e3)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">if</span>(node_head == <span class="keyword">null</span>) &#123;</span><br><span class="line">			Node node = <span class="keyword">new</span> Node(e1, e2, e3);</span><br><span class="line">			node_head = node;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">else</span> &#123;</span><br><span class="line">			<span class="comment">//声明一个新节点</span></span><br><span class="line">			Node node_new = <span class="keyword">new</span> Node(e1, e2, e3);</span><br><span class="line">			Node node_current = node_head;</span><br><span class="line">			<span class="comment">//把node_current设置为最后一个节点</span></span><br><span class="line">			<span class="keyword">while</span>(node_current.next != <span class="keyword">null</span>) &#123;</span><br><span class="line">				node_current = node_current.next;</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="comment">//添加新节点</span></span><br><span class="line">			node_current.next = node_new;</span><br><span class="line">			node_new.next = <span class="keyword">null</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">//在指定位置插入新节点</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">ListInsert</span><span class="params">(<span class="keyword">int</span> i, String e1, String e2, <span class="keyword">int</span> e3)</span> </span>&#123;</span><br><span class="line">		<span class="comment">//判断i是否超出链表长度</span></span><br><span class="line">		<span class="keyword">if</span>(i &gt; Length() + <span class="number">1</span>)</span><br><span class="line">			<span class="keyword">return</span>;</span><br><span class="line">		<span class="comment">//判断i是否是最后一个节点</span></span><br><span class="line">		<span class="keyword">if</span>(i == Length() + <span class="number">1</span>) &#123;</span><br><span class="line">			add(e1, e2, e3);</span><br><span class="line">			<span class="keyword">return</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="comment">//在链表首端插入节点</span></span><br><span class="line">		<span class="keyword">else</span> <span class="keyword">if</span>(i == <span class="number">1</span>) &#123;</span><br><span class="line">			<span class="comment">//新建节点并进行赋值</span></span><br><span class="line">			Node node_new =<span class="keyword">new</span> Node(e1, e2, e3);</span><br><span class="line">			<span class="comment">//将节点插入链表首端</span></span><br><span class="line">			node_new.next = node_head;</span><br><span class="line">			node_head = node_new;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="comment">//在链表中间插入节点</span></span><br><span class="line">		<span class="keyword">else</span>&#123;</span><br><span class="line">			<span class="comment">//声明一个新节点并赋值</span></span><br><span class="line">			Node node_new =<span class="keyword">new</span> Node(e1, e2, e3);</span><br><span class="line">			<span class="comment">//将位置节点指向头节点并声明计数变变量来表示位置节点的位置</span></span><br><span class="line">			Node node_current = node_head;</span><br><span class="line">			<span class="keyword">int</span> location = <span class="number">1</span>;</span><br><span class="line">			<span class="comment">//把位置节点移到指定位置前一个的节点</span></span><br><span class="line">			<span class="keyword">while</span>(location != i -<span class="number">1</span>) &#123;</span><br><span class="line">				<span class="comment">//将位置节点后移一位</span></span><br><span class="line">				node_current = node_current.next;</span><br><span class="line">				location ++;</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="comment">//将新的节点插入</span></span><br><span class="line">			node_new.next = node_current.next;</span><br><span class="line">			node_current.next = node_new;</span><br><span class="line">		&#125;	</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">//删除第i个元素</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">ListDelete</span><span class="params">(<span class="keyword">int</span> i)</span> </span>&#123;</span><br><span class="line">		<span class="comment">//判断i是否超出链表长度</span></span><br><span class="line">		<span class="keyword">if</span>(i &gt; Length()) </span><br><span class="line">			<span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">		<span class="keyword">else</span> &#123;</span><br><span class="line">			<span class="keyword">if</span>(i == <span class="number">1</span>) &#123;</span><br><span class="line">				node_head = node_head.next;</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">else</span> &#123;</span><br><span class="line">				<span class="comment">//把node_current移到i前一位的位置</span></span><br><span class="line">				<span class="comment">//将位置节点指向头节点并声明计数变变量来表示位置节点的位置</span></span><br><span class="line">				Node node_current = node_head;</span><br><span class="line">				<span class="keyword">int</span> location = <span class="number">1</span>;</span><br><span class="line">				<span class="comment">//令位置节点指向指定节点的前一位</span></span><br><span class="line">				<span class="keyword">while</span>(location != i -<span class="number">1</span>) &#123;</span><br><span class="line">					node_current = node_current.next;</span><br><span class="line">					location ++;</span><br><span class="line">				&#125;</span><br><span class="line">				<span class="comment">//删除第i个节点</span></span><br><span class="line">				node_current.next = node_current.next.next;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">//链表从低到高排序</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">SortList</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		 <span class="keyword">if</span>(node_head == <span class="keyword">null</span> || node_head == <span class="keyword">null</span>)</span><br><span class="line">			 <span class="keyword">return</span>;</span><br><span class="line">		 </span><br><span class="line">		 Node quiet = node_head;</span><br><span class="line">		 Node sport = quiet.next;</span><br><span class="line">		 <span class="keyword">int</span> loc_quiet;</span><br><span class="line">		 <span class="keyword">int</span> loc_sport;</span><br><span class="line">		 </span><br><span class="line">		 <span class="keyword">for</span>(loc_quiet = <span class="number">1</span>; loc_quiet &lt;= Length()-<span class="number">1</span>; loc_quiet ++) &#123;</span><br><span class="line">			 sport = quiet.next;</span><br><span class="line">			 <span class="keyword">for</span>(loc_sport = loc_quiet+<span class="number">1</span>; loc_sport &lt;= Length(); loc_sport ++) &#123;</span><br><span class="line">				 <span class="keyword">if</span>(quiet.getScore() &gt; sport.getScore()) &#123;</span><br><span class="line">					 Link_change_num(quiet, sport);</span><br><span class="line">					 Link_change_name(quiet, sport);</span><br><span class="line">					 Link_change_score(quiet, sport);</span><br><span class="line">				 &#125;</span><br><span class="line">				 sport = sport.next;</span><br><span class="line">			 &#125;</span><br><span class="line">			 quiet = quiet.next;</span><br><span class="line">		 &#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">//单链表的逆置</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">ReverseList</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="comment">//收尾指针第一个节点</span></span><br><span class="line">        Node tail = node_head;</span><br><span class="line">        <span class="comment">//工作指针pre p</span></span><br><span class="line">        Node pre = node_head;</span><br><span class="line">        Node p = pre.next;</span><br><span class="line">        <span class="keyword">while</span> (<span class="keyword">null</span> != p)&#123;</span><br><span class="line">            Node next = p.next;</span><br><span class="line">            p.next = pre;</span><br><span class="line">            pre = p;</span><br><span class="line">            p = next;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//更新头指针</span></span><br><span class="line">        node_head = pre;</span><br><span class="line">        <span class="comment">//尾指针指针域置空，防止出现环</span></span><br><span class="line">        tail.next = <span class="keyword">null</span>;</span><br><span class="line">	&#125;</span><br><span class="line">			</span><br><span class="line">	<span class="comment">//遍历链表元素</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">ListTraverse</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="keyword">if</span>(Length() != <span class="number">0</span>) &#123;</span><br><span class="line">			<span class="comment">//将位置节点指向头节点并声明计数变变量来表示位置节点的位置</span></span><br><span class="line">			Node node_current = node_head;</span><br><span class="line">			<span class="keyword">int</span> count = <span class="number">1</span>;</span><br><span class="line">			<span class="keyword">while</span>(count != (Length() + <span class="number">1</span>)) &#123;</span><br><span class="line">				System.out.println(node_current.getNum() + <span class="string">&quot;\t\t&quot;</span> + node_current.getName() +<span class="string">&quot;\t\t&quot;</span> + node_current.getScore());</span><br><span class="line">				node_current = node_current.next;</span><br><span class="line">				count ++;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">//num数值交换</span></span><br><span class="line">	<span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Link_change_num</span><span class="params">(Node node1, Node node2)</span> </span>&#123;		</span><br><span class="line">		String temp1 = node1.getNum();</span><br><span class="line">		node1.setNum(node2.getNum());</span><br><span class="line">		node2.setNum(temp1);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">//score数值交换</span></span><br><span class="line">	<span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Link_change_name</span><span class="params">(Node node1, Node node2)</span> </span>&#123;		</span><br><span class="line">		String temp1 = node1.getName();</span><br><span class="line">		node1.setName(node2.getName());</span><br><span class="line">		node2.setName(temp1);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">//score数值交换</span></span><br><span class="line">	<span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Link_change_score</span><span class="params">(Node node1, Node node2)</span> </span>&#123;		</span><br><span class="line">		<span class="keyword">int</span> temp1 = node1.getScore();</span><br><span class="line">		node1.setScore(node2.getScore());</span><br><span class="line">		node2.setScore(temp1);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">//暴力清屏逻辑</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Clean</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= <span class="number">30</span>; i ++) &#123;</span><br><span class="line">			System.out.println(<span class="string">&quot;&quot;</span>);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
<li><p><strong>Node类：</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> model.bean;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @项目名称：Student_Information_System_Link</span></span><br><span class="line"><span class="comment"> * @包名称：model.bean</span></span><br><span class="line"><span class="comment"> * @类名称：Node</span></span><br><span class="line"><span class="comment"> * @类描述：用于存储数据</span></span><br><span class="line"><span class="comment"> * @创建人：青春玩命的年代</span></span><br><span class="line"><span class="comment"> * @创建时间：2021年10月26日</span></span><br><span class="line"><span class="comment"> * @版本：</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Node</span> </span>&#123;</span><br><span class="line">	<span class="comment">//属性</span></span><br><span class="line">	<span class="keyword">private</span> String num;</span><br><span class="line">	<span class="keyword">private</span> String name;</span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">int</span> score;</span><br><span class="line">	Node next;</span><br><span class="line">	<span class="comment">//构造器</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="title">Node</span><span class="params">()</span></span>&#123;</span><br><span class="line">		</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="title">Node</span><span class="params">(String e1, String e2, <span class="keyword">int</span> e3)</span></span>&#123;</span><br><span class="line">		num = e1;</span><br><span class="line">		name = e2;</span><br><span class="line">		score = e3;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">//方法：</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> String <span class="title">getNum</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="keyword">this</span>.num;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="keyword">this</span>.name;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getScore</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="keyword">this</span>.score;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setNum</span><span class="params">(String num)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">this</span>.num = num;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">this</span>.name = name;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setScore</span><span class="params">(<span class="keyword">int</span> score)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">this</span>.score = score;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></li>
</ul>
]]></content>
      <categories>
        <category>小程序实践</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>小程序实践</tag>
      </tags>
  </entry>
  <entry>
    <title>Java输出语句中的println、print和printf</title>
    <url>/2021/10/03/Java%E8%BE%93%E5%87%BA%E8%AF%AD%E5%8F%A5%E4%B8%AD%E7%9A%84println%E3%80%81print%E5%92%8Cprintf/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><h2 id="前情提要："><a href="#前情提要：" class="headerlink" title="前情提要："></a>前情提要：</h2><p>最初接触的Java输出语句就是：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">System.out.println(<span class="string">&quot;Hello World!&quot;</span>);</span><br></pre></td></tr></table></figure>

<p>也一直以为Java就这么一种输出形式，没有思考过其他可能。果然，今天我就遇到了麻烦 . . . </p>
<h2 id="问题描述："><a href="#问题描述：" class="headerlink" title="问题描述："></a>问题描述：</h2><p>今天做Java练习，要输出一个char型数组，但“println”会自动换行就导致以下情况：</p>
<p><img src="https://i.loli.net/2021/10/03/cUy7asTQVIk5b6M.jpg"></p>
<p>就很离谱 . . .</p>
<h2 id="解决方法："><a href="#解决方法：" class="headerlink" title="解决方法："></a>解决方法：</h2><p>把println换为print即可</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">chr</span> </span>&#123;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">		String str = <span class="string">&quot;I love you !&quot;</span>;</span><br><span class="line">		<span class="keyword">char</span>[] chr = str.toCharArray();</span><br><span class="line">		</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; chr.length; i ++) &#123;</span><br><span class="line">			System.out.print(chr[i]);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><img src="https://i.loli.net/2021/10/03/ce98SChoTJHxXnU.jpg"></p>
<h2 id="知识拓展："><a href="#知识拓展：" class="headerlink" title="知识拓展："></a>知识拓展：</h2><p>Java中输出语句有三种<strong>print</strong>，分别是<strong>println</strong>、<strong>print</strong>和<strong>printf</strong></p>
<p>1、printf主要是继承了C语言的printf的一些特性，可以进行格式化输出</p>
<p>2、print就是一般的标准输出，输入信息后不会换行</p>
<p>3、println输入信息会换行</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Print</span> </span>&#123;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">int</span> num = <span class="number">1</span>;</span><br><span class="line">		System.out.print(<span class="string">&quot;print:num = &quot;</span>);</span><br><span class="line">		System.out.print(num + <span class="string">&quot;\n&quot;</span>);</span><br><span class="line">		System.out.println(<span class="string">&quot;println:num = &quot;</span>);</span><br><span class="line">		System.out.println(num);</span><br><span class="line">		System.out.printf(<span class="string">&quot;printf:num = %d&quot;</span>,num);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><img src="https://i.loli.net/2021/10/03/OIEa4jsDGgcMeAC.jpg"></p>
]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>踩坑小记录</tag>
      </tags>
  </entry>
  <entry>
    <title>如何连续的输出char类型的变量</title>
    <url>/2021/10/02/%E5%A6%82%E4%BD%95%E8%BF%9E%E7%BB%AD%E7%9A%84%E8%BE%93%E5%87%BAchar%E7%B1%BB%E5%9E%8B%E7%9A%84%E5%8F%98%E9%87%8F/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><blockquote>
<p>参考价值：已完结，可以参考</p>
</blockquote>
<hr>
<p>两个char类型输出时不能直接(chr[1] + chr[2]);的输出，这样 + 的连接符就不是连接符，编译器会直接将两者ASCII码值相加并转换为int类型输出。</p>
<p>所以，我们可以连接一个空字符串进行输出，像这样：(chr[1] + “” + chr[2]);</p>
]]></content>
      <categories>
        <category>踩坑小记录</category>
      </categories>
  </entry>
  <entry>
    <title>字符串练习</title>
    <url>/2021/10/02/%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%BB%83%E4%B9%A0%E4%BD%9C%E4%B8%9A/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><h1 id="任务一："><a href="#任务一：" class="headerlink" title="任务一："></a>任务一：</h1><h2 id="任务描述："><a href="#任务描述：" class="headerlink" title="任务描述："></a>任务描述：</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">编写程序将“jdk16”全部变为大写，并输出到屏幕，截取子串“DK”并输出到屏幕。</span><br></pre></td></tr></table></figure>

<h2 id="方法一："><a href="#方法一：" class="headerlink" title="方法一："></a>方法一：</h2><h3 id="代码逻辑："><a href="#代码逻辑：" class="headerlink" title="代码逻辑："></a>代码逻辑：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1. 用char数组存储“jdk16”</span><br><span class="line">2. 用for语句和if语句进行大写转换</span><br><span class="line">3. 用数组进行字串输出（也可以转换成字符串之后截取字串输出，但是完全没有必要）</span><br></pre></td></tr></table></figure>

<h3 id="代码实现："><a href="#代码实现：" class="headerlink" title="代码实现："></a>代码实现：</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Two_String_1_1</span> </span>&#123;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">		<span class="comment">//建立char数组，存储“jdk16”</span></span><br><span class="line">		<span class="keyword">char</span>[] jdk = <span class="keyword">new</span> <span class="keyword">char</span>[<span class="number">5</span>];</span><br><span class="line">		jdk[<span class="number">0</span>] = <span class="string">&#x27;j&#x27;</span>;</span><br><span class="line">		jdk[<span class="number">1</span>] = <span class="string">&#x27;d&#x27;</span>;</span><br><span class="line">		jdk[<span class="number">2</span>] = <span class="string">&#x27;k&#x27;</span>;</span><br><span class="line">		jdk[<span class="number">3</span>] = <span class="string">&#x27;1&#x27;</span>;</span><br><span class="line">		jdk[<span class="number">4</span>] = <span class="string">&#x27;6&#x27;</span>;</span><br><span class="line">		<span class="keyword">int</span> length = <span class="number">5</span>;</span><br><span class="line">		<span class="comment">//大写转换</span></span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= length - <span class="number">1</span>; i ++) &#123;</span><br><span class="line">			<span class="keyword">if</span>(jdk[i] &gt;= <span class="number">97</span> &amp;&amp; jdk[i] &lt;= <span class="number">122</span>) &#123;</span><br><span class="line">				jdk[i] -= <span class="number">32</span>;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="comment">//输出“DK”</span></span><br><span class="line">		System.out.println(jdk[<span class="number">1</span>] + <span class="string">&quot;&quot;</span> + jdk[<span class="number">2</span>]);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="运行检测："><a href="#运行检测：" class="headerlink" title="运行检测："></a>运行检测：</h3><p><img src="https://i.loli.net/2021/10/02/4NOatZSE59kdijQ.jpg"></p>
<h3 id="自评："><a href="#自评：" class="headerlink" title="自评："></a>自评：</h3><ul>
<li><p><strong>缺点：</strong></p>
<p>方法常规，没有特色，</p>
</li>
<li><p><strong>优点：</strong></p>
<p>容易想到QAQ</p>
</li>
</ul>
<h3 id="收获："><a href="#收获：" class="headerlink" title="收获："></a>收获：</h3><p><a href="https://dengxiayouhun.github.io/2021/10/02/%E5%A6%82%E4%BD%95%E8%BF%9E%E7%BB%AD%E7%9A%84%E8%BE%93%E5%87%BAchar%E7%B1%BB%E5%9E%8B%E7%9A%84%E5%8F%98%E9%87%8F/">如何连续的输出两个char类型变量</a></p>
<h2 id="方法二："><a href="#方法二：" class="headerlink" title="方法二："></a>方法二：</h2><h3 id="代码逻辑：-1"><a href="#代码逻辑：-1" class="headerlink" title="代码逻辑："></a>代码逻辑：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1. 将jdk16存储到String类型变量中</span><br><span class="line">2. 通过toUpperCase方法将小写字母转换为大写字母。</span><br><span class="line">3. 用substring方法输出子串“DK”</span><br></pre></td></tr></table></figure>

<h3 id="代码实现：-1"><a href="#代码实现：-1" class="headerlink" title="代码实现："></a>代码实现：</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Two_String_1_2</span> </span>&#123;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span> <span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">		<span class="comment">//将jdk16存储到String类型变量中</span></span><br><span class="line">		String str = <span class="string">&quot;jdk16&quot;</span>;</span><br><span class="line">		<span class="comment">//调用toUpperCase方法将小写字母转换为大写字母。</span></span><br><span class="line">		str = str.toUpperCase();</span><br><span class="line">		<span class="comment">//用substring方法输出子串“DK”</span></span><br><span class="line">		System.out.println(str.substring(<span class="number">1</span>,<span class="number">3</span>));</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="代码检测："><a href="#代码检测：" class="headerlink" title="代码检测："></a>代码检测：</h3><p><img src="https://i.loli.net/2021/10/02/pfbWBg3Yxwtemqj.jpg"></p>
<h3 id="自评：-1"><a href="#自评：-1" class="headerlink" title="自评："></a>自评：</h3><ul>
<li><p><strong>优点：</strong></p>
<p>代码简洁，规范，效率较高。</p>
</li>
<li><p><strong>缺点：</strong></p>
<p>不容易想到，需要熟读API文档，或者百度抄答案 -_-</p>
</li>
</ul>
<h3 id="API文档："><a href="#API文档：" class="headerlink" title="API文档："></a>API文档：</h3><p><img src="https://i.loli.net/2021/10/03/t51xILwNMQVFDOd.jpg"></p>
<h1 id="任务二："><a href="#任务二：" class="headerlink" title="任务二："></a>任务二：</h1><h2 id="任务描述：-1"><a href="#任务描述：-1" class="headerlink" title="任务描述："></a>任务描述：</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">统计任意给定字符串中数字个数。</span><br></pre></td></tr></table></figure>

<h2 id="代码逻辑：-2"><a href="#代码逻辑：-2" class="headerlink" title="代码逻辑："></a>代码逻辑：</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1. 输入字符串</span><br><span class="line">2. 用length方法获取字符串长度，用toCharArray方法将字符串转化为char型数组。</span><br><span class="line">3. 判断是否为数字并输出其个数</span><br></pre></td></tr></table></figure>

<h2 id="代码实现：-2"><a href="#代码实现：-2" class="headerlink" title="代码实现："></a>代码实现：</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Two_String_2</span> </span>&#123;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">		Scanner scan = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">		<span class="comment">//输入字符串</span></span><br><span class="line">		System.out.println(<span class="string">&quot;请输入一行字符串：&quot;</span>);</span><br><span class="line">		String str = scan.nextLine();</span><br><span class="line">		scan.close();</span><br><span class="line">		<span class="comment">//用length方法获取字符串长度，用toCharArray方法将字符串转化为char型数组。</span></span><br><span class="line">		<span class="keyword">int</span> length = str.length();</span><br><span class="line">		<span class="keyword">char</span>[] chr = <span class="keyword">new</span> <span class="keyword">char</span>[length];</span><br><span class="line">		chr = str.toCharArray();</span><br><span class="line">		<span class="comment">//判断每个字符是否是数字并计数</span></span><br><span class="line">		<span class="keyword">int</span> count = <span class="number">0</span>;</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= length - <span class="number">1</span>; i++) &#123;</span><br><span class="line">			<span class="keyword">if</span>(chr[i] &gt;= <span class="number">48</span> &amp;&amp; chr[i] &lt;=<span class="number">57</span>) &#123;</span><br><span class="line">				count ++;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="comment">//输出</span></span><br><span class="line">		System.out.println(<span class="string">&quot;您输入的字符串中有&quot;</span> + count + <span class="string">&quot;个数字。&quot;</span>);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="运行检测：-1"><a href="#运行检测：-1" class="headerlink" title="运行检测："></a>运行检测：</h2><p><img src="https://i.loli.net/2021/10/03/wbZMXxAcJuk7UC1.jpg"></p>
<h2 id="自评：-2"><a href="#自评：-2" class="headerlink" title="自评："></a>自评：</h2><p>中规中矩，主要是String相关方法的使用。</p>
<h1 id="任务三："><a href="#任务三：" class="headerlink" title="任务三："></a>任务三：</h1><h2 id="任务描述：-2"><a href="#任务描述：-2" class="headerlink" title="任务描述："></a>任务描述：</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">将一个数组从左开始第几位之前的进行旋转：</span><br><span class="line">左旋数组，如：将”abcdef”第2位之前（a为0号位置）</span><br><span class="line">进行旋转后为：”cdefab“。</span><br></pre></td></tr></table></figure>

<h2 id="代码逻辑：-3"><a href="#代码逻辑：-3" class="headerlink" title="代码逻辑："></a>代码逻辑：</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1. 输入字符串和旋转位</span><br><span class="line">2. 将字符串转换为char型数组，并新建一个char型数组存储旋转后的数据。</span><br><span class="line">3. 存储旋转位之前的数组元素</span><br><span class="line">4. 存储旋转位之后的数组元素</span><br><span class="line">5. 将旋转数组转化位字符串</span><br><span class="line">6. 输出旋转字符串</span><br></pre></td></tr></table></figure>

<h2 id="代码实现：-3"><a href="#代码实现：-3" class="headerlink" title="代码实现："></a>代码实现：</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Two_String_3</span> </span>&#123;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">		Scanner scan = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">		<span class="comment">//输入字符串和旋转位</span></span><br><span class="line">		System.out.println(<span class="string">&quot;请输入一个字符串：&quot;</span>);</span><br><span class="line">		String str = scan.nextLine();</span><br><span class="line">		System.out.println(<span class="string">&quot;请输入旋转位：&quot;</span>);</span><br><span class="line">		<span class="keyword">int</span> location = scan.nextInt();</span><br><span class="line">		scan.close();</span><br><span class="line">		<span class="comment">//将字符串转换为char型数组，并新建一个char型数组存储旋转后的数据。</span></span><br><span class="line">		<span class="keyword">char</span>[] chr = str.toCharArray();</span><br><span class="line">		<span class="keyword">char</span>[] chr_new = <span class="keyword">new</span> <span class="keyword">char</span>[str.length()];</span><br><span class="line">		<span class="comment">//存储旋转位之前的数组元素</span></span><br><span class="line">		<span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> j = location; j &lt;= str.length() - <span class="number">1</span>; j++) &#123;</span><br><span class="line">			chr_new[i] = chr[j];</span><br><span class="line">			i ++;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="comment">//存储旋转位之后的数组元素</span></span><br><span class="line">		<span class="keyword">int</span> m = str.length() - location;</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> n = <span class="number">0</span>; n &lt;= location - <span class="number">1</span>; n++ ) &#123;</span><br><span class="line">			chr_new[m] = chr[n];</span><br><span class="line">			m ++;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="comment">//将旋转数组转化位字符串</span></span><br><span class="line">		String str_new = <span class="keyword">new</span> String(chr_new);</span><br><span class="line">		<span class="comment">//输出旋转字符串</span></span><br><span class="line">		System.out.println(<span class="string">&quot;旋转后的字符串为：&quot;</span> + str_new);	</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="运行检测：-2"><a href="#运行检测：-2" class="headerlink" title="运行检测："></a>运行检测：</h2><p><img src="https://i.loli.net/2021/10/03/2AdjNCyO3vX74ki.jpg"></p>
<h2 id="API文档：-1"><a href="#API文档：-1" class="headerlink" title="API文档："></a>API文档：</h2><p><img src="https://i.loli.net/2021/10/03/GVsmu6LIU7cRxXZ.jpg"></p>
<h2 id="自评：-3"><a href="#自评：-3" class="headerlink" title="自评："></a>自评：</h2><p>比较满意，</p>
<p>运用的方法比较一般，难点主要在设计上</p>
<p>代码逻辑如果设计好，任务就完成了一大半。</p>
<h1 id="任务四："><a href="#任务四：" class="headerlink" title="任务四："></a>任务四：</h1><h2 id="任务描述：-3"><a href="#任务描述：-3" class="headerlink" title="任务描述："></a>任务描述：</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">将一个数组从左开始第几位之前的进行翻转：翻转数组，如：</span><br><span class="line">将”abcdef”第2位之前（a为0号位置）</span><br><span class="line">进行翻转后为：”bacdef“。</span><br></pre></td></tr></table></figure>

<h2 id="代码逻辑：-4"><a href="#代码逻辑：-4" class="headerlink" title="代码逻辑："></a>代码逻辑：</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1. 输入字符串和翻转位</span><br><span class="line">2. 将字符串转换为char型数组，并新建一个char型数组存储反转后的数据。</span><br><span class="line">3. 存储翻转位之前的数组元素</span><br><span class="line">4. 存储翻转位之后的数组元素</span><br><span class="line">5. 将翻转数组转化位字符串</span><br><span class="line">6. 输出翻转字符串</span><br></pre></td></tr></table></figure>

<h2 id="代码实现：-4"><a href="#代码实现：-4" class="headerlink" title="代码实现："></a>代码实现：</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Two_String_4</span> </span>&#123;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">		Scanner scan = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">		<span class="comment">//输入字符串和翻转位</span></span><br><span class="line">		System.out.println(<span class="string">&quot;请输入一个字符串：&quot;</span>);</span><br><span class="line">		String str = scan.nextLine();</span><br><span class="line">		System.out.println(<span class="string">&quot;请输入翻转位：&quot;</span>);</span><br><span class="line">		<span class="keyword">int</span> location = scan.nextInt();</span><br><span class="line">		scan.close();</span><br><span class="line">		<span class="comment">//将字符串转换为char型数组，并新建一个char型数组存储翻转后的数据。</span></span><br><span class="line">		<span class="keyword">char</span>[] chr = str.toCharArray();</span><br><span class="line">		<span class="keyword">char</span>[] chr_new = <span class="keyword">new</span> <span class="keyword">char</span>[str.length()];</span><br><span class="line">		<span class="comment">//存储旋翻转位之前的数组元素</span></span><br><span class="line">		<span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> j = location - <span class="number">1</span>; j &gt;= <span class="number">0</span>; j --) &#123;</span><br><span class="line">			chr_new[i] = chr[j];</span><br><span class="line">			i ++;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="comment">//存储翻转位之后的数组元素</span></span><br><span class="line">		<span class="keyword">int</span> m = location;</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> n = location; n &lt;= str.length() - <span class="number">1</span>; n++ ) &#123;</span><br><span class="line">			chr_new[m] = chr[n];</span><br><span class="line">			m ++;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="comment">//将翻转数组转化位字符串</span></span><br><span class="line">		String str_new = <span class="keyword">new</span> String(chr_new);</span><br><span class="line">		<span class="comment">//输出翻转字符串</span></span><br><span class="line">		System.out.println(<span class="string">&quot;翻转后的字符串为：&quot;</span> + str_new);	</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="运行检测：-3"><a href="#运行检测：-3" class="headerlink" title="运行检测："></a>运行检测：</h2><p><img src="https://i.loli.net/2021/10/03/TxVX8nqWM1ejDI3.jpg"></p>
<h2 id="自评：-4"><a href="#自评：-4" class="headerlink" title="自评："></a>自评：</h2><p>和任务三的代码逻辑一样，没有什么难度，任务三的代码稍加修改就是任务四</p>
<h2 id="收获：-1"><a href="#收获：-1" class="headerlink" title="收获："></a>收获：</h2><p><a href="https://dengxiayouhun.github.io/2021/10/03/Java%E8%BE%93%E5%87%BA%E8%AF%AD%E5%8F%A5%E4%B8%AD%E7%9A%84println%E3%80%81print%E5%92%8Cprintf/">Java输出语句中的println、print和printf</a></p>
<h1 id="任务五："><a href="#任务五：" class="headerlink" title="任务五："></a>任务五：</h1><h2 id="任务描述：-4"><a href="#任务描述：-4" class="headerlink" title="任务描述："></a>任务描述：</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">编写一个程序，将下面的一段文本中的各个单词的字母顺序翻转，</span><br><span class="line">“To be or not to bo” 将变成</span><br><span class="line">”oT eb ro ton ot ob. ”。(后面加.) </span><br><span class="line"></span><br><span class="line">直接来个plus版本的，可将任意输入的文本座椅上变换</span><br></pre></td></tr></table></figure>

<h2 id="代码逻辑：-5"><a href="#代码逻辑：-5" class="headerlink" title="代码逻辑："></a>代码逻辑：</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1. 输入字符串：</span><br><span class="line">2. 使用split将字符串转化为字符串数组并存储到定义的字符串数组中</span><br><span class="line">3. 用for语句将对所有数组元素的翻转处理，转换成对单个数组元素的翻转处理。</span><br><span class="line">4. 对单个字符串的翻转处理：</span><br><span class="line">	用substring方法提取子串，然后反向拼接赋值给原字符串数组。</span><br><span class="line">5. 使用print和for语句输出字符串数组，并在最后添加一个“.”</span><br></pre></td></tr></table></figure>

<h2 id="代码实现：-5"><a href="#代码实现：-5" class="headerlink" title="代码实现："></a>代码实现：</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Three_String_5</span> </span>&#123;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">		<span class="comment">//输入字符串</span></span><br><span class="line">		Scanner scan = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">		System.out.println(<span class="string">&quot;请输入一句英文（最好不要加标点符号&gt;-&lt;）：&quot;</span>);</span><br><span class="line">		String str = scan.nextLine();</span><br><span class="line">		scan.close();</span><br><span class="line">		<span class="comment">//使用split将字符串转化为字符串数组并存储到定义的字符串数组中</span></span><br><span class="line">		String[] stri = <span class="keyword">new</span> String[<span class="number">20</span>];</span><br><span class="line">		stri = str.split(<span class="string">&quot; &quot;</span>);</span><br><span class="line">		<span class="comment">//用for语句将对所有数组元素的翻转处理，转换成对单个数组元素的翻转处理。</span></span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= stri.length - <span class="number">1</span>; i++) &#123;</span><br><span class="line">			<span class="comment">//用substring方法提取子串</span></span><br><span class="line">			String[] sub = <span class="keyword">new</span> String[<span class="number">10</span>];</span><br><span class="line">			<span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j &lt;= stri[i].length() - <span class="number">1</span>; j ++) &#123;</span><br><span class="line">				sub[j] = stri[i].substring(j, j + <span class="number">1</span>);</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="comment">//反向拼接赋值给原字符串数组</span></span><br><span class="line">			<span class="keyword">int</span> length = stri[i].length();</span><br><span class="line">			stri[i] = <span class="string">&quot;&quot;</span>;</span><br><span class="line">			<span class="keyword">for</span>(<span class="keyword">int</span> k = length - <span class="number">1</span>; k &gt;= <span class="number">0</span>; k --) &#123;</span><br><span class="line">				stri[i] = stri[i] + sub[k];</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="comment">//使用print和for语句输出字符串数组，并在最后添加一个“.”</span></span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> m = <span class="number">0</span>; m &lt;= stri.length - <span class="number">1</span>; m ++) &#123;</span><br><span class="line">			<span class="keyword">if</span>(m &lt; stri.length - <span class="number">1</span>)</span><br><span class="line">				System.out.print(stri[m] + <span class="string">&quot; &quot;</span>);</span><br><span class="line">			<span class="keyword">else</span></span><br><span class="line">				System.out.print(stri[m] + <span class="string">&quot;.&quot;</span>);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="运行检测：-4"><a href="#运行检测：-4" class="headerlink" title="运行检测："></a>运行检测：</h2><p><img src="https://i.loli.net/2021/10/03/cvWs14leFpxiNhO.jpg"></p>
<p><img src="https://i.loli.net/2021/10/03/34BVADsE6I2RStq.jpg"></p>
<h2 id="自评：-5"><a href="#自评：-5" class="headerlink" title="自评："></a>自评：</h2><p>难度和三、四差不多，还是先设计代码逻辑，然后搭框架，之后填充代码。</p>
<h2 id="API文档：-2"><a href="#API文档：-2" class="headerlink" title="API文档："></a>API文档：</h2><p><img src="https://i.loli.net/2021/10/03/CtU6ad2Bx1LAJXu.jpg"></p>
<p><img src="https://i.loli.net/2021/10/03/tOsyv251NwSeHlF.jpg"></p>
<h1 id="任务六："><a href="#任务六：" class="headerlink" title="任务六："></a>任务六：</h1><h2 id="任务描述：-5"><a href="#任务描述：-5" class="headerlink" title="任务描述："></a>任务描述：</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">字符串转化（压缩）。</span><br><span class="line">如：“aabbccdaa”--------“a2b2c2d1a2”</span><br></pre></td></tr></table></figure>

<h2 id="代码逻辑：-6"><a href="#代码逻辑：-6" class="headerlink" title="代码逻辑："></a>代码逻辑：</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1. 输入一串字符串</span><br><span class="line">2. 定义一个StringBuilder变量</span><br><span class="line">3. 用toCharArray方法将字符串转化成char型数组</span><br><span class="line">4. 定义一个char类型的变量来获取字符</span><br><span class="line">5. 定义一个int类型的变量来获取压缩数量</span><br><span class="line">6. 用for语句和contion来让char和int获取正确的数值，并用append方法进行拼接</span><br><span class="line">7. StringBuilder变量转化为String变量输出(不转化直接输出也行)</span><br></pre></td></tr></table></figure>

<h2 id="代码实现：-6"><a href="#代码实现：-6" class="headerlink" title="代码实现："></a>代码实现：</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Three_String_6</span> </span>&#123;</span><br><span class="line">	</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//输入一串字符串</span></span><br><span class="line">       	System.out.println(<span class="string">&quot;请输入一串字符串：&quot;</span>);</span><br><span class="line">       	Scanner scan = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">       	String str = scan.nextLine();</span><br><span class="line">       	scan.close();</span><br><span class="line">        <span class="comment">//定义相关变量</span></span><br><span class="line">       	StringBuilder a = <span class="keyword">new</span> StringBuilder();</span><br><span class="line">       	<span class="keyword">char</span>[] b = str.toCharArray();</span><br><span class="line">       	<span class="keyword">char</span> char1 = str.charAt(<span class="number">0</span>);</span><br><span class="line">       	<span class="keyword">int</span> count = <span class="number">1</span>;<span class="comment">//计数</span></span><br><span class="line">       	<span class="comment">//用for语句和contion来让char和int获取正确的数值，并用append方法进行拼接</span></span><br><span class="line">       	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; b.length; i ++) &#123;</span><br><span class="line">       		<span class="keyword">if</span> (char1 == str.charAt(i)) &#123;</span><br><span class="line">       			count++;</span><br><span class="line">       			<span class="keyword">continue</span>;</span><br><span class="line">        	&#125;</span><br><span class="line">        	a = a.append(char1).append(count);</span><br><span class="line">       		count = <span class="number">1</span>;</span><br><span class="line">       		char1 = str.charAt(i);</span><br><span class="line">        &#125;</span><br><span class="line">       	a = a.append(char1).append(count);</span><br><span class="line">       	<span class="comment">//StringBuilder变量转化为String变量输出</span></span><br><span class="line">       	System.out.println(<span class="string">&quot;经压缩后为：&quot;</span> + a.toString());</span><br><span class="line">	&#125;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="运行检测：-5"><a href="#运行检测：-5" class="headerlink" title="运行检测："></a>运行检测：</h2><p><img src="https://i.loli.net/2021/10/03/b1v3VCBMI496dw5.jpg"></p>
<h2 id="API文档：-3"><a href="#API文档：-3" class="headerlink" title="API文档："></a>API文档：</h2><p><img src="https://i.loli.net/2021/10/03/XW5AcQbSsl71qj6.jpg"></p>
<p>其实append方法有很多个，但都只是参数不同。</p>
<p><img src="https://i.loli.net/2021/10/03/oL2yC8P1t3ZMqGb.jpg"></p>
<p><img src="https://i.loli.net/2021/10/03/1ZEIrUA6YgFO79t.jpg"></p>
<h2 id="自评：-6"><a href="#自评：-6" class="headerlink" title="自评："></a>自评：</h2><ul>
<li>个人认为这个程序相当优秀</li>
<li>我承认这个程序的主体逻辑是我在CSDN上抄的。我原本也写了一个，但是逻辑太过复杂，代码量足足122行，而且最后运行结果还未达到目标，和这个确实比不了，所以也就不拿出来了。</li>
</ul>
<h1 id="感想："><a href="#感想：" class="headerlink" title="感想："></a>感想：</h1><ol>
<li><p><strong>API文档是个好东西</strong></p>
<p>背API文档里常用类的方法，或者至少熟读是非常重要的。</p>
<p>在编程中如果我们知道许多API文档里的方法，原来需要写100多行的代码往往很可能只需要2、30行就能搞定，而且效率一般会更高。</p>
<p>而且，熟练运用API文档也是面向对象编程的要求之一。</p>
</li>
<li><p><strong>注释是个好东西</strong></p>
<p>大家还是要尽量的去给代码写上注释。</p>
<ol>
<li><p>方便：</p>
<p>很多比较复杂的程序，出现bug是很正常的感觉。如果很长的程序出现了bug，而且还们写注释就会有一种“似曾相识的感觉”，一脸懵逼根本无从下手，根本不敢随意修改。如果加上注释，无论是阅读代码还是修改bug都会方便得多。</p>
</li>
<li><p>规范代码：</p>
<p>很多人代码习惯都很一般（比如我），经常不经意间就写了好些垃圾代码。而写注释的过程就是优化代码的过程，很多垃圾代码都会因为没办法添加注释而被修改、删掉。所以说长期写注释对规范代码也有一定作用。</p>
</li>
<li><p><strong>先设计代码逻辑（框架），再动手写代码</strong></p>
<p>这个相当重要，很多代码其实写代码并不重要。一些复杂的代码只要代码逻辑设计好，框架搭起来，代码也就完成了一大半。剩下的只需要去无脑的堆代码即可。</p>
<p>而且，经常设计代码逻辑也有助于拔高视野，能避免在写体量较大的代码时出现走迷宫一样的困境。</p>
</li>
</ol>
</li>
</ol>
]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>java</tag>
      </tags>
  </entry>
  <entry>
    <title>随机点名小程序</title>
    <url>/2021/10/01/%E9%9A%8F%E6%9C%BA%E7%82%B9%E5%90%8D%E5%B0%8F%E7%A8%8B%E5%BA%8F/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><h2 id="技能使用："><a href="#技能使用：" class="headerlink" title="技能使用："></a>技能使用：</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1. 数组</span><br><span class="line">2. if语句、while语句、for语句</span><br><span class="line">3. random()方法</span><br></pre></td></tr></table></figure>

<h2 id="任务描述："><a href="#任务描述：" class="headerlink" title="任务描述："></a>任务描述：</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">任务描述：</span><br><span class="line"> 设计一个随机点名系统。</span><br><span class="line"> 要求：</span><br><span class="line"> 	（1）抽取数量任意定制</span><br><span class="line"> 	（2）屏幕显示学生班级和顺序号</span><br><span class="line">  *补充说明：</span><br><span class="line">  	一共有4个班，每个班30人。</span><br></pre></td></tr></table></figure>

<h2 id="代码实现："><a href="#代码实现：" class="headerlink" title="代码实现："></a>代码实现：</h2><ul>
<li><p>java</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> one_ten;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> 任务描述：</span></span><br><span class="line"><span class="comment"> 设计一个随机点名系统。</span></span><br><span class="line"><span class="comment"> 要求：</span></span><br><span class="line"><span class="comment"> （1）抽取数量任意定制</span></span><br><span class="line"><span class="comment"> （2）屏幕显示学生班级和顺序号</span></span><br><span class="line"><span class="comment">  *补充说明：</span></span><br><span class="line"><span class="comment">  一共有4个班，每个班30人。</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Random_student</span> </span>&#123;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">		Scanner scan = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">		<span class="comment">//输入抽取同学的个数</span></span><br><span class="line">		System.out.println(<span class="string">&quot;请输入抽取同学的个数（最多抽取99位）：&quot;</span>);</span><br><span class="line">		<span class="keyword">int</span> count = scan.nextInt();</span><br><span class="line">		scan.close();</span><br><span class="line">		<span class="comment">//创建两个数组分别储存班级和学生</span></span><br><span class="line">		<span class="keyword">int</span>[] student = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">100</span>];</span><br><span class="line">		<span class="keyword">int</span>[] classes = <span class="keyword">new</span> <span class="keyword">int</span> [<span class="number">100</span>];</span><br><span class="line">		<span class="comment">//两个while语句的参数</span></span><br><span class="line">		<span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line">		<span class="keyword">int</span> j = <span class="number">0</span>;</span><br><span class="line">		count --;</span><br><span class="line">		</span><br><span class="line">		<span class="keyword">while</span>( i &lt;= count) &#123;</span><br><span class="line">			<span class="comment">//获得一个两位以内的随机数并存储在数组student里</span></span><br><span class="line">			student[i] = (<span class="keyword">int</span>)(Math.random()*<span class="number">100</span>);</span><br><span class="line">			<span class="comment">//限制student的大小（小于30）</span></span><br><span class="line">			<span class="keyword">if</span>(student[i] &gt;= <span class="number">30</span> || student[i] == <span class="number">0</span>)</span><br><span class="line">				i --;</span><br><span class="line">			<span class="comment">//i++补全循环条件</span></span><br><span class="line">			i++;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">while</span>( j &lt;= count) &#123;</span><br><span class="line">			<span class="comment">//获得一个两位以内的随机数并存储在数组classes里</span></span><br><span class="line">			classes[j] = (<span class="keyword">int</span>)(Math.random()*<span class="number">10</span>);</span><br><span class="line">			<span class="comment">//限制classes的大小（小于4且不等于0）</span></span><br><span class="line">			<span class="keyword">if</span>(classes[j] &gt; <span class="number">4</span> || classes[j] == <span class="number">0</span>)</span><br><span class="line">				j --;</span><br><span class="line">			<span class="comment">//j++补全循环条件</span></span><br><span class="line">			j++;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="comment">//整齐的输出数据</span></span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> k = <span class="number">0</span>; k &lt; i; k++) &#123;</span><br><span class="line">			<span class="keyword">if</span>(student[k] &gt;= <span class="number">10</span>) &#123;</span><br><span class="line">				<span class="keyword">if</span>( (k + <span class="number">1</span>) &lt; <span class="number">10</span>)</span><br><span class="line">					System.out.println( <span class="string">&quot;第0&quot;</span> + (k + <span class="number">1</span>) +<span class="string">&quot;位同学的学号是：202030&quot;</span> + classes[k] + student[k] + <span class="string">&quot;   班级：&quot;</span> + classes[k] + <span class="string">&quot;   序号：&quot;</span> + student[k]);</span><br><span class="line">				<span class="keyword">else</span></span><br><span class="line">					System.out.println( <span class="string">&quot;第&quot;</span> + (k + <span class="number">1</span>) +<span class="string">&quot;位同学的学号是：202030&quot;</span> + classes[k] + student[k] + <span class="string">&quot;   班级：&quot;</span> + classes[k] + <span class="string">&quot;   序号：&quot;</span> + student[k]);</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">else</span> &#123;</span><br><span class="line">				<span class="keyword">if</span>( (k + <span class="number">1</span>) &lt; <span class="number">10</span>)</span><br><span class="line">					System.out.println( <span class="string">&quot;第0&quot;</span> + (k + <span class="number">1</span>) +<span class="string">&quot;位同学的学号是：202030&quot;</span> + classes[k] + <span class="string">&quot;0&quot;</span> + student[k] + <span class="string">&quot;   班级：&quot;</span> + classes[k] + <span class="string">&quot;   序号：0&quot;</span> + student[k]);</span><br><span class="line">				<span class="keyword">else</span></span><br><span class="line">					System.out.println( <span class="string">&quot;第&quot;</span> + (k + <span class="number">1</span>) +<span class="string">&quot;位同学的学号是：202030&quot;</span> + classes[k] + <span class="string">&quot;0&quot;</span> + student[k] + <span class="string">&quot;   班级：&quot;</span> + classes[k] + <span class="string">&quot;   序号：0&quot;</span> + student[k]);</span><br><span class="line"></span><br><span class="line">			&#125;	</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></li>
<li><p>运行检测：</p>
<ol>
<li><p>抽取8位同学</p>
<p><img src="https://i.loli.net/2021/10/01/WSznMRjKAkfE2Yq.jpg"></p>
</li>
<li><p>抽取10位同学</p>
<p><img src="https://i.loli.net/2021/10/01/CZNisqy7Gpjt8KJ.jpg"></p>
</li>
<li><p>抽取99位同学</p>
<p><img src="https://i.loli.net/2021/10/01/3fahjQ95EvqGMcu.jpg"></p>
<p><img src="https://i.loli.net/2021/10/01/OGECzL1QNe9uBH4.jpg"></p>
</li>
</ol>
</li>
</ul>
<h2 id="代码自评："><a href="#代码自评：" class="headerlink" title="代码自评："></a>代码自评：</h2><ul>
<li><p>缺点：</p>
<p>没有将重复数据筛选剔除的逻辑，虽然有班级和序号双重保证，但当随机抽取的数量较大时，依旧会出现重复抽取同一位同学的情况。</p>
</li>
<li><p>总结：</p>
<p>只适合小规模随机抽取时使用，如果想要大规模随机抽取则需要添加重复数据的筛选剔除逻辑。</p>
</li>
</ul>
<h2 id="老师评价："><a href="#老师评价：" class="headerlink" title="老师评价："></a>老师评价：</h2><ol>
<li>建议把同一个班的学生放在一起，并对抽到的学生按次序排序。</li>
<li>解决重复数据的问题。</li>
</ol>
<h2 id="Plus版本："><a href="#Plus版本：" class="headerlink" title="Plus版本："></a>Plus版本：</h2><h3 id="任务描述"><a href="#任务描述" class="headerlink" title="任务描述:"></a>任务描述:</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">任务描述：</span><br><span class="line">设计一个随机点名系统。</span><br><span class="line">要求：</span><br><span class="line">（1）抽取数量任意定制</span><br><span class="line">（2）屏幕显示学生班级和顺序号</span><br><span class="line"> *补充说明：</span><br><span class="line"> 一共有4个班，每个班30人。</span><br></pre></td></tr></table></figure>



<h3 id="代码逻辑解释："><a href="#代码逻辑解释：" class="headerlink" title="代码逻辑解释："></a>代码逻辑解释：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">（1）输入阶段：</span><br><span class="line">		输入抽取同学的个数。</span><br><span class="line">（2）随机数获取阶段：</span><br><span class="line">		通过random方法获得两个数组的随机数数据，分别用来表示学生的班级信息和序号信息</span><br><span class="line">（3）排除相同班级，相同次序的同学的数据</span><br><span class="line"> 		难点：相同班级不能排除，不同班级相同次序的同学的数据也不能排除</span><br><span class="line">（4）排序阶段</span><br><span class="line">		通过起泡法排序将学生的序号信息进行从大到小排序，并对对应的班级信息做出相应的变化</span><br><span class="line">（5）输出阶段</span><br><span class="line">		通过使用if语句使学生信息按照四个班分块输出；</span><br><span class="line">		通过使用if和for语句令输出信息变得更加整齐（这个用的代码最多，但都是复制粘贴，外加一些小改动。）</span><br></pre></td></tr></table></figure>

<h3 id="代码实现：-1"><a href="#代码实现：-1" class="headerlink" title="代码实现："></a>代码实现：</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Random_student</span> </span>&#123;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">		Scanner scan = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">		<span class="comment">//输入阶段:</span></span><br><span class="line">		<span class="comment">//输入抽取同学的个数</span></span><br><span class="line">		System.out.println(<span class="string">&quot;请输入抽取同学的个数（最多抽取80位）：&quot;</span>);</span><br><span class="line">		<span class="keyword">int</span> count = scan.nextInt();</span><br><span class="line">		scan.close();</span><br><span class="line">		<span class="comment">//创建两个数组分别储存班级和学生</span></span><br><span class="line">		<span class="keyword">int</span>[] student = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">200</span>];</span><br><span class="line">		<span class="keyword">int</span>[] classes = <span class="keyword">new</span> <span class="keyword">int</span> [<span class="number">200</span>];</span><br><span class="line">		<span class="comment">//两个while语句的参数</span></span><br><span class="line">		<span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line">		<span class="keyword">int</span> j = <span class="number">0</span>;</span><br><span class="line">		count --;</span><br><span class="line">		<span class="comment">//定义一个布尔类型的变量来辅助完成相同数据的筛选提出</span></span><br><span class="line">		<span class="keyword">boolean</span> flag = <span class="keyword">false</span>;</span><br><span class="line">		</span><br><span class="line">		<span class="comment">//随机数获取阶段</span></span><br><span class="line">		<span class="keyword">while</span>( j &lt;= count) &#123;</span><br><span class="line">			<span class="comment">//获得一个两位以内的随机数并存储在数组classes里</span></span><br><span class="line">			classes[j] = (<span class="keyword">int</span>)(Math.random()*<span class="number">10</span>);</span><br><span class="line">			<span class="comment">//限制classes的大小（小于4且不等于0）</span></span><br><span class="line">			<span class="keyword">if</span>(classes[j] &gt; <span class="number">4</span> || classes[j] == <span class="number">0</span>)</span><br><span class="line">				j --;</span><br><span class="line">			<span class="comment">//j++补全循环条件</span></span><br><span class="line">			j++;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">while</span>( i &lt;= count) &#123;</span><br><span class="line">			<span class="comment">//获得一个两位以内的随机数并存储在数组student里</span></span><br><span class="line">			student[i] = (<span class="keyword">int</span>)(Math.random()*<span class="number">100</span>);</span><br><span class="line">			<span class="comment">//限制student的大小（小于30）</span></span><br><span class="line">			<span class="comment">//排除相同班级相同序号的学生数据</span></span><br><span class="line">			<span class="keyword">for</span>(<span class="keyword">int</span> p = <span class="number">0</span>; p &lt; i; p++) &#123;</span><br><span class="line">				<span class="keyword">if</span>(student[p] == student[i] &amp;&amp; classes[p] == classes[i]) &#123;</span><br><span class="line">					flag = <span class="keyword">true</span>;</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">if</span>(student[i] &gt;= <span class="number">30</span> || student[i] == <span class="number">0</span> || flag)</span><br><span class="line">				i --;</span><br><span class="line">			<span class="comment">//i++补全循环条件</span></span><br><span class="line">			i++;</span><br><span class="line">			flag = <span class="keyword">false</span>;<span class="comment">//吐槽：如果没有这一步会死循环</span></span><br><span class="line">		&#125;</span><br><span class="line">		<span class="comment">//排序阶段：</span></span><br><span class="line">		<span class="comment">//对student[]进行从小到大排序，并对classes[]进行相应的变换</span></span><br><span class="line">		<span class="keyword">int</span> length = i;<span class="comment">//student[]和classes[]的长度</span></span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> m = <span class="number">0</span> ; m &lt; length - <span class="number">1</span>; m++) &#123;</span><br><span class="line">			<span class="comment">//循环(length-1)次</span></span><br><span class="line">			<span class="keyword">for</span>(<span class="keyword">int</span> n = <span class="number">0</span>; n &lt; length - <span class="number">1</span> - m; n ++) &#123;</span><br><span class="line">				<span class="keyword">if</span>(student[n] &gt; student[n+<span class="number">1</span>]) &#123;</span><br><span class="line">					<span class="comment">//将小的student[]前移一位</span></span><br><span class="line">					<span class="keyword">int</span> temp1 = student[n];</span><br><span class="line">					student[n] = student[n+<span class="number">1</span>];</span><br><span class="line">					student[n+<span class="number">1</span>] = temp1;</span><br><span class="line">					<span class="comment">//将classes[]同步变换</span></span><br><span class="line">					<span class="keyword">int</span> temp2 = classes[n];</span><br><span class="line">					classes[n] = classes[n+<span class="number">1</span>];</span><br><span class="line">					classes[n+<span class="number">1</span>] = temp2;</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125; </span><br><span class="line">		</span><br><span class="line">		<span class="comment">//输出阶段：</span></span><br><span class="line">		<span class="comment">//整齐的输出数据</span></span><br><span class="line">		<span class="comment">//整齐输出1班抽中的学生的数据</span></span><br><span class="line">		<span class="keyword">int</span> count1 = <span class="number">1</span>;<span class="comment">//定义1班学生的总体序号</span></span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> k1 = <span class="number">0</span>; k1 &lt; i; k1++) &#123;</span><br><span class="line">			<span class="comment">//使学生的学号和班级序号对齐</span></span><br><span class="line">			<span class="keyword">if</span>(classes[k1] == <span class="number">1</span>)&#123;</span><br><span class="line">				<span class="keyword">if</span>(student[k1] &gt;= <span class="number">10</span>) &#123;</span><br><span class="line">					<span class="comment">//使抽取学生的总体序号对齐</span></span><br><span class="line">					<span class="keyword">if</span>( count1 &lt; <span class="number">10</span>)</span><br><span class="line">						System.out.println( <span class="string">&quot;第0&quot;</span> + count1 +<span class="string">&quot;位同学的学号是：202030&quot;</span> + classes[k1] + student[k1] + <span class="string">&quot;   班级：&quot;</span> + classes[k1] + <span class="string">&quot;   序号：&quot;</span> + student[k1]);</span><br><span class="line">					<span class="keyword">else</span></span><br><span class="line">						System.out.println( <span class="string">&quot;第&quot;</span> + count1 +<span class="string">&quot;位同学的学号是：202030&quot;</span> + classes[k1] + student[k1] + <span class="string">&quot;   班级：&quot;</span> + classes[k1] + <span class="string">&quot;   序号：&quot;</span> + student[k1]);</span><br><span class="line">				&#125;</span><br><span class="line">				<span class="keyword">else</span> &#123;</span><br><span class="line">					<span class="comment">//使抽取学生的总体序号对齐</span></span><br><span class="line">					<span class="keyword">if</span>( count1 &lt; <span class="number">10</span>)</span><br><span class="line">						System.out.println( <span class="string">&quot;第0&quot;</span> + count1 +<span class="string">&quot;位同学的学号是：202030&quot;</span> + classes[k1] + <span class="string">&quot;0&quot;</span> + student[k1] + <span class="string">&quot;   班级：&quot;</span> + classes[k1] + <span class="string">&quot;   序号：0&quot;</span> + student[k1]);</span><br><span class="line">					<span class="keyword">else</span></span><br><span class="line">						System.out.println( <span class="string">&quot;第&quot;</span> + count1 +<span class="string">&quot;位同学的学号是：202030&quot;</span> + classes[k1] + <span class="string">&quot;0&quot;</span> + student[k1] + <span class="string">&quot;   班级：&quot;</span> + classes[k1] + <span class="string">&quot;   序号：0&quot;</span> + student[k1]);</span><br><span class="line"></span><br><span class="line">				&#125;</span><br><span class="line">				count1 ++;</span><br><span class="line">			&#125;	</span><br><span class="line">		&#125;</span><br><span class="line">		System.out.println(<span class="string">&quot;1班抽中了 &quot;</span> + (count1 - <span class="number">1</span>) + <span class="string">&quot;位同学&quot;</span>);</span><br><span class="line">		<span class="comment">//整齐输出2班抽中的学生的数据</span></span><br><span class="line">		<span class="keyword">int</span> count2 = count1;</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> k2 = <span class="number">0</span>; k2 &lt; i; k2++) &#123;</span><br><span class="line">			<span class="comment">//使学生的学号和班级序号对齐</span></span><br><span class="line">			<span class="keyword">if</span>(classes[k2] == <span class="number">2</span>)&#123;</span><br><span class="line">				<span class="keyword">if</span>(student[k2] &gt;= <span class="number">10</span>) &#123;</span><br><span class="line">					<span class="comment">//使抽取学生的总体序号对齐</span></span><br><span class="line">					<span class="keyword">if</span>( count2 &lt; <span class="number">10</span>)</span><br><span class="line">						System.out.println( <span class="string">&quot;第0&quot;</span> + count2 +<span class="string">&quot;位同学的学号是：202030&quot;</span> + classes[k2] + student[k2] + <span class="string">&quot;   班级：&quot;</span> + classes[k2] + <span class="string">&quot;   序号：&quot;</span> + student[k2]);</span><br><span class="line">					<span class="keyword">else</span></span><br><span class="line">						System.out.println( <span class="string">&quot;第&quot;</span> + count2 +<span class="string">&quot;位同学的学号是：202030&quot;</span> + classes[k2] + student[k2] + <span class="string">&quot;   班级：&quot;</span> + classes[k2] + <span class="string">&quot;   序号：&quot;</span> + student[k2]);</span><br><span class="line">				&#125;</span><br><span class="line">				<span class="keyword">else</span> &#123;</span><br><span class="line">					<span class="comment">//使抽取学生的总体序号对齐</span></span><br><span class="line">					<span class="keyword">if</span>( count2 &lt; <span class="number">10</span>)</span><br><span class="line">						System.out.println( <span class="string">&quot;第0&quot;</span> + count2 +<span class="string">&quot;位同学的学号是：202030&quot;</span> + classes[k2] + <span class="string">&quot;0&quot;</span> + student[k2] + <span class="string">&quot;   班级：&quot;</span> + classes[k2] + <span class="string">&quot;   序号：0&quot;</span> + student[k2]);</span><br><span class="line">					<span class="keyword">else</span></span><br><span class="line">						System.out.println( <span class="string">&quot;第&quot;</span> + count2 +<span class="string">&quot;位同学的学号是：202030&quot;</span> + classes[k2] + <span class="string">&quot;0&quot;</span> + student[k2] + <span class="string">&quot;   班级：&quot;</span> + classes[k2] + <span class="string">&quot;   序号：0&quot;</span> + student[k2]);</span><br><span class="line">				&#125;</span><br><span class="line">				count2 ++;</span><br><span class="line">			&#125;	</span><br><span class="line">		&#125;</span><br><span class="line">		System.out.println(<span class="string">&quot;2班抽中了 &quot;</span> + (count2 - count1) + <span class="string">&quot;位同学&quot;</span>);</span><br><span class="line">		<span class="comment">//整齐输出3班抽中的学生的数据</span></span><br><span class="line">		<span class="keyword">int</span> count3 = count2;</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> k3 = <span class="number">0</span>; k3 &lt; i; k3++) &#123;</span><br><span class="line">			<span class="comment">//使学生的学号和班级序号对齐</span></span><br><span class="line">			<span class="keyword">if</span>(classes[k3] == <span class="number">3</span>)&#123;</span><br><span class="line">				<span class="keyword">if</span>(student[k3] &gt;= <span class="number">10</span>) &#123;</span><br><span class="line">					<span class="comment">//使抽取学生的总体序号对齐</span></span><br><span class="line">					<span class="keyword">if</span>( count3 &lt; <span class="number">10</span>)</span><br><span class="line">						System.out.println( <span class="string">&quot;第0&quot;</span> + count3 +<span class="string">&quot;位同学的学号是：202030&quot;</span> + classes[k3] + student[k3] + <span class="string">&quot;   班级：&quot;</span> + classes[k3] + <span class="string">&quot;   序号：&quot;</span> + student[k3]);</span><br><span class="line">					<span class="keyword">else</span></span><br><span class="line">						System.out.println( <span class="string">&quot;第&quot;</span> + count3 +<span class="string">&quot;位同学的学号是：202030&quot;</span> + classes[k3] + student[k3] + <span class="string">&quot;   班级：&quot;</span> + classes[k3] + <span class="string">&quot;   序号：&quot;</span> + student[k3]);</span><br><span class="line">				&#125;</span><br><span class="line">				<span class="keyword">else</span> &#123;</span><br><span class="line">					<span class="comment">//使抽取学生的总体序号对齐</span></span><br><span class="line">					<span class="keyword">if</span>( count3 &lt; <span class="number">10</span>)</span><br><span class="line">						System.out.println( <span class="string">&quot;第0&quot;</span> + count3 +<span class="string">&quot;位同学的学号是：202030&quot;</span> + classes[k3] + <span class="string">&quot;0&quot;</span> + student[k3] + <span class="string">&quot;   班级：&quot;</span> + classes[k3] + <span class="string">&quot;   序号：0&quot;</span> + student[k3]);</span><br><span class="line">					<span class="keyword">else</span></span><br><span class="line">						System.out.println( <span class="string">&quot;第&quot;</span> + count3 +<span class="string">&quot;位同学的学号是：202030&quot;</span> + classes[k3] + <span class="string">&quot;0&quot;</span> + student[k3] + <span class="string">&quot;   班级：&quot;</span> + classes[k3] + <span class="string">&quot;   序号：0&quot;</span> + student[k3]);</span><br><span class="line">				&#125;</span><br><span class="line">				count3 ++;</span><br><span class="line">			&#125;	</span><br><span class="line">		&#125;</span><br><span class="line">		System.out.println(<span class="string">&quot;3班抽中了 &quot;</span> + (count3 - count2) + <span class="string">&quot;位同学&quot;</span>);</span><br><span class="line">		<span class="comment">//整齐输出4班抽中的学生的数据</span></span><br><span class="line">		<span class="keyword">int</span> count4 = count3;</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> k4 = <span class="number">0</span>; k4 &lt; i; k4++) &#123;</span><br><span class="line">			<span class="comment">//使学生的学号和班级序号对齐</span></span><br><span class="line">			<span class="keyword">if</span>(classes[k4] == <span class="number">4</span>)&#123;</span><br><span class="line">				<span class="keyword">if</span>(student[k4] &gt;= <span class="number">10</span>) &#123;</span><br><span class="line">					<span class="comment">//使抽取学生的总体序号对齐</span></span><br><span class="line">					<span class="keyword">if</span>( count4 &lt; <span class="number">10</span>)</span><br><span class="line">						System.out.println( <span class="string">&quot;第0&quot;</span> + count4 +<span class="string">&quot;位同学的学号是：202030&quot;</span> + classes[k4] + student[k4] + <span class="string">&quot;   班级：&quot;</span> + classes[k4] + <span class="string">&quot;   序号：&quot;</span> + student[k4]);</span><br><span class="line">					<span class="keyword">else</span></span><br><span class="line">						System.out.println( <span class="string">&quot;第&quot;</span> + count4 +<span class="string">&quot;位同学的学号是：202030&quot;</span> + classes[k4] + student[k4] + <span class="string">&quot;   班级：&quot;</span> + classes[k4] + <span class="string">&quot;   序号：&quot;</span> + student[k4]);</span><br><span class="line">				&#125;</span><br><span class="line">				<span class="keyword">else</span> &#123;</span><br><span class="line">					<span class="comment">//使抽取学生的总体序号对齐</span></span><br><span class="line">					<span class="keyword">if</span>( count4 &lt; <span class="number">10</span>)</span><br><span class="line">						System.out.println( <span class="string">&quot;第0&quot;</span> + count4 +<span class="string">&quot;位同学的学号是：202030&quot;</span> + classes[k4] + <span class="string">&quot;0&quot;</span> + student[k4] + <span class="string">&quot;   班级：&quot;</span> + classes[k4] + <span class="string">&quot;   序号：0&quot;</span> + student[k4]);</span><br><span class="line">					<span class="keyword">else</span></span><br><span class="line">						System.out.println( <span class="string">&quot;第&quot;</span> + count4 +<span class="string">&quot;位同学的学号是：202030&quot;</span> + classes[k4] + <span class="string">&quot;0&quot;</span> + student[k4] + <span class="string">&quot;   班级：&quot;</span> + classes[k4] + <span class="string">&quot;   序号：0&quot;</span> + student[k4]);</span><br><span class="line">				&#125;</span><br><span class="line">				count4 ++;</span><br><span class="line">			&#125;	</span><br><span class="line">		&#125;</span><br><span class="line">		System.out.println(<span class="string">&quot;4班抽中了 &quot;</span> + (count4 - count3) + <span class="string">&quot;位同学&quot;</span>);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="运行检测："><a href="#运行检测：" class="headerlink" title="运行检测："></a>运行检测：</h3><p><img src="https://i.loli.net/2021/10/01/1SjbhLZWOv7yt9w.jpg"></p>
<p><img src="https://i.loli.net/2021/10/01/A7rRvtYGzmjsOLp.jpg"></p>
<p><img src="https://i.loli.net/2021/10/01/NRmrF1Ec8Y72Dvn.jpg"></p>
<h3 id="代码自评：-1"><a href="#代码自评：-1" class="headerlink" title="代码自评："></a>代码自评：</h3><p>Plus版本相比于原版增添了三个功能：</p>
<ol>
<li><p>避免重复抽取同一位同学</p>
<p>Plus版本新增了剔除相同班级、相同序号的数据的逻辑。</p>
</li>
<li><p>数据分块输出</p>
<p>Plus版本可以将输出的数据以班级为依据分四块分别输出。</p>
</li>
<li><p>数据分块排序</p>
<p>Plus版本可以将相同班级的学生以序号为依据，从小到大排序并输出。</p>
<p>总体来说，Plus版本已经具备了一个随机点名小程序的基本功能，除了运行效率不高以外已经没有其他明显的缺点了。</p>
</li>
</ol>
<h3 id="总结（瞎扯两句）："><a href="#总结（瞎扯两句）：" class="headerlink" title="总结（瞎扯两句）："></a>总结（瞎扯两句）：</h3><p>Plus版编写完后的总体感受：太麻烦了，太长了。</p>
<p>只是多了三个功能，但Plus版本相比于原版代码长度增加了2倍，代码量是原版的足足三倍。</p>
<p>但是也没什么办法，只用最基本的流程控制和数组去写程序确实没办法过于简洁，这个问题只有学了面向对象的知识后才能轻松的解决。</p>
<p>总而言之，就是赶紧学面向对象吧，现在连新手村还没出呢！</p>
<p><img src="https://i.loli.net/2021/10/01/kTLIiZq7RQXoW43.jpg"></p>
]]></content>
      <categories>
        <category>小程序实践</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>小程序实践</tag>
      </tags>
  </entry>
  <entry>
    <title>删除线性表中第i个位置的元素</title>
    <url>/2021/09/30/%E5%88%A0%E9%99%A4%E7%BA%BF%E6%80%A7%E8%A1%A8%E4%B8%AD%E7%AC%ACi%E4%B8%AA%E4%BD%8D%E7%BD%AE%E7%9A%84%E5%85%83%E7%B4%A0(%E9%A1%BA%E5%BA%8F%E7%BB%93%E6%9E%84)/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><h2 id="operation"><a href="#operation" class="headerlink" title="operation"></a>operation</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">InitList(L):初始化线性表。</span><br><span class="line">ListInsert(*L, i, e)；在线性表第i个位置插入新元素e。</span><br><span class="line">ListDelet(*L, i, *e):删除线性表第i个元素，并用e返回其值。</span><br></pre></td></tr></table></figure>

<h2 id="任务"><a href="#任务" class="headerlink" title="任务"></a>任务</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">1.定义线性表类型的对象L。</span></span><br><span class="line"><span class="comment">2.初始化线性表L，并输出其长度。</span></span><br><span class="line"><span class="comment">3.在表头依次插入1~5，输出其长度，并判断L是否为空。</span></span><br><span class="line"><span class="comment">4.删除第3个元素。</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>

<h3 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h3><ul>
<li><p>C</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> OK 1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ERROR 0</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> TRUE 1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> FALSE 0</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXSIZE 20</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">int</span> ElemType;<span class="comment">//抽象数据类型，是线性表中数据元素的数据类型。</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">int</span> Status;<span class="comment">//抽象数据类型，是函数返回值的类型</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    ElemType data[MAXSIZE];</span><br><span class="line">    <span class="keyword">int</span> length;</span><br><span class="line">&#125;SqList;</span><br><span class="line"><span class="comment">//初始化线性表</span></span><br><span class="line"><span class="function">Status <span class="title">InitList</span><span class="params">(SqList L)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	L.length = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">return</span> OK;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//将线性表中第i个位置插入新元素e</span></span><br><span class="line"><span class="function">Status <span class="title">ListInsert</span><span class="params">(SqList *L, <span class="keyword">int</span> i, ElemType e)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> k;</span><br><span class="line">    <span class="comment">//判断线性表是否已满  </span></span><br><span class="line">    <span class="keyword">if</span>(L-&gt;length == MAXSIZE)</span><br><span class="line">        <span class="keyword">return</span>  ERROR;</span><br><span class="line">    <span class="keyword">if</span>(i &lt; <span class="number">1</span> || i &gt; L-&gt;length+<span class="number">1</span>)<span class="comment">//判断i是否有效</span></span><br><span class="line">        <span class="keyword">return</span> ERROR;</span><br><span class="line">    <span class="keyword">if</span>(i &lt;= L-&gt;length)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//将第i个位置及其之后的元素后移一位</span></span><br><span class="line">        <span class="keyword">for</span>(k = L-&gt;length<span class="number">-1</span>;k &gt;= i<span class="number">-1</span>; k--)</span><br><span class="line">        &#123;</span><br><span class="line">            L-&gt;data[k+<span class="number">1</span>] = L-&gt;data[k];</span><br><span class="line">        &#125;</span><br><span class="line">	&#125;</span><br><span class="line">    <span class="comment">//将新元素插入</span></span><br><span class="line">    L-&gt;data[i<span class="number">-1</span>] = e;</span><br><span class="line">    <span class="comment">//更新线性表的长度</span></span><br><span class="line">    L-&gt;length ++;</span><br><span class="line">    <span class="keyword">return</span> OK;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//删除线性表第i个元素，并且用e返回</span></span><br><span class="line">ListDelet(SqList *L, <span class="keyword">int</span> i, ElemType *e)</span><br><span class="line">&#123;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    SqList L;<span class="comment">//定义一个顺序结构的线性表。</span></span><br><span class="line">    Status i;</span><br><span class="line">    </span><br><span class="line">    i = InitList(L);<span class="comment">//初始化线性表L。</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;L.length = %d\n&quot;</span>,L.length);</span><br><span class="line">    <span class="comment">//在表头依次插入1~5</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>; j &lt;= <span class="number">5</span>; j++)&#123;</span><br><span class="line">        ListInsert(&amp;L, <span class="number">1</span>, j); </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;L.length = %d\n&quot;</span>,L.length);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
<li><p>C++</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">  </span><br></pre></td></tr></table></figure></li>
<li><p>java</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure></li>
</ul>
]]></content>
      <categories>
        <category>数据结构与算法</category>
      </categories>
      <tags>
        <tag>学习笔记</tag>
        <tag>数据结构与算法</tag>
      </tags>
  </entry>
  <entry>
    <title>获取顺序线性表某个位置的元素</title>
    <url>/2021/09/30/%E8%8E%B7%E5%8F%96%E7%BA%BF%E6%80%A7%E8%A1%A8%E6%9F%90%E4%B8%AA%E4%BD%8D%E7%BD%AE%E7%9A%84%E5%85%83%E7%B4%A0%EF%BC%88%E9%A1%BA%E5%BA%8F%E7%BB%93%E6%9E%84%EF%BC%89/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script>]]></content>
  </entry>
  <entry>
    <title>Java中如何输出char字符</title>
    <url>/2021/09/28/Java%E4%B8%AD%E5%A6%82%E4%BD%95%E8%BE%93%E5%87%BAchar%E5%AD%97%E7%AC%A6/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><blockquote>
<p>参考价值：已完结、无错误、可以参考</p>
</blockquote>
<hr>
<h3 id="情景回顾："><a href="#情景回顾：" class="headerlink" title="情景回顾："></a>情景回顾：</h3><p>今天练习switch_case，遇到这么一个题：</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">使用 switch 把小写类型的 char型转为大写。只转换 a, b, c, d, e. 其它的输</span></span><br><span class="line"><span class="comment">出 “other”。</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>

<p>在这道题中，我们就不得不输入char类型的字符。</p>
<h3 id="问题描述："><a href="#问题描述：" class="headerlink" title="问题描述："></a>问题描述：</h3><p>在Java中我们通过Scanner类来完成输入操作，然而Scanner中没有char类型对应的方法。</p>
<h3 id="解决方法："><a href="#解决方法：" class="headerlink" title="解决方法："></a>解决方法：</h3><p>既然我们无法通过Scanner类的方法来输入char类型，那么我们可以通过其他类的方法来完成char字符的输入。</p>
<p>String类是有一个一个的字符组成的，如果我们能获得String类的一个字符就能够获得char类型的字符，而String类也提供了这样的方法: charAt</p>
<h4 id="API文档描述："><a href="#API文档描述：" class="headerlink" title="API文档描述："></a>API文档描述：</h4><p><img src="https://i.loli.net/2021/09/28/TGUHu97B8KqbrXE.jpg"></p>
<h3 id="代码实现："><a href="#代码实现：" class="headerlink" title="代码实现："></a>代码实现：</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Scanner_char_test</span> </span>&#123;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">		Scanner scan = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">		<span class="comment">//输入一个char类型</span></span><br><span class="line">		System.out.println(<span class="string">&quot;请输入一个字母：&quot;</span>);</span><br><span class="line">		String str = scan.nextLine();</span><br><span class="line">		<span class="keyword">char</span> alphabet = str.charAt(<span class="number">0</span>);</span><br><span class="line">		<span class="comment">//输出输入的结果</span></span><br><span class="line">		System.out.println(<span class="string">&quot;您输入的字母是：&quot;</span> + alphabet);</span><br><span class="line">		<span class="comment">//释放scan申请的空间</span></span><br><span class="line">		scan.close();</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="代码测试"><a href="#代码测试" class="headerlink" title="代码测试"></a>代码测试</h3><p><img src="https://i.loli.net/2021/09/28/cDahyjPEBIvVlM8.jpg"></p>
]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>踩坑小记录</tag>
      </tags>
  </entry>
  <entry>
    <title>查找线性表中是否有某元素（顺序结构）</title>
    <url>/2021/09/27/%E6%9F%A5%E6%89%BE%E7%BA%BF%E6%80%A7%E8%A1%A8%E4%B8%AD%E7%BB%99%E6%98%AF%E5%90%A6%E6%9C%89%E6%9F%90%E5%85%83%E7%B4%A0%EF%BC%88%E9%A1%BA%E5%BA%8F%E7%BB%93%E6%9E%84%EF%BC%89/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><h2 id="operation"><a href="#operation" class="headerlink" title="operation"></a>operation</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">InitList(L):初始化线性表</span><br><span class="line">ListInsert(*L, i, e):在线性表中的第i个位置插入新元素e</span><br><span class="line">LocateElem(L, e):查找线性表中是否有某元素</span><br></pre></td></tr></table></figure>

<h2 id="任务"><a href="#任务" class="headerlink" title="任务"></a>任务</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">1.定义线性表类型的对象L。</span></span><br><span class="line"><span class="comment">2.初始化线性表L，并输出其长度。</span></span><br><span class="line"><span class="comment">3.在表头依次插入1~5，输出其长度，并判断L是否为空。</span></span><br><span class="line"><span class="comment">4.判断元素3在不在L中，若在，则输出其位置，若不在，则输出”没有该元素“；</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>

<h2 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h2><ul>
<li><p>C</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> OK 1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ERROR 0</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> TRUE 1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> FALSE 0</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXSIZE 20</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">int</span> ElemType;<span class="comment">//抽象数据类型，是线性表中数据元素的数据类型。</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">int</span> Status;<span class="comment">//抽象数据类型，是函数返回值的类型</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    ElemType data[MAXSIZE];</span><br><span class="line">    <span class="keyword">int</span> length;</span><br><span class="line">&#125;SqList;</span><br><span class="line"><span class="comment">//初始化线性表</span></span><br><span class="line"><span class="function">Status <span class="title">InitList</span><span class="params">(SqList L)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	L.length = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">return</span> OK;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//将线性表中第i个位置插入新元素e</span></span><br><span class="line"><span class="function">Status <span class="title">ListInsert</span><span class="params">(SqList *L, <span class="keyword">int</span> i, ElemType e)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> k;</span><br><span class="line">    <span class="comment">//判断线性表是否已满  </span></span><br><span class="line">    <span class="keyword">if</span>(L-&gt;length == MAXSIZE)</span><br><span class="line">        <span class="keyword">return</span>  ERROR;</span><br><span class="line">    <span class="keyword">if</span>(i &lt; <span class="number">1</span> || i &gt; L-&gt;length+<span class="number">1</span>)<span class="comment">//判断i是否有效</span></span><br><span class="line">        <span class="keyword">return</span> ERROR;</span><br><span class="line">    <span class="keyword">if</span>(i &lt;= L-&gt;length)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//将第i个位置及其之后的元素后移一位</span></span><br><span class="line">        <span class="keyword">for</span>(k = L-&gt;length<span class="number">-1</span>;k &gt;= i<span class="number">-1</span>; k--)</span><br><span class="line">        &#123;</span><br><span class="line">            L-&gt;data[k+<span class="number">1</span>] = L-&gt;data[k];</span><br><span class="line">        &#125;</span><br><span class="line">	&#125;</span><br><span class="line">    <span class="comment">//将新元素插入</span></span><br><span class="line">    L-&gt;data[i<span class="number">-1</span>] = e;</span><br><span class="line">    <span class="comment">//更新线性表的长度</span></span><br><span class="line">    L-&gt;length ++;</span><br><span class="line">    <span class="keyword">return</span> OK;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//查找线性表中是否有某元素</span></span><br><span class="line"><span class="function">Status <span class="title">LocateElem</span><span class="params">(SqList L, ElemType e)</span></span></span><br><span class="line"><span class="function"></span>&#123;	</span><br><span class="line">	<span class="keyword">int</span> i;</span><br><span class="line">    <span class="comment">//判断线性表是否为空</span></span><br><span class="line">    <span class="keyword">if</span>(L.length == <span class="number">0</span>)</span><br><span class="line">        <span class="keyword">return</span> ERROR;</span><br><span class="line">    <span class="comment">//在线性表中寻找数据元素e，并获取其位置</span></span><br><span class="line">    <span class="keyword">for</span>(i = <span class="number">0</span>;i &lt; L.length; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(L.data[i] == e)</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//返回数据元素e在线性表的位置</span></span><br><span class="line">    <span class="keyword">return</span> (i+<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    SqList L;<span class="comment">//定义一个顺序结构的线性表。</span></span><br><span class="line">    Status i;</span><br><span class="line">    </span><br><span class="line">    i = InitList(L);<span class="comment">//初始化线性表L。</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;L.length = %d\n&quot;</span>,L.length);</span><br><span class="line">    <span class="comment">//在表头依次插入1~5</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>; j &lt;= <span class="number">5</span>; j++)&#123;</span><br><span class="line">        ListInsert(&amp;L, <span class="number">1</span>, j); </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;L.length = %d\n&quot;</span>,L.length);</span><br><span class="line">    <span class="comment">//判断元素3在不在L中，若在，则输出其位置，若不在，则输出”没有该元素“；</span></span><br><span class="line">    <span class="keyword">int</span> k = LocateElem(L, <span class="number">3</span>);</span><br><span class="line">        <span class="keyword">if</span>(k)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;第%d个元素的值为3\n&quot;</span>,k);</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;没有值为3的元素\n&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
<li><p>C++</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> OK 1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ERROR 0</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> TRUE 1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> FALSE 0</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXSIZE 20</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">int</span> ElemType;<span class="comment">//抽象数据类型，是线性表中数据元素的数据类型。</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">int</span> Status;<span class="comment">//抽象数据类型，是函数返回值的类型</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    ElemType data[MAXSIZE];</span><br><span class="line">    <span class="keyword">int</span> length;</span><br><span class="line">&#125;SqList;</span><br><span class="line"><span class="comment">//初始化线性表</span></span><br><span class="line"><span class="function">Status <span class="title">InitList</span><span class="params">(SqList L)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	L.length = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">return</span> OK;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//将线性表中第i个位置插入新元素e</span></span><br><span class="line"><span class="function">Status <span class="title">ListInsert</span><span class="params">(SqList *L, <span class="keyword">int</span> i, ElemType e)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> k;</span><br><span class="line">    <span class="comment">//判断线性表是否已满  </span></span><br><span class="line">    <span class="keyword">if</span>(L-&gt;length == MAXSIZE)</span><br><span class="line">        <span class="keyword">return</span>  ERROR;</span><br><span class="line">    <span class="keyword">if</span>(i &lt; <span class="number">1</span> || i &gt; L-&gt;length+<span class="number">1</span>)<span class="comment">//判断i是否有效</span></span><br><span class="line">        <span class="keyword">return</span> ERROR;</span><br><span class="line">    <span class="keyword">if</span>(i &lt;= L-&gt;length)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//将第i个位置及其之后的元素后移一位</span></span><br><span class="line">        <span class="keyword">for</span>(k = L-&gt;length<span class="number">-1</span>;k &gt;= i<span class="number">-1</span>; k--)</span><br><span class="line">        &#123;</span><br><span class="line">            L-&gt;data[k+<span class="number">1</span>] = L-&gt;data[k];</span><br><span class="line">        &#125;</span><br><span class="line">	&#125;</span><br><span class="line">    <span class="comment">//将新元素插入</span></span><br><span class="line">    L-&gt;data[i<span class="number">-1</span>] = e;</span><br><span class="line">    <span class="comment">//更新线性表的长度</span></span><br><span class="line">    L-&gt;length ++;</span><br><span class="line">    <span class="keyword">return</span> OK;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//查找线性表中是否有某元素</span></span><br><span class="line"><span class="function">Status <span class="title">LocateElem</span><span class="params">(SqList L, ElemType e)</span></span></span><br><span class="line"><span class="function"></span>&#123;	</span><br><span class="line">	<span class="keyword">int</span> i;</span><br><span class="line">    <span class="comment">//判断线性表是否为空</span></span><br><span class="line">    <span class="keyword">if</span>(L.length == <span class="number">0</span>)</span><br><span class="line">        <span class="keyword">return</span> ERROR;</span><br><span class="line">    <span class="comment">//在线性表中寻找数据元素e，并获取其位置</span></span><br><span class="line">    <span class="keyword">for</span>(i = <span class="number">0</span>;i &lt; L.length; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(L.data[i] == e)</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//返回数据元素e在线性表的位置</span></span><br><span class="line">    <span class="keyword">return</span> (i+<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    SqList L;<span class="comment">//定义一个顺序结构的线性表。</span></span><br><span class="line">    Status i;</span><br><span class="line">    </span><br><span class="line">    i = <span class="built_in">InitList</span>(L);<span class="comment">//初始化线性表L。</span></span><br><span class="line">    cout&lt;&lt; <span class="string">&quot;L.length = &quot;</span>&lt;&lt; L.length &lt;&lt; endl;</span><br><span class="line">    <span class="comment">//在表头依次插入1~5</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>; j &lt;= <span class="number">5</span>; j++)&#123;</span><br><span class="line">        <span class="built_in">ListInsert</span>(&amp;L, <span class="number">1</span>, j); </span><br><span class="line">    &#125;</span><br><span class="line">    cout&lt;&lt; <span class="string">&quot;L.length = &quot;</span> &lt;&lt; L.length &lt;&lt; endl;</span><br><span class="line">    <span class="comment">//判断元素3在不在L中，若在，则输出其位置，若不在，则输出”没有该元素“；</span></span><br><span class="line">    <span class="keyword">int</span> k = <span class="built_in">LocateElem</span>(L, <span class="number">3</span>);</span><br><span class="line">        <span class="keyword">if</span>(k)</span><br><span class="line">            cout&lt;&lt; <span class="string">&quot;第&quot;</span> &lt;&lt; k &lt;&lt; <span class="string">&quot;个元素的值为3\n&quot;</span> &lt;&lt; endl;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            cout&lt;&lt; <span class="string">&quot;没有值为3的元素&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
<li><p>java</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure></li>
</ul>
]]></content>
      <categories>
        <category>数据结构与算法</category>
      </categories>
      <tags>
        <tag>学习笔记</tag>
        <tag>数据结构与算法</tag>
      </tags>
  </entry>
  <entry>
    <title>线性表的输出（顺序结构）</title>
    <url>/2021/09/27/%E7%BA%BF%E6%80%A7%E8%A1%A8%E7%9A%84%E8%BE%93%E5%87%BA%EF%BC%88%E9%A1%BA%E5%BA%8F%E7%BB%93%E6%9E%84%EF%BC%89/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script>]]></content>
  </entry>
  <entry>
    <title>清空线性表（顺序结构）</title>
    <url>/2021/09/27/%E6%B8%85%E7%A9%BA%E7%BA%BF%E6%80%A7%E8%A1%A8%EF%BC%88%E9%A1%BA%E5%BA%8F%E7%BB%93%E6%9E%84%EF%BC%89/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><h2 id="Operation"><a href="#Operation" class="headerlink" title="Operation"></a>Operation</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">InitList(L):初始化线性表</span><br><span class="line">ListInsert(*L, i, e):在线性表的第i个位置插入新元素e</span><br><span class="line">ClearList(*L):将线性表清空。</span><br></pre></td></tr></table></figure>

<h2 id="任务"><a href="#任务" class="headerlink" title="任务"></a>任务</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">1.定义线性表类型的对象L。</span></span><br><span class="line"><span class="comment">2.初始化线性表L，并输出其长度。</span></span><br><span class="line"><span class="comment">3.在表头依次插入1~5，输出其长度，并判断L是否为空。</span></span><br><span class="line"><span class="comment">4.清空L，输出其长度，</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>

<h2 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h2><ul>
<li><p>C</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> OK 1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ERROR 0</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> TRUE 1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> FALSE 0</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXSIZE 20</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">int</span> ElemType;<span class="comment">//抽象数据类型，是线性表中数据元素的数据类型。</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">int</span> Status;<span class="comment">//抽象数据类型，是函数返回值的类型</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    ElemType data[MAXSIZE];</span><br><span class="line">    <span class="keyword">int</span> length;</span><br><span class="line">&#125;SqList;</span><br><span class="line"><span class="comment">//初始化线性表</span></span><br><span class="line"><span class="function">Status <span class="title">InitList</span><span class="params">(SqList L)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	L.length = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">return</span> OK;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//将线性表中第i个位置插入新元素e</span></span><br><span class="line"><span class="function">Status <span class="title">ListInsert</span><span class="params">(SqList *L, <span class="keyword">int</span> i, ElemType e)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> k;</span><br><span class="line">    <span class="comment">//判断线性表是否已满  </span></span><br><span class="line">    <span class="keyword">if</span>(L-&gt;length == MAXSIZE)</span><br><span class="line">        <span class="keyword">return</span>  ERROR;</span><br><span class="line">    <span class="keyword">if</span>(i &lt; <span class="number">1</span> || i &gt; L-&gt;length+<span class="number">1</span>)<span class="comment">//判断i是否有效</span></span><br><span class="line">        <span class="keyword">return</span> ERROR;</span><br><span class="line">    <span class="keyword">if</span>(i &lt;= L-&gt;length)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//将第i个位置及其之后的元素后移一位</span></span><br><span class="line">        <span class="keyword">for</span>(k = L-&gt;length<span class="number">-1</span>;k &gt;= i<span class="number">-1</span>; k--)</span><br><span class="line">        &#123;</span><br><span class="line">            L-&gt;data[k+<span class="number">1</span>] = L-&gt;data[k];</span><br><span class="line">        &#125;</span><br><span class="line">	&#125;</span><br><span class="line">    <span class="comment">//将新元素插入</span></span><br><span class="line">    L-&gt;data[i<span class="number">-1</span>] = e;</span><br><span class="line">    <span class="comment">//更新线性表的长度</span></span><br><span class="line">    L-&gt;length ++;</span><br><span class="line">    <span class="keyword">return</span> OK;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//清空线性表</span></span><br><span class="line"><span class="function">Status <span class="title">ClearList</span><span class="params">(SqList *L)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    L-&gt;length = <span class="number">0</span>;<span class="comment">//将线性表重置为空表</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> OK;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    SqList L;<span class="comment">//定义一个顺序结构的线性表。</span></span><br><span class="line">    Status i;</span><br><span class="line">    </span><br><span class="line">    i = InitList(L);<span class="comment">//初始化线性表L。</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;L.length = %d\n&quot;</span>,L.length);</span><br><span class="line">    <span class="comment">//在表头依次插入1~5</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>; j &lt;= <span class="number">5</span>; j++)&#123;</span><br><span class="line">        ListInsert(&amp;L, <span class="number">1</span>, j); </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;L.length = %d\n&quot;</span>,L.length);</span><br><span class="line">    <span class="comment">//清空线性表</span></span><br><span class="line">    ClearList(&amp;L);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;L.length = &quot;</span>,L.length);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
<li><p>C++</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> OK 1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ERROR 0</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> TRUE 1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> FALSE 0</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXSIZE 20</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">int</span> ElemType;<span class="comment">//抽象数据类型，是线性表中数据元素的数据类型。</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">int</span> Status;<span class="comment">//抽象数据类型，是函数返回值的类型</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    ElemType data[MAXSIZE];</span><br><span class="line">    <span class="keyword">int</span> length;</span><br><span class="line">&#125;SqList;</span><br><span class="line"><span class="comment">//初始化线性表</span></span><br><span class="line"><span class="function">Status <span class="title">InitList</span><span class="params">(SqList L)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	L.length = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">return</span> OK;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//将线性表中第i个位置插入新元素e</span></span><br><span class="line"><span class="function">Status <span class="title">ListInsert</span><span class="params">(SqList *L, <span class="keyword">int</span> i, ElemType e)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> k;</span><br><span class="line">    <span class="comment">//判断线性表是否已满  </span></span><br><span class="line">    <span class="keyword">if</span>(L-&gt;length == MAXSIZE)</span><br><span class="line">        <span class="keyword">return</span>  ERROR;</span><br><span class="line">    <span class="keyword">if</span>(i &lt; <span class="number">1</span> || i &gt; L-&gt;length+<span class="number">1</span>)<span class="comment">//判断i是否有效</span></span><br><span class="line">        <span class="keyword">return</span> ERROR;</span><br><span class="line">    <span class="keyword">if</span>(i &lt;= L-&gt;length)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//将第i个位置及其之后的元素后移一位</span></span><br><span class="line">        <span class="keyword">for</span>(k = L-&gt;length<span class="number">-1</span>;k &gt;= i<span class="number">-1</span>; k--)</span><br><span class="line">        &#123;</span><br><span class="line">            L-&gt;data[k+<span class="number">1</span>] = L-&gt;data[k];</span><br><span class="line">        &#125;</span><br><span class="line">	&#125;</span><br><span class="line">    <span class="comment">//将新元素插入</span></span><br><span class="line">    L-&gt;data[i<span class="number">-1</span>] = e;</span><br><span class="line">    <span class="comment">//更新线性表的长度</span></span><br><span class="line">    L-&gt;length ++;</span><br><span class="line">    <span class="keyword">return</span> OK;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//清空线性表</span></span><br><span class="line"><span class="function">Status <span class="title">ClearList</span><span class="params">(SqList *L)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    L-&gt;length = <span class="number">0</span>;<span class="comment">//将线性表重置为空表</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> OK;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    SqList L;<span class="comment">//定义一个顺序结构的线性表。</span></span><br><span class="line">    Status i;</span><br><span class="line">    </span><br><span class="line">    i = <span class="built_in">InitList</span>(L);<span class="comment">//初始化线性表L。</span></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;L.length = &quot;</span> &lt;&lt; L.length &lt;&lt; endl;</span><br><span class="line">    <span class="comment">//在表头依次插入1~5</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>; j &lt;= <span class="number">5</span>; j++)&#123;</span><br><span class="line">        <span class="built_in">ListInsert</span>(&amp;L, <span class="number">1</span>, j); </span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;L.length = &quot;</span> &lt;&lt; L.length &lt;&lt; endl;</span><br><span class="line">    <span class="comment">//清空线性表</span></span><br><span class="line">    <span class="built_in">ClearList</span>(&amp;L);</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;L.length = &quot;</span> &lt;&lt; L.length &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
<li><p>java</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">  </span><br></pre></td></tr></table></figure></li>
</ul>
]]></content>
      <categories>
        <category>数据结构与算法</category>
      </categories>
      <tags>
        <tag>学习笔记</tag>
        <tag>数据结构与算法</tag>
      </tags>
  </entry>
  <entry>
    <title>判断线性表是否为空（顺序结构）</title>
    <url>/2021/09/27/%E5%88%A4%E6%96%AD%E7%BA%BF%E6%80%A7%E8%A1%A8%E6%98%AF%E5%90%A6%E4%B8%BA%E7%A9%BA%EF%BC%88%E9%A1%BA%E5%BA%8F%E7%BB%93%E6%9E%84%EF%BC%89/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><h2 id="operation"><a href="#operation" class="headerlink" title="operation"></a>operation</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">InitList(L): 初始化线性表</span><br><span class="line">ListEmpty(L): 判断线性表是否为空</span><br></pre></td></tr></table></figure>

<h2 id="任务"><a href="#任务" class="headerlink" title="任务"></a>任务</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">1.定义线性表类型的对象L。</span></span><br><span class="line"><span class="comment">2.初始化线性表L，并输出其长度。</span></span><br><span class="line"><span class="comment">3.判断线性表是否为空。</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>

<h2 id="代码实现："><a href="#代码实现：" class="headerlink" title="代码实现："></a>代码实现：</h2><h3 id="C"><a href="#C" class="headerlink" title="C"></a>C</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> OK 1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ERROR 0</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> TRUE 1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> FALSE 0</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXSIZE 20</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">int</span> ElemType;<span class="comment">//抽象数据类型，是线性表中数据元素的数据类型。</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">int</span> Status;<span class="comment">//抽象数据类型，是函数返回值的类型</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    ElemType data[MAXSIZE];</span><br><span class="line">    <span class="keyword">int</span> length;</span><br><span class="line">&#125;SqList;</span><br><span class="line"></span><br><span class="line"><span class="function">Status <span class="title">InitList</span><span class="params">(SqList L)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	L.length = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">return</span> OK;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">Status <span class="title">ListEmpty</span><span class="params">(SqList L)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(L.length == <span class="number">0</span>)</span><br><span class="line">        <span class="keyword">return</span> TRUE;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="keyword">return</span> FALSE;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    SqList L;<span class="comment">//定义一个顺序结构的线性表。</span></span><br><span class="line">    Status i;</span><br><span class="line">    </span><br><span class="line">    i = InitList(L);<span class="comment">//初始化线性表L。</span></span><br><span class="line">    </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;L.length = %d\n&quot;</span>,L.length);<span class="comment">//输出线性表的长度。</span></span><br><span class="line">    </span><br><span class="line">    i = ListEmpty(L);<span class="comment">//判断线性表是否为空</span></span><br><span class="line">    </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;L是否为空？i=%d（1：是 0：否）\n&quot;</span>,i);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h3 id="C-1"><a href="#C-1" class="headerlink" title="C++"></a>C++</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> OK 1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ERROR 0</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> TRUE 1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> FALSE 0</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXSIZE 20</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">int</span> ElemType;<span class="comment">//抽象数据类型，是线性表中数据元素的数据类型。</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">int</span> Status;<span class="comment">//抽象数据类型，是函数返回值的类型</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    ElemType data[MAXSIZE];</span><br><span class="line">    <span class="keyword">int</span> length;</span><br><span class="line">&#125;SqList;</span><br><span class="line"></span><br><span class="line"><span class="function">Status <span class="title">InitList</span><span class="params">(SqList L)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	L.length = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">return</span> OK;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">Status <span class="title">ListEmpty</span><span class="params">(SqList L)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(L.length == <span class="number">0</span>)</span><br><span class="line">        <span class="keyword">return</span> TRUE;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="keyword">return</span> FALSE;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    SqList L;<span class="comment">//定义一个顺序结构的线性表。</span></span><br><span class="line">    Status i;</span><br><span class="line">    </span><br><span class="line">    i = <span class="built_in">InitList</span>(L);<span class="comment">//初始化线性表L。</span></span><br><span class="line">    </span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;L.length = &quot;</span>&lt;&lt;L.length&lt;&lt;endl;<span class="comment">//输出线性表的长度。</span></span><br><span class="line">    </span><br><span class="line">    i = <span class="built_in">ListEmpty</span>(L);<span class="comment">//判断线性表是否为空</span></span><br><span class="line">    </span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;L是否为空？i=&quot;</span>&lt;&lt; i &lt;&lt;<span class="string">&quot;（1：是 0：否）&quot;</span>&lt;&lt;endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>数据结构与算法</category>
      </categories>
      <tags>
        <tag>学习笔记</tag>
        <tag>数据结构与算法</tag>
      </tags>
  </entry>
  <entry>
    <title>线性表的插入（顺序结构）</title>
    <url>/2021/09/27/%E7%BA%BF%E6%80%A7%E8%A1%A8%E7%9A%84%E6%8F%92%E5%85%A5%EF%BC%88%E9%A1%BA%E5%BA%8F%E7%BB%93%E6%9E%84%EF%BC%89/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><h2 id="Operation"><a href="#Operation" class="headerlink" title="Operation"></a>Operation</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">InitList(L):初始化线性表</span><br><span class="line">ListInsert(L,i,e):在线性表的第i个位置插入新元素e</span><br></pre></td></tr></table></figure>

<h2 id="任务"><a href="#任务" class="headerlink" title="任务"></a>任务</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">1.定义线性表类型的对象L。</span></span><br><span class="line"><span class="comment">2.初始化线性表L，并输出其长度。</span></span><br><span class="line"><span class="comment">3.在表头依次插入1~5，输出其长度，并判断L是否为空。</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>

<h2 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h2><ul>
<li><p>C</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> OK 1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ERROR 0</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> TRUE 1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> FALSE 0</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXSIZE 20</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">int</span> ElemType;<span class="comment">//抽象数据类型，是线性表中数据元素的数据类型。</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">int</span> Status;<span class="comment">//抽象数据类型，是函数返回值的类型</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    ElemType data[MAXSIZE];</span><br><span class="line">    <span class="keyword">int</span> length;</span><br><span class="line">&#125;SqList;</span><br><span class="line"><span class="comment">//初始化线性表</span></span><br><span class="line"><span class="function">Status <span class="title">InitList</span><span class="params">(SqList L)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	L.length = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">return</span> OK;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//将线性表中第i个位置插入新元素e</span></span><br><span class="line"><span class="function">Status <span class="title">ListInsert</span><span class="params">(SqList *L, <span class="keyword">int</span> i, ElemType e)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> k;</span><br><span class="line">    <span class="comment">//判断线性表是否已满  </span></span><br><span class="line">    <span class="keyword">if</span>(L-&gt;length == MAXSIZE)</span><br><span class="line">        <span class="keyword">return</span>  ERROR;</span><br><span class="line">    <span class="keyword">if</span>(i &lt; <span class="number">1</span> || i &gt; L-&gt;length+<span class="number">1</span>)<span class="comment">//判断i是否有效</span></span><br><span class="line">        <span class="keyword">return</span> ERROR;</span><br><span class="line">    <span class="keyword">if</span>(i &lt;= L-&gt;length)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//将第i个位置及其之后的元素后移一位</span></span><br><span class="line">        <span class="keyword">for</span>(k = L-&gt;length<span class="number">-1</span>;k &gt;= i<span class="number">-1</span>; k--)</span><br><span class="line">        &#123;</span><br><span class="line">            L-&gt;data[k+<span class="number">1</span>] = L-&gt;data[k];</span><br><span class="line">        &#125;</span><br><span class="line">	&#125;</span><br><span class="line">    <span class="comment">//将新元素插入</span></span><br><span class="line">    L-&gt;data[i<span class="number">-1</span>] = e;</span><br><span class="line">    <span class="comment">//更新线性表的长度</span></span><br><span class="line">    L-&gt;length ++;</span><br><span class="line">    <span class="keyword">return</span> OK;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    SqList L;<span class="comment">//定义一个顺序结构的线性表。</span></span><br><span class="line">    Status i;</span><br><span class="line">    </span><br><span class="line">    i = InitList(L);<span class="comment">//初始化线性表L。</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;L.length = %d\n&quot;</span>,L.length);</span><br><span class="line">    <span class="comment">//在表头依次插入1~5</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>; j &lt;= <span class="number">5</span>; j++)&#123;</span><br><span class="line">        ListInsert(&amp;L, <span class="number">1</span>, j); </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;L.length = %d\n&quot;</span>,L.length);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
<li><p>C++</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> OK 1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ERROR 0</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> TRUE 1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> FALSE 0</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXSIZE 20</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">int</span> ElemType;<span class="comment">//抽象数据类型，是线性表中数据元素的数据类型。</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">int</span> Status;<span class="comment">//抽象数据类型，是函数返回值的类型</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    ElemType data[MAXSIZE];</span><br><span class="line">    <span class="keyword">int</span> length;</span><br><span class="line">&#125;SqList;</span><br><span class="line"><span class="comment">//初始化线性表</span></span><br><span class="line"><span class="function">Status <span class="title">InitList</span><span class="params">(SqList L)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	L.length = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">return</span> OK;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//将线性表中第i个位置插入新元素e</span></span><br><span class="line"><span class="function">Status <span class="title">ListInsert</span><span class="params">(SqList *L, <span class="keyword">int</span> i, ElemType e)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> k;</span><br><span class="line">    <span class="comment">//判断线性表是否已满  </span></span><br><span class="line">    <span class="keyword">if</span>(L-&gt;length == MAXSIZE)</span><br><span class="line">        <span class="keyword">return</span>  ERROR;</span><br><span class="line">    <span class="keyword">if</span>(i &lt; <span class="number">1</span> || i &gt; L-&gt;length+<span class="number">1</span>)<span class="comment">//判断i是否有效</span></span><br><span class="line">        <span class="keyword">return</span> ERROR;</span><br><span class="line">    <span class="keyword">if</span>(i &lt;= L-&gt;length)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//将第i个位置及其之后的元素后移一位</span></span><br><span class="line">        <span class="keyword">for</span>(k = L-&gt;length<span class="number">-1</span>;k &gt;= i<span class="number">-1</span>; k--)</span><br><span class="line">        &#123;</span><br><span class="line">            L-&gt;data[k+<span class="number">1</span>] = L-&gt;data[k];</span><br><span class="line">        &#125;</span><br><span class="line">	&#125;</span><br><span class="line">    <span class="comment">//将新元素插入</span></span><br><span class="line">    L-&gt;data[i<span class="number">-1</span>] = e;</span><br><span class="line">    <span class="comment">//更新线性表的长度</span></span><br><span class="line">    L-&gt;length ++;</span><br><span class="line">    <span class="keyword">return</span> OK;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    SqList L;<span class="comment">//定义一个顺序结构的线性表。</span></span><br><span class="line">    Status i;</span><br><span class="line">    </span><br><span class="line">    i = <span class="built_in">InitList</span>(L);<span class="comment">//初始化线性表L。</span></span><br><span class="line">    cout&lt;&lt; <span class="string">&quot;L.length = &quot;</span> &lt;&lt; L.length &lt;&lt; endl;</span><br><span class="line">    <span class="comment">//在表头依次插入1~5</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>; j &lt;= <span class="number">5</span>; j++)&#123;</span><br><span class="line">        <span class="built_in">ListInsert</span>(&amp;L, <span class="number">1</span>, j); </span><br><span class="line">    &#125;</span><br><span class="line">    cout&lt;&lt; <span class="string">&quot;L.length = &quot;</span> &lt;&lt; L.length &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
<li><p>java</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">  </span><br></pre></td></tr></table></figure></li>
</ul>
]]></content>
      <categories>
        <category>数据结构与算法</category>
      </categories>
      <tags>
        <tag>学习笔记</tag>
        <tag>数据结构与算法</tag>
      </tags>
  </entry>
  <entry>
    <title>初始化线性表（顺序结构）</title>
    <url>/2021/09/27/%E5%88%9D%E5%A7%8B%E5%8C%96%E7%BA%BF%E6%80%A7%E8%A1%A8%EF%BC%88%E9%A1%BA%E5%BA%8F%E7%BB%93%E6%9E%84%EF%BC%89/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><h2 id="Operation："><a href="#Operation：" class="headerlink" title="Operation："></a>Operation：</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">InitList(L):初始化操作，</span><br></pre></td></tr></table></figure>



<h2 id="任务："><a href="#任务：" class="headerlink" title="任务："></a>任务：</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">1.定义线性表类型的对象L。</span></span><br><span class="line"><span class="comment">2.初始化线性表L，并输出其长度。</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>

<h2 id="代码实现："><a href="#代码实现：" class="headerlink" title="代码实现："></a>代码实现：</h2><ul>
<li><p>C</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> OK 1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ERROR 0</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> TRUE 1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> FALSE 0</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXSIZE 20</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">int</span> ElemType;<span class="comment">//抽象数据类型，是线性表中数据元素的数据类型。</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">int</span> Status;<span class="comment">//抽象数据类型，是函数返回值的类型</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    ElemType data[MAXSIZE];</span><br><span class="line">    <span class="keyword">int</span> length;</span><br><span class="line">&#125;SqList;</span><br><span class="line"></span><br><span class="line"><span class="function">Status <span class="title">InitList</span><span class="params">(SqList L)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	L.length = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">return</span> OK;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    SqList L;<span class="comment">//定义一个顺序结构的线性表。</span></span><br><span class="line">    Status i;</span><br><span class="line">    </span><br><span class="line">    i = InitList(L);<span class="comment">//初始化线性表L。</span></span><br><span class="line">    </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;L.length = %d\n&quot;</span>,L.length);<span class="comment">//输出线性表的长度。</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
<li><p>C++</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> OK 1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ERROR 0</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> TRUE 1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> FALSE 0</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXSIZE 20</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">int</span> ElemType;<span class="comment">//抽象数据类型，是线性表中数据元素的数据类型。</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">int</span> Status;<span class="comment">//抽象数据类型，是函数返回值的类型</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    ElemType data[MAXSIZE];</span><br><span class="line">    <span class="keyword">int</span> length;</span><br><span class="line">&#125;SqList;</span><br><span class="line"></span><br><span class="line"><span class="function">Status <span class="title">InitList</span><span class="params">(SqList L)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	L.length = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">return</span> OK;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    SqList L;<span class="comment">//定义一个顺序结构的线性表。</span></span><br><span class="line">    Status i;</span><br><span class="line">    </span><br><span class="line">    i = <span class="built_in">InitList</span>(L);<span class="comment">//初始化线性表L。</span></span><br><span class="line">    </span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;L.length = &quot;</span>&lt;&lt;L.length&lt;&lt;endl;<span class="comment">//输出线性表的长度。</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
<li><p>java</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure></li>
</ul>
]]></content>
      <categories>
        <category>数据结构与算法</category>
      </categories>
      <tags>
        <tag>学习笔记</tag>
        <tag>数据结构与算法</tag>
      </tags>
  </entry>
  <entry>
    <title>Scanner中的nextLine()与next()</title>
    <url>/2021/09/24/Scanner%E4%B8%AD%E7%9A%84nextLine-%E4%B8%8Enext/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><blockquote>
<p>参考价值：已完结、可以参考</p>
</blockquote>
<hr>
<h2 id="情景回顾"><a href="#情景回顾" class="headerlink" title="情景回顾"></a>情景回顾</h2><p>今天练习代码，遇见了以下情况：</p>
<p>（1）</p>
<p><img src="https://i.loli.net/2021/09/24/v6KTuUzXsmFDWwt.jpg"></p>
<p>(2)</p>
<p><img src="https://i.loli.net/2021/09/24/PuIBwLNlz69bjgE.jpg"></p>
<p>(3)<img src="https://i.loli.net/2021/09/24/C5qyg1R8stJrZMf.jpg"></p>
<p>(4)<img src="https://i.loli.net/2021/09/24/a8NvhbSqoBdreJi.jpg"></p>
<p>基本就是只要nextLine()前面有输入语句，那么nextLine()就会直接结束不会输入任何字符串。而将nextLine()换成next()就不会有这种情况。</p>
<h2 id="这是为什么呢？"><a href="#这是为什么呢？" class="headerlink" title="这是为什么呢？"></a>这是为什么呢？</h2><p>nextLine()相比于nextInt()、nextDouble()、next()等方法缺少一个类似于保护机制的东西。</p>
<p>比如：</p>
<p><img src="https://i.loli.net/2021/09/24/a8NvhbSqoBdreJi.jpg"></p>
<p>当我们输入“1”并按下回车键时，“1”会被nextInt()接受，而回车却被留在标准输入流当中了，如果下一个就是nextLine()，那么nextLine()就会直接读取到回车键，然后执行，这样我们就无法输入任何数据。</p>
<p>那么为什么把换成next()就没事了呢，因为next()如果没有读取到任何数据是不会结束的，nextDouble()、nextInt()等都有这个保护机制。</p>
<p>比如：<img src="https://i.loli.net/2021/09/24/ao2Kz3MFE1Xp7ke.jpg"></p>
]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>踩坑小记录</tag>
      </tags>
  </entry>
  <entry>
    <title>如何解决Win 10环境变量配置时Path变量只显示一行的问题</title>
    <url>/2021/09/07/%E5%A6%82%E4%BD%95%E8%A7%A3%E5%86%B3Win10%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F%E9%85%8D%E7%BD%AE%E6%97%B6Path%E5%8F%98%E9%87%8F%E5%8F%AA%E6%98%BE%E7%A4%BA%E4%B8%80%E8%A1%8C%E7%9A%84%E9%97%AE%E9%A2%98/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><blockquote>
<p>参考价值：已完结、无错误、可以作为教程。</p>
</blockquote>
<hr>
<h2 id="以前的版本"><a href="#以前的版本" class="headerlink" title="以前的版本"></a>以前的版本</h2><p>以前的版本，编辑环境变量时，变量总是显示一行，像这样：</p>
<p><img src="https://i.loli.net/2021/09/07/Nk5V7XeoCUQBLSa.jpg"></p>
<p>修改环境变量的时候特别麻烦。</p>
<h2 id="Win-10的版本"><a href="#Win-10的版本" class="headerlink" title="Win 10的版本"></a>Win 10的版本</h2><p>到了Win 10版本后，这个问题就得到了解决</p>
<p><img src="https://i.loli.net/2021/07/23/S7vPB56arGyzcOg.jpg"></p>
<p>变量的显示不再是一行，而是变成了列表形式。</p>
<h2 id="Win-10又更新了"><a href="#Win-10又更新了" class="headerlink" title="Win 10又更新了"></a>Win 10又更新了</h2><p>但后来，再次打开了环境变量，他又变成了原来的样子 -_-</p>
<p><img src="https://i.loli.net/2021/09/07/Nk5V7XeoCUQBLSa.jpg"></p>
<p>而实际上，并不是又回到了原来的版本，只是Win 10在更新后同时兼顾了两种查看方式。</p>
<ul>
<li><p>当%xxxxx%这种变量放在第一个时，就会按照第一行显示</p>
</li>
<li><p>当路径变量放在第一行时，就会按照列表显示。</p>
<p><img src="https://i.loli.net/2021/09/07/XDrNMRWa217bjnJ.jpg"></p>
</li>
</ul>
<p><img src="https://i.loli.net/2021/09/07/ABe3Kvna2QLuhNz.jpg"></p>
<p><img src="https://i.loli.net/2021/09/07/gy5Pv49reJSQnRj.jpg"></p>
]]></content>
      <categories>
        <category>踩坑小记录</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>搭建环境</tag>
      </tags>
  </entry>
</search>
