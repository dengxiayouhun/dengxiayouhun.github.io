<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>声明</title>
    <url>/2021/07/17/%E5%A3%B0%E6%98%8E/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><h1 id="声明："><a href="#声明：" class="headerlink" title="声明："></a>声明：</h1><p>本博客的所有规划类文章都是以博主的现实情况为根据而写的。每个人的实际情况都是不同的，所以这类文章对小伙伴们只有参考价值，切勿照搬。</p>
<p>每个人都是独一无二的个体，都有着自己的发展路线。不同的性格也没有高下之分，外向、活泼的人可以通过情商走向成功；内向、老实的人可以通过脚踏实地、不断钻研走向成功。每个人都有适合自己的路，不应该照搬别人的方法。</p>
<p>规划是为自己做的，为自己做规划要时刻问自己：”这是否适合自己 ?”，千万不要做出”内向的人走了情商路线”这样本末倒置的事。</p>
<p>比如说：</p>
<p>博主抗压能力比较强（这个由于生长环境缘故 ）。对于博主来说每天敲6、7个小时代码，偶尔通宵都问题不大。但对于比较适合劳逸结合的人来说，一昧追求数量的累积反而会降低效率，甚至危害健康，得不偿失。</p>
]]></content>
      <categories>
        <category>前言</category>
      </categories>
      <tags>
        <tag>声明</tag>
      </tags>
  </entry>
  <entry>
    <title>计算机硬件的简单学习</title>
    <url>/2021/07/31/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A1%AC%E4%BB%B6%E7%9A%84%E7%AE%80%E5%8D%95%E5%AD%A6%E4%B9%A0/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><h2 id="计算机硬件总览"><a href="#计算机硬件总览" class="headerlink" title="计算机硬件总览"></a>计算机硬件总览</h2><p><img src="https://i.loli.net/2021/07/31/T2SMCboJLxkvnzi.jpg"></p>
<p>*总线：搭建在主板上，数据就是通过总线在各个“设备”之间传递。</p>
<h2 id="冯·诺伊曼体系结构"><a href="#冯·诺伊曼体系结构" class="headerlink" title="冯·诺伊曼体系结构"></a>冯·诺伊曼体系结构</h2><p><img src="https://i.loli.net/2021/07/31/HrKEZeTph6nbBIw.jpg"></p>
<p>冯·诺依曼体系结构是现代计算机的基础，现在大多数计算机仍是冯·诺依曼体系结构，只是做了一些改进而已。冯·诺伊曼也因此被称为“计算机之父”。</p>
<h2 id="IT行业三大定律"><a href="#IT行业三大定律" class="headerlink" title="IT行业三大定律"></a>IT行业三大定律</h2><ol>
<li><p>摩尔定律：</p>
<p>当价格不变时，集成电路上的元器件大约每隔18~24个月便会增加一倍，性能也会增加一倍。</p>
</li>
<li><p>安迪-比尔定律：</p>
<p>当计算机硬件进行更新时，操作系统（软件）也会跟着更新。</p>
<p>ps：这也是为什么，当我们更换了我们就的计算机，但我们并没有感到更加流畅，原因是操作系统也跟着更新了。</p>
</li>
<li><p>反摩尔定律：</p>
<p>一个IT公司如果今天卖出和18个月前同样多的、同样的商品，它的营业额减半。</p>
</li>
</ol>
<p>ps：这三大定律其实更像是商业定律，IT行业迭代如此之快，某种意义上也是受了这三大定律的影响。毕竟，如果别的公司遵守这三大定律，而自己的公司不去追赶，早晚会被同行远远甩开。</p>
<h2 id="中央处理器（CPU）"><a href="#中央处理器（CPU）" class="headerlink" title="中央处理器（CPU）"></a>中央处理器（CPU）</h2><p>CPU是计算机的大脑。它从内存中并获取指令，然后执行指令。</p>
<ol>
<li><p>组成：</p>
<ul>
<li>控制单元：从内存中接受指令，并向其他设备、组件发出指令</li>
<li>算术/逻辑单元：完成对数据的逻辑处理。</li>
</ul>
</li>
<li><p>CPU的速度：CPU的速度用赫兹（Hz）表示，1Hz表示计算机每秒能发射一个电子脉冲（可以理解为高低电压电流，对于CPU来说就是‘０’‘１’信号），速度越快CPU在给定时间内执行的指令就越多。目前CPU的速度一般以千兆赫（ＧＨｚ）作为常用单位。</p>
</li>
<li><p>双核ＣＰＵ：</p>
<p>双核CPU实际上就是两个小CPU组成了一个大CPU，只不过一般把小CPU称为“核”。多核可以提高CPU的处理能力。</p>
</li>
</ol>
<h2 id="内存"><a href="#内存" class="headerlink" title="内存"></a>内存</h2><h3 id="比特（bit）和字节（byte）"><a href="#比特（bit）和字节（byte）" class="headerlink" title="比特（bit）和字节（byte）"></a>比特（bit）和字节（byte）</h3><ul>
<li><p>计算机是一系列电路的集合，通过开和关来实现低电压电流（值为0）和高电压电流（值为1）。一个1或一个0存储为1个比特，比特也是计算机最小的存储单位。</p>
</li>
<li><p>字节是计算机的最基本存储单位，一个字节由8个连续的比特构成。</p>
</li>
<li><p>1千字节（KB）=1024字节（B）</p>
<p>1兆字节（MB）=1024千字节（KB）</p>
<p>1千兆字节（GB）=1024兆字节（MB）</p>
<p>1万亿兆字节（TB）=1024千兆字节（GB）</p>
</li>
</ul>
<h3 id="内存-1"><a href="#内存-1" class="headerlink" title="内存"></a>内存</h3><ul>
<li><p>内存的特点：</p>
<ol>
<li>速度比硬盘快10倍以上，但比CPU慢的多的多。</li>
<li>只能缓存数据，断电数据就会被清除</li>
</ol>
</li>
<li><p>CPU只在内存中处理数据</p>
<p>当需要CPU处理数据时，对应的数据会从硬盘中传递到内存中被CPU执行处理</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">CPU的运算速度比硬盘快的太多，如果在硬盘中处理数据会导致速度奇慢（硬盘太慢了），因此CPU在内存中处理数据</span><br></pre></td></tr></table></figure></li>
<li><p>内存越大与计算机速度越快，但如果内存占有没有饱和，内存增大，计算机速度不会增快。</p>
</li>
<li><p>内存的意义：</p>
<p>相当于为电脑开了一个高速公路，解决了CPU在硬盘中处理数据过于缓慢的问题。</p>
</li>
<li><p>内存的每一个字节都对应一个唯一的地址。</p>
</li>
</ul>
<h2 id="存储设备"><a href="#存储设备" class="headerlink" title="存储设备"></a>存储设备</h2><ol>
<li><p>内存</p>
<p>速度快，短暂缓存数据，断电即消失</p>
</li>
<li><p>硬盘</p>
<p>速度慢，永久储存数据。</p>
</li>
</ol>
<h2 id="输入输出设备"><a href="#输入输出设备" class="headerlink" title="输入输出设备"></a>输入输出设备</h2><h3 id="输入设备"><a href="#输入设备" class="headerlink" title="输入设备"></a>输入设备</h3><ul>
<li>键盘</li>
<li>鼠标</li>
</ul>
<h3 id="输出设备"><a href="#输出设备" class="headerlink" title="输出设备"></a>输出设备</h3><ul>
<li>显示器</li>
<li>打印机</li>
<li>音箱</li>
</ul>
<h2 id="通信设备"><a href="#通信设备" class="headerlink" title="通信设备"></a>通信设备</h2><p>用于联网</p>
<ul>
<li>拨号调制解调器</li>
<li>DSL（数字用户线）</li>
<li>电缆调制解调器</li>
<li>网络接口卡</li>
<li>无线网络</li>
</ul>
]]></content>
      <categories>
        <category>计算机组成原理</category>
      </categories>
      <tags>
        <tag>学习笔记</tag>
        <tag>计算机组成原理</tag>
      </tags>
  </entry>
  <entry>
    <title>Java SE学习规划</title>
    <url>/2021/07/28/Java-SE%E5%AD%A6%E4%B9%A0%E8%A7%84%E5%88%92/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><blockquote>
<h1 id="前言："><a href="#前言：" class="headerlink" title="前言："></a>前言：</h1><p>本篇文章尚未完善,不具备参考价值</p>
<p>持续更新中 . . .</p>
</blockquote>
<h1 id="Java的相关基础概念"><a href="#Java的相关基础概念" class="headerlink" title="Java的相关基础概念"></a>Java的相关基础概念</h1><h2 id="简单的计算机组成原理（计算机硬件）"><a href="#简单的计算机组成原理（计算机硬件）" class="headerlink" title="简单的计算机组成原理（计算机硬件）"></a>简单的计算机组成原理（计算机硬件）</h2><ol>
<li>计算机硬件组成</li>
<li>CPU</li>
<li>储存设备</li>
<li>bit与byte</li>
<li>内存</li>
<li>输入输出设备</li>
<li>网络连接设备</li>
</ol>
<h2 id="操作系统"><a href="#操作系统" class="headerlink" title="操作系统"></a>操作系统</h2><h2 id="图形画面操作与命令行操作"><a href="#图形画面操作与命令行操作" class="headerlink" title="图形画面操作与命令行操作"></a>图形画面操作与命令行操作</h2><ol>
<li>图形画面操作</li>
<li>命令行操作</li>
<li>常用dos命令行指令</li>
</ol>
<h1 id="Java前期准备"><a href="#Java前期准备" class="headerlink" title="Java前期准备"></a>Java前期准备</h1><h2 id="Java语言的特点"><a href="#Java语言的特点" class="headerlink" title="Java语言的特点"></a>Java语言的特点</h2><h2 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h2><ol>
<li>JRE、JDK、JVM关系于介绍</li>
<li>安装JDK</li>
<li>配置环境变量</li>
</ol>
<h2 id="第一个Java程序"><a href="#第一个Java程序" class="headerlink" title="第一个Java程序"></a>第一个Java程序</h2><ol>
<li>java文档的建立</li>
<li>java文档的编译和运行</li>
<li>一些环境变量的配置</li>
</ol>
<h2 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h2><ol>
<li>单行注释与多行注释</li>
<li>文档注释</li>
</ol>
<h2 id="Java的一些开发工具"><a href="#Java的一些开发工具" class="headerlink" title="Java的一些开发工具"></a>Java的一些开发工具</h2><h1 id="Java基本语法"><a href="#Java基本语法" class="headerlink" title="Java基本语法"></a>Java基本语法</h1><h2 id="关键字"><a href="#关键字" class="headerlink" title="关键字"></a>关键字</h2><h3 id="标识符"><a href="#标识符" class="headerlink" title="标识符"></a>标识符</h3><ol>
<li>命名规则</li>
<li>命名规范</li>
</ol>
<h2 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h2><h3 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h3><ol>
<li><p>定义</p>
</li>
<li><p>定义变量的规范</p>
</li>
<li><p>分类</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">整型变量</span><br><span class="line">浮点型变量</span><br><span class="line">char型变量</span><br><span class="line">boolean型变量</span><br><span class="line">String类型变量</span><br></pre></td></tr></table></figure></li>
<li><p>自动类型提升运算</p>
</li>
<li><p>强制类型转换运算</p>
</li>
<li><p>进制转换</p>
</li>
</ol>
<h2 id="运算符"><a href="#运算符" class="headerlink" title="运算符"></a>运算符</h2><ol>
<li><p>算术运算符</p>
</li>
<li><p>赋值运算符</p>
</li>
<li><p>比较运算符</p>
</li>
<li><p>逻辑运算符</p>
</li>
<li><p>位运算符</p>
</li>
<li><p>三元运算符</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">三元运算符</span><br><span class="line">三元运算符与“if-else”</span><br></pre></td></tr></table></figure></li>
<li><p>运算符优先级</p>
</li>
</ol>
<h2 id="流程控制"><a href="#流程控制" class="headerlink" title="流程控制"></a>流程控制</h2><ol>
<li><p>条件结构</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">if-else</span><br><span class="line">swith-case</span><br></pre></td></tr></table></figure></li>
<li><p>循环结构</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">for</span><br><span class="line">while</span><br><span class="line">do-while</span><br><span class="line">嵌套循环</span><br><span class="line">break和continue</span><br></pre></td></tr></table></figure></li>
</ol>
<h2 id="数组"><a href="#数组" class="headerlink" title="数组"></a>数组</h2><ol>
<li><p>Eclipse</p>
</li>
<li><p>数组</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">二维数组</span><br><span class="line">数组内存解析</span><br><span class="line">数组初始化</span><br><span class="line">数组元素的调用</span><br><span class="line">数组（元素）赋值</span><br><span class="line">数组的复制</span><br><span class="line">数组元素的反转</span><br><span class="line">简单的数组算法</span><br><span class="line">  1. 线性查找</span><br><span class="line">  2. 二分法查找</span><br><span class="line">  3. 排序</span><br><span class="line">  4. 冒泡法排序</span><br><span class="line">  5. 快速排序</span><br><span class="line"> *6. 排序算法的横向对比</span><br></pre></td></tr></table></figure></li>
</ol>
<h1 id="面向对象"><a href="#面向对象" class="headerlink" title="面向对象"></a>面向对象</h1><h2 id="类和对象"><a href="#类和对象" class="headerlink" title="类和对象"></a>类和对象</h2><ol>
<li>类的结构</li>
<li>类和对象的创建</li>
<li>类的多个对象的关系</li>
<li>对象的内存解析</li>
</ol>
<h2 id="三大特性"><a href="#三大特性" class="headerlink" title="三大特性"></a>三大特性</h2><h2 id="接口"><a href="#接口" class="headerlink" title="接口"></a>接口</h2><h2 id="设计模式"><a href="#设计模式" class="headerlink" title="设计模式"></a>设计模式</h2><h1 id="应用程序开发"><a href="#应用程序开发" class="headerlink" title="应用程序开发"></a>应用程序开发</h1><h2 id="JDBC"><a href="#JDBC" class="headerlink" title="JDBC"></a>JDBC</h2><h2 id="集合"><a href="#集合" class="headerlink" title="集合"></a>集合</h2><h2 id="IO-NIO"><a href="#IO-NIO" class="headerlink" title="IO/NIO"></a>IO/NIO</h2><h2 id="类库"><a href="#类库" class="headerlink" title="类库"></a>类库</h2><p>##多线程</p>
<h2 id="异常处理"><a href="#异常处理" class="headerlink" title="异常处理"></a>异常处理</h2><h2 id="反射"><a href="#反射" class="headerlink" title="反射"></a>反射</h2><h2 id="网络"><a href="#网络" class="headerlink" title="网络"></a>网络</h2>]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>规划</tag>
      </tags>
  </entry>
  <entry>
    <title>数据结构与算法的简单规划</title>
    <url>/2021/07/27/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E7%9A%84%E7%AE%80%E5%8D%95%E8%A7%84%E5%88%92/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><h2 id="数据结构的的基本概念与术语"><a href="#数据结构的的基本概念与术语" class="headerlink" title="数据结构的的基本概念与术语"></a>数据结构的的基本概念与术语</h2><h3 id="数据"><a href="#数据" class="headerlink" title="数据"></a>数据</h3><ol>
<li>数据</li>
<li>数据元素</li>
<li>数据项</li>
<li>数据对象</li>
<li>数据结构</li>
</ol>
<h3 id="结构"><a href="#结构" class="headerlink" title="结构"></a>结构</h3><ol>
<li>逻辑结构</li>
<li>物理结构</li>
</ol>
<h3 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h3><ol>
<li>数据类型</li>
<li>抽象数据类型</li>
</ol>
<h2 id="算法的基本概念"><a href="#算法的基本概念" class="headerlink" title="算法的基本概念"></a>算法的基本概念</h2><h3 id="算法与数据结构"><a href="#算法与数据结构" class="headerlink" title="算法与数据结构"></a>算法与数据结构</h3><h3 id="算法的定义"><a href="#算法的定义" class="headerlink" title="算法的定义"></a>算法的定义</h3><h3 id="算法的特性"><a href="#算法的特性" class="headerlink" title="算法的特性"></a>算法的特性</h3><h3 id="算法设计的要求"><a href="#算法设计的要求" class="headerlink" title="算法设计的要求"></a>算法设计的要求</h3><h3 id="算法效率的度量方法"><a href="#算法效率的度量方法" class="headerlink" title="算法效率的度量方法"></a>算法效率的度量方法</h3><h3 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h3><h3 id="时间复杂度"><a href="#时间复杂度" class="headerlink" title="时间复杂度"></a>时间复杂度</h3><h3 id="空间复杂度"><a href="#空间复杂度" class="headerlink" title="空间复杂度"></a>空间复杂度</h3><h2 id="数据结构"><a href="#数据结构" class="headerlink" title="数据结构"></a>数据结构</h2><h3 id="线性表"><a href="#线性表" class="headerlink" title="线性表"></a>线性表</h3><h3 id="栈与队列"><a href="#栈与队列" class="headerlink" title="栈与队列"></a>栈与队列</h3><h3 id="串"><a href="#串" class="headerlink" title="串"></a>串</h3><h3 id="树"><a href="#树" class="headerlink" title="树"></a>树</h3><h3 id="图"><a href="#图" class="headerlink" title="图"></a>图</h3><h2 id="算法"><a href="#算法" class="headerlink" title="算法"></a>算法</h2><h3 id="查找"><a href="#查找" class="headerlink" title="查找"></a>查找</h3><h3 id="排序"><a href="#排序" class="headerlink" title="排序"></a>排序</h3><h2 id="未完待续"><a href="#未完待续" class="headerlink" title="未完待续  . . ."></a>未完待续  . . .</h2><p>持续更新，未完待续，本规划参考《大话数据结构》</p>
]]></content>
      <categories>
        <category>数据结构与算法</category>
      </categories>
      <tags>
        <tag>规划</tag>
        <tag>数据结构</tag>
      </tags>
  </entry>
  <entry>
    <title>编译运行一个简单的Java程序</title>
    <url>/2021/07/24/%E7%BC%96%E8%AF%91%E8%BF%90%E8%A1%8C%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84Java%E7%A8%8B%E5%BA%8F/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><blockquote>
<h2 id="前言："><a href="#前言：" class="headerlink" title="前言："></a>前言：</h2><p>java有些高级编译器用着是是非常方便的，但是对于初学者并不建议使用。编程过程中很多东西都会由高级编译器自动生成，不利于初学者对于底层原理的理解和手感的锻炼。所以建议初学者只用记事本和命令行进行初期的学习，不要嫌low，这对初学者的学习很有何好处。</p>
</blockquote>
<h1 id="前期准备"><a href="#前期准备" class="headerlink" title="前期准备"></a>前期准备</h1><h2 id="打开记事本"><a href="#打开记事本" class="headerlink" title="打开记事本"></a>打开记事本</h2><p>打开Windows开始界面–&gt;Windows附件–&gt;记事本</p>
<p><img src="https://i.loli.net/2021/07/24/T4j3Qgrmxklpou6.jpg" alt="text"></p>
<h2 id="写一个简单的代码"><a href="#写一个简单的代码" class="headerlink" title="写一个简单的代码"></a>写一个简单的代码</h2><p><img src="https://i.loli.net/2021/07/24/JsE95o2uUgTkyOp.jpg" alt="java"></p>
<p>代码看不懂没关系西，以后总会看懂的 ! </p>
<h2 id="保存"><a href="#保存" class="headerlink" title="保存"></a>保存</h2><p><img src="https://i.loli.net/2021/07/24/EJ3p9jyqVaIYAxw.jpg" alt="s"></p>
<p>文件名：xxx.java</p>
<p>编码要调到ANSI</p>
<h1 id="打开命令行进行操作（敲黑板！！！）"><a href="#打开命令行进行操作（敲黑板！！！）" class="headerlink" title="打开命令行进行操作（敲黑板！！！）"></a>打开命令行进行操作（敲黑板！！！）</h1><p><img src="https://i.loli.net/2021/07/24/5feq7gFJo8dYST1.jpg"></p>
<p><img src="https://i.loli.net/2021/07/24/V2W8kyxwnXQ1Y4h.jpg"></p>
<ol>
<li><p>cd到java文档存储的目录</p>
</li>
<li><p>使用jjavac程序对java文档进行编译</p>
<p>语法：javac 文档名.java</p>
<p>得到class文件，如图：</p>
<p><img src="https://i.loli.net/2021/07/24/fMvcnLzK7yXsilS.jpg" alt="class"></p>
</li>
<li><p>使用java程序运行class文件</p>
</li>
<li><p>退到D盘我们再执行class文件，发现找不到文件。</p>
<p>这是因为我们没有配置class文件的环境变量，为了让我们可以在任何路径执行class文件，我们需要配置classpath环境变量。</p>
</li>
<li><p>配置临时环境变量</p>
<ul>
<li><p>为什么要配置”临时”环境变量？</p>
<p>java开发工具包一般存放在固定的文件夹里，所以我们只需要配置系统环境变量，并且平时几乎不需要改动。</p>
<p>但是class文件我们一般并不是存储在一个目录（文件夹）里。这次此我们要执行A目录里的class文件，下一次我们就可能要执行B目录里的文件，总是对系统环境变量改来改去不仅麻烦而且容易遗忘。</p>
<p>所以我们需要通过配置临时环境变量应对这种情况。</p>
</li>
<li><p>如何配置临时环境变量？</p>
<p>以下指令可以在任意目录下执行：<br>//查看所有环境变量</p>
<p>set</p>
<p>//查看某个环境变量</p>
<p>set Path</p>
<p>//定义某个环境变量</p>
<p>set classpath=路径</p>
<p>//清除环境变量</p>
<p>set class=</p>
</li>
<li><p>临时配置环境变量有什么特点？</p>
<ol>
<li>它实际上并不会改变系统的环境变量</li>
<li>只临时起作用，命令行窗口关闭后所有设置全部清零</li>
</ol>
</li>
</ul>
</li>
<li><p>在D盘运行class文件</p>
</li>
<li><p>清楚classpath变量，并在D盘建立一个新的java文档并编译</p>
<p><img src="https://i.loli.net/2021/07/24/lo2PkRQrcN6HdUA.jpg" alt="java"></p>
<p><img src="https://i.loli.net/2021/07/24/VFwyWNLKcgT2CHP.jpg" alt="D"></p>
</li>
<li><p>在D盘运行Hello文件</p>
</li>
<li><p>分别以两种方式设置临时环境变量，并进行以下测试：</p>
<ol>
<li><p>设置classpath=路径；，执行Hello文件，删除”路径“中的class文件，并执行Hello文件</p>
</li>
<li><p>清除cclasspath，设置classpath=路径，执行Hello文件</p>
</li>
</ol>
<ul>
<li><p>测试结果的原理：<br>调用Java从程序执行class文件时，虚拟机会想寻找classpath中存储的目录下的class文件，之后分三种情况：</p>
<ol>
<li><p>没有设置classpath环境变量：</p>
<p>直接在当前目录下寻找对应的class文件，有则运行，没有则”报错“。</p>
</li>
<li><p>设置了classpath=路径；</p>
<p>虚拟机先查看存储在classpath中的目录下的class文件，若有则执行，若没有则查看当前目录下的class文件，若有则执行，若无则“报错”。</p>
</li>
<li><p>设置了classpath=路径</p>
<p>虚拟机先查看存储在classpath中的目录下的class文件，若有则执行，若没有则”报错“。</p>
</li>
</ol>
</li>
<li><p>*注：一般推荐使用classpath=路径的环境配置方式</p>
</li>
</ul>
</li>
</ol>
]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>学习笔记</tag>
      </tags>
  </entry>
  <entry>
    <title>Java环境搭建</title>
    <url>/2021/07/22/Java%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><h1 id="JRE与JDK"><a href="#JRE与JDK" class="headerlink" title="JRE与JDK"></a>JRE与JDK</h1><h2 id="什么是JRE"><a href="#什么是JRE" class="headerlink" title="什么是JRE ?"></a>什么是JRE ?</h2><p>JRE全称Java Runtime Environment，即Java运行环境。</p>
<p>其主要包括Java虚拟机和Java的一些核心库，用来运行Java程序。</p>
<h2 id="什么是JDK？"><a href="#什么是JDK？" class="headerlink" title="什么是JDK？"></a>什么是JDK？</h2><p>JDK全称Java Development Kit , 即Java开发工具包。</p>
<p>其主要包括Java的开发工具（编译工具、打包工具等），也包括了JRE，用来开发运行Java程序。</p>
<p>*注：因此，安装了JDk就不用安装JRE。</p>
<h1 id="下载JDK"><a href="#下载JDK" class="headerlink" title="下载JDK"></a>下载JDK</h1><p><a href="https://www.oracle.com/">官方网址</a></p>
<p><img src="https://i.loli.net/2021/07/22/aWqHLzuyrgO7k4R.jpg" alt="JDK"></p>
<p>点击Products -&gt; Java</p>
<p><img src="https://i.loli.net/2021/07/22/qGkfjZtyzEp5PvQ.jpg" alt="JDk"></p>
<p>点击Download Java now</p>
<p><img src="https://i.loli.net/2021/07/22/Fum4IVRv3OBoUdP.jpg" alt="JDK"></p>
<p>点击 JDK Download</p>
<p><img src="https://i.loli.net/2021/07/22/YrsZ8gXC5PHFRmb.jpg" alt="JDK"></p>
<p>点击Windows x64 Installer 行的下载，安装即可（也可以i下载Windows x64 Compressed Archive 后解压到自己想存放的位置）</p>
<p><img src="https://i.loli.net/2021/07/23/62OZUkx3umwhWc8.jpg" alt="JDK"></p>
<h1 id="环境配置"><a href="#环境配置" class="headerlink" title="环境配置"></a>环境配置</h1><h2 id="为什么要配置环境"><a href="#为什么要配置环境" class="headerlink" title="为什么要配置环境 ?"></a>为什么要配置环境 ?</h2><p>首先，我们要知道在命令行中我们只能打开当前目录下的文件，否则就会报错,如下图所示：</p>
<p><img src="https://i.loli.net/2021/07/23/S7OygTc1W59JHb8.jpg" alt="erro"></p>
<p>我们不可能每次开发java都要cd到对应目录下打开开发工具，这未免也太过麻烦。所以我们要通过配置环境来让我们可以在任意目录下都能够直接执行bin目录（里面都是Java开发工具）里的程序。效果如图所示：</p>
<p><img src="https://i.loli.net/2021/07/23/Powb3SQFJZeGHh7.jpg" alt="result"></p>
<h2 id="如何配置环境-？"><a href="#如何配置环境-？" class="headerlink" title="如何配置环境 ？"></a>如何配置环境 ？</h2><ol>
<li><p>打开环境变量配置窗口</p>
<p>Windows设置–&gt;系统–&gt;关于–&gt;系统信息</p>
<p><img src="https://i.loli.net/2021/07/23/qS7TwruPNB9e3ij.jpg" alt="系统信息"></p>
</li>
<li><p>高级系统设置–&gt;高级–&gt;环境变量</p>
<p><img src="https://i.loli.net/2021/07/23/9s8FBGkXMoPANtQ.jpg" alt="环境变量"></p>
</li>
<li><p>在系统变量里创建新的变量“JAVA_HOME”并将它写进Path变量里去。（这一步的目的是把bin目录的路径储存在Path中)</p>
<p><img src="https://i.loli.net/2021/07/23/7hX5ySGbRuroOPT.jpg" alt="wdad"></p>
<p><img src="https://i.loli.net/2021/07/23/S7vPB56arGyzcOg.jpg" alt="add"></p>
</li>
</ol>
<h2 id="原理解释"><a href="#原理解释" class="headerlink" title="原理解释"></a>原理解释</h2><p><img src="https://i.loli.net/2021/07/23/Powb3SQFJZeGHh7.jpg" alt="result"></p>
<p>当我们在C盘执行javac时，cmd会把命令提交给Windows系统。Windows会在当前目录里寻找，而且还会在环境变量Path的路径里寻找，因此，当我们把bin目录的路径存放在Path变量里后，我们就可以在任何目录执行bin目录里的文件了。</p>
<h2 id="环境的临时配置"><a href="#环境的临时配置" class="headerlink" title="环境的临时配置"></a>环境的临时配置</h2><h3 id="为什么要临时配置环境？"><a href="#为什么要临时配置环境？" class="headerlink" title="为什么要临时配置环境？"></a>为什么要临时配置环境？</h3><p>通常来说我们一般都是用自己的设备进行程序开发。但有些时候我们也需要插上U盘，用别人的设备进行开发。这时候，我们就不能随便改变别人设备的参数了，所以只能进行临时配置，使我们不仅能够良好的的进行开发，而且不改变设备参数。</p>
<h3 id="如何进行临时配置"><a href="#如何进行临时配置" class="headerlink" title="如何进行临时配置?"></a>如何进行临时配置?</h3><ol>
<li><p>打开cmd，执行set命令，查看环境变量</p>
<p><img src="https://i.loli.net/2021/07/23/9HcPdFA6mX3KbvB.jpg" alt="set"></p>
</li>
<li><p>执行set path，查看path变量</p>
<p><img src="https://i.loli.net/2021/07/23/HKpoLlvBsXjuNV9.jpg" alt="set path"></p>
</li>
<li><p>执行set path=bin储存路径，修改path变量（使用时，直接执行这一步即可）</p>
<p><img src="https://i.loli.net/2021/07/23/BWhqfEFiwOS63NG.jpg" alt="path="></p>
</li>
<li><p>执行set path，查看path变量</p>
<p><img src="https://i.loli.net/2021/07/23/U4hAajTluOZWr3J.jpg" alt="set path"></p>
</li>
<li><p>执行javac,结果：可执行</p>
<p><img src="https://i.loli.net/2021/07/23/5IqzjKg2yJdV3oD.jpg" alt="javac"></p>
</li>
<li><p>关闭窗口，重新打开cmd，执行set path，查看path变量，path变量未被修改</p>
<p><img src="https://i.loli.net/2021/07/23/uAsftHQyRxqZFh2.jpg" alt="set path"></p>
</li>
</ol>
<h1 id="未完待续"><a href="#未完待续" class="headerlink" title="未完待续 . . ."></a>未完待续 . . .</h1>]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>学习笔记</tag>
      </tags>
  </entry>
  <entry>
    <title>java语言的特点</title>
    <url>/2021/07/20/Java%E8%AF%AD%E8%A8%80%E7%9A%84%E7%89%B9%E7%82%B9/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><h2 id="跨平台性"><a href="#跨平台性" class="headerlink" title="跨平台性"></a>跨平台性</h2><h4 id="平台"><a href="#平台" class="headerlink" title="平台"></a>平台</h4><p>这里的平台是指计算机的系统平台，也就是Windows、Linux、Mac等。所有软件（可以看成代码集合体）都是基于平台运行的。</p>
<h3 id="什么叫做跨平台性？"><a href="#什么叫做跨平台性？" class="headerlink" title="什么叫做跨平台性？"></a>什么叫做跨平台性？</h3><p>软件是基于平台进行运行的，也就是说一个又C++编写的软件能够在Windows上运行，但如果换一个平台就不能运行了，所以说C++不具备跨平台性（相对来说是这样，在源码级别，C++还是跨平台的）。而一个用java’编写的软件能够在所有平台上运行，因此java具有跨平台性。</p>
<h4 id="为什么Java能够跨平台"><a href="#为什么Java能够跨平台" class="headerlink" title="为什么Java能够跨平台"></a>为什么Java能够跨平台</h4><p>实际上，Java应用程序并不是在新系统平台上运行的，它是由在Java虚拟机（JVM）上运行，然后发送指令给计算机进行操作的。因此，我们只需要在计算机上装一个JVM，就可以领java应用程序在计算机上运行。</p>
<p>ps：JVM是不能跨平台的</p>
<h2 id="图示"><a href="#图示" class="headerlink" title="图示"></a>图示</h2><p>Java应用程序的执行过程（从左往右）</p>
<p><img src="https://i.loli.net/2021/07/20/Lp43gtW526G9zEk.jpg" alt="Java应用程序"></p>
<p>C++应用程序的执行过程（从右往左）</p>
<p><img src="https://i.loli.net/2021/07/20/Frm6JiXpPf3VkZT.jpg" alt="C++应用程序的执行过程"></p>
<h2 id="未完待续"><a href="#未完待续" class="headerlink" title="未完待续 . . ."></a>未完待续 . . .</h2>]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>学习笔记</tag>
      </tags>
  </entry>
  <entry>
    <title>DOS命令行的简单操作</title>
    <url>/2021/07/19/DOS%E5%91%BD%E4%BB%A4%E8%A1%8C%E7%9A%84%E7%AE%80%E5%8D%95%E6%93%8D%E4%BD%9C/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><h2 id="Dos命令行的作用"><a href="#Dos命令行的作用" class="headerlink" title="Dos命令行的作用"></a>Dos命令行的作用</h2><p>通过在控制台输入特定指令使计算机完成一些操作，实现人机交互。</p>
<h2 id="打开控制台"><a href="#打开控制台" class="headerlink" title="打开控制台"></a>打开控制台</h2><p>开始+R打开快捷运行窗口，输入cmd打开控制台。</p>
<p><img src="https://i.loli.net/2021/07/19/UAZIDxrnsKVYtpw.jpg" alt="控制台"></p>
<h2 id="常见Dos命令行"><a href="#常见Dos命令行" class="headerlink" title="常见Dos命令行"></a>常见Dos命令行</h2><h4 id="打开当前目录"><a href="#打开当前目录" class="headerlink" title="打开当前目录"></a>打开当前目录</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//语法:</span></span><br><span class="line">dir</span><br><span class="line"><span class="comment">//作用：</span></span><br><span class="line">列出当前目录下的文件和和文件夹。</span><br></pre></td></tr></table></figure>

<p><img src="https://i.loli.net/2021/07/19/wJghOLvdmNyX18Q.jpg" alt="dir"></p>
<h4 id="创建新文件夹"><a href="#创建新文件夹" class="headerlink" title="创建新文件夹"></a>创建新文件夹</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//语法:</span></span><br><span class="line">md</span><br><span class="line"><span class="comment">//作用：</span></span><br><span class="line">在当前目录新建文件夹</span><br></pre></td></tr></table></figure>

<p><img src="https://i.loli.net/2021/07/19/aX73l9xEOyFQiSW.jpg" alt="md"></p>
<p><img src="https://i.loli.net/2021/07/19/DJYkxZCnpavQbrc.jpg" alt="md"></p>
<h4 id="删除文件"><a href="#删除文件" class="headerlink" title="删除文件"></a>删除文件</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//语法:</span></span><br><span class="line">rd</span><br><span class="line">del</span><br><span class="line"><span class="comment">//作用：</span></span><br><span class="line">删除当前目录下的空文件夹</span><br><span class="line">删除当前目录下的文件或者清空文件夹</span><br></pre></td></tr></table></figure>

<p><img src="https://i.loli.net/2021/07/19/XMp1HDtzyrGA5cE.jpg" alt="rd"></p>
<p><img src="https://i.loli.net/2021/07/19/FjOspAvorzPh3Lc.jpg" alt="del"></p>
<h4 id="进入文件夹"><a href="#进入文件夹" class="headerlink" title="进入文件夹"></a>进入文件夹</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//语法：</span></span><br><span class="line">cd</span><br><span class="line"><span class="comment">//作用：</span></span><br><span class="line">进入文件</span><br></pre></td></tr></table></figure>

<p><img src="https://i.loli.net/2021/07/19/iXraNLjwC4Rv2gq.jpg" alt="进入D盘"></p>
<p><img src="https://i.loli.net/2021/07/19/xoP2Yf71DcyIeGQ.jpg" alt="进入文件夹"></p>
<p><img src="https://i.loli.net/2021/07/19/x9CauovqGc23wF1.jpg" alt="cd \ "></p>
<p>)</p>
<h4 id="返回上一级目录"><a href="#返回上一级目录" class="headerlink" title="返回上一级目录"></a>返回上一级目录</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//语法：</span></span><br><span class="line">cd..</span><br><span class="line">cd\</span><br><span class="line"><span class="comment">//作用：</span></span><br><span class="line">返回上一级目录</span><br><span class="line">返回主根目录</span><br></pre></td></tr></table></figure>

<p><img src="https://i.loli.net/2021/07/19/isV14gIWtjDwKBq.jpg" alt="cd..."></p>
<p><img src="https://i.loli.net/2021/07/19/BitazJ3Yhf9MuS7.jpg" alt="cd \ "></p>
<h4 id="退出dos命令行控制台"><a href="#退出dos命令行控制台" class="headerlink" title="退出dos命令行控制台"></a>退出dos命令行控制台</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//语法</span></span><br><span class="line">exit</span><br><span class="line"><span class="comment">//作用：</span></span><br><span class="line">退出控制台</span><br></pre></td></tr></table></figure>

<p><img src="https://i.loli.net/2021/07/19/6bXLPRAMredIHQS.jpg" alt="exit"></p>
]]></content>
      <tags>
        <tag>DOS命令行</tag>
      </tags>
  </entry>
  <entry>
    <title>Java后端学习路线及规划</title>
    <url>/2021/07/17/Java%E5%90%8E%E7%AB%AF%E5%AD%A6%E4%B9%A0%E8%B7%AF%E7%BA%BF%E4%B8%8E%E8%A7%84%E5%88%92/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><blockquote>
<h2 id="观前提示"><a href="#观前提示" class="headerlink" title="观前提示"></a>观前提示</h2><p>建议心态乐观的小伙伴展开折叠的代码块观看呦~~</p>
<p>想看思维导图的可以直接拉到最后 (&gt;_&lt;) !</p>
<p><img src="https://i.loli.net/2021/07/18/Ipn9jcsRz63wLGE.png" alt="滑稽"></p>
<p>友情提示：右下角点击设置，可开启极简阅读模式 ！</p>
</blockquote>
<h2 id="编程基础"><a href="#编程基础" class="headerlink" title="编程基础"></a>编程基础</h2><h3 id="Java语言"><a href="#Java语言" class="headerlink" title="Java语言"></a>Java语言</h3><ul>
<li><p>语言基础</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="number">1.</span> 基础语法</span><br><span class="line"><span class="number">2.</span> 面向对象</span><br><span class="line"><span class="number">3.</span> 接口</span><br><span class="line"><span class="number">4.</span> 容器</span><br><span class="line"><span class="number">5.</span> 异常</span><br><span class="line"><span class="number">6.</span> 泛式</span><br><span class="line"><span class="number">7.</span> 反射</span><br><span class="line"><span class="number">8.</span> 注解</span><br><span class="line"><span class="number">9.</span> I/O</span><br><span class="line"><span class="number">10.</span> ~~图形化（Spring）~~</span><br></pre></td></tr></table></figure></li>
<li><p>Java虚拟机</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="number">1.</span> 类加载机制</span><br><span class="line"><span class="number">2.</span> 字节码执行机制</span><br><span class="line"><span class="number">3.</span> JVM内存模型</span><br><span class="line"><span class="number">4.</span> GC垃圾回收</span><br><span class="line"><span class="number">5.</span> JVM性能监控与故障定位</span><br><span class="line"><span class="number">6.</span> JVM调优</span><br></pre></td></tr></table></figure></li>
<li><p>多线程/并发</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="number">1.</span> 并发编程基础</span><br><span class="line"><span class="number">2.</span> 线程池</span><br><span class="line"><span class="number">3.</span> 锁</span><br><span class="line"><span class="number">4.</span> 并发容器</span><br><span class="line"><span class="number">5.</span> 原子类</span><br><span class="line"><span class="number">6.</span> JUC并发工具类</span><br></pre></td></tr></table></figure></li>
</ul>
<h3 id="数据结构和算法"><a href="#数据结构和算法" class="headerlink" title="数据结构和算法"></a>数据结构和算法</h3><ul>
<li><p>数据结构</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="number">1.</span> 字符串</span><br><span class="line"><span class="number">2.</span> 数组</span><br><span class="line"><span class="number">3.</span> 链表</span><br><span class="line"><span class="number">4.</span> 堆、栈、队列</span><br><span class="line"><span class="number">5.</span> 二叉树</span><br><span class="line"><span class="number">6.</span> 哈希</span><br><span class="line"><span class="number">7.</span> 图</span><br></pre></td></tr></table></figure></li>
<li><p>算法</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="number">1.</span> 排序</span><br><span class="line"><span class="number">2.</span> 查找</span><br><span class="line"><span class="number">3.</span> 贪心</span><br><span class="line"><span class="number">4.</span> 分治</span><br><span class="line"><span class="number">5.</span> 动态规划</span><br><span class="line"><span class="number">6.</span> 回溯</span><br></pre></td></tr></table></figure></li>
</ul>
<h3 id="计算机网络"><a href="#计算机网络" class="headerlink" title="计算机网络"></a>计算机网络</h3><ul>
<li><p>ARP协议</p>
</li>
<li><p>IP协议、ICMP协议</p>
</li>
<li><p>TCP、UDP协议</p>
</li>
<li><p>DNS/HTTP/HTTPS协议</p>
</li>
<li><p>Session/Cookie</p>
</li>
<li><p>SQL/数据库</p>
</li>
<li><p>SQL语句的书写</p>
</li>
<li><p>SQL语句的优化</p>
</li>
<li><p>事务/隔离级别</p>
</li>
<li><p>索引</p>
</li>
<li><p>锁</p>
</li>
</ul>
<h3 id="操作系统"><a href="#操作系统" class="headerlink" title="操作系统"></a>操作系统</h3><ul>
<li><p>进程、线程</p>
</li>
<li><p>并发、锁</p>
</li>
<li><p>内存管理和调度</p>
</li>
<li><p>I/O原理</p>
</li>
</ul>
<h3 id="设计模式"><a href="#设计模式" class="headerlink" title="设计模式"></a>设计模式</h3><ul>
<li><p>单例</p>
</li>
<li><p>工厂</p>
</li>
<li><p>代理</p>
</li>
<li><p>策略</p>
</li>
<li><p>模板方法</p>
</li>
<li><p>观察者</p>
</li>
<li><p>适配器</p>
</li>
<li><p>责任链</p>
</li>
<li><p>建造者</p>
</li>
</ul>
<h2 id="开发工具"><a href="#开发工具" class="headerlink" title="开发工具"></a>开发工具</h2><h3 id="集成开发环境"><a href="#集成开发环境" class="headerlink" title="集成开发环境"></a>集成开发环境</h3><ul>
<li>Eclipse</li>
<li>IDEA</li>
<li>VSCode</li>
</ul>
<h3 id="Linux系统"><a href="#Linux系统" class="headerlink" title="Linux系统"></a>Linux系统</h3><ul>
<li>常用命令</li>
<li>Shell脚本</li>
</ul>
<h3 id="项目管理工具-构建工具"><a href="#项目管理工具-构建工具" class="headerlink" title="项目管理工具/构建工具"></a>项目管理工具/构建工具</h3><ul>
<li>Maven</li>
<li>Gradle</li>
</ul>
<h3 id="代码管理工具"><a href="#代码管理工具" class="headerlink" title="代码管理工具"></a>代码管理工具</h3><ul>
<li>SVN</li>
<li>Git</li>
</ul>
<h2 id="应用框架"><a href="#应用框架" class="headerlink" title="应用框架"></a>应用框架</h2><h3 id="后端"><a href="#后端" class="headerlink" title="后端"></a>后端</h3><ul>
<li><p>Spring家族框架</p>
<ol>
<li><p>Spring</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="number">1</span>、IOC</span><br><span class="line"><span class="number">2</span>、AOP</span><br></pre></td></tr></table></figure></li>
<li><p>SpringMVC</p>
</li>
<li><p>Spring Boot</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="number">1</span>、自动配置、开箱即用</span><br><span class="line"><span class="number">2</span>、整合Web</span><br><span class="line"><span class="number">3</span>、整合数据库（事务问题）</span><br><span class="line"><span class="number">4</span>、整合权限</span><br><span class="line">   <span class="number">1</span>、Shiro</span><br><span class="line">   <span class="number">2</span>、Spring Security</span><br><span class="line"><span class="number">5</span>、整合各种中间件</span><br><span class="line">   <span class="number">1</span>、Redis</span><br><span class="line">   <span class="number">2</span>、MQ</span><br><span class="line">   <span class="number">3</span>、RPC框架</span><br><span class="line">   <span class="number">4</span>、NIO框架</span><br></pre></td></tr></table></figure></li>
</ol>
</li>
<li><p>服务器软件</p>
<ol>
<li><p>Web服务器 —— Nginx</p>
</li>
<li><p>应用服务器</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="number">1</span>、Tomcat</span><br><span class="line"><span class="number">2</span>、Jetty</span><br><span class="line"><span class="number">3</span>、Undertow</span><br></pre></td></tr></table></figure></li>
</ol>
</li>
<li><p>中间件</p>
<ol>
<li><p>缓存</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Redis</span><br><span class="line">  1、5大基础数据类型</span><br><span class="line">  2、事务</span><br><span class="line">  3、管道</span><br><span class="line">  4、持久化</span><br><span class="line">  5、集群</span><br></pre></td></tr></table></figure></li>
<li><p>消息队列</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="number">1</span>、RocketMQ</span><br><span class="line"><span class="number">2</span>、RabbitMQ</span><br><span class="line"><span class="number">3</span>、Kafka</span><br></pre></td></tr></table></figure></li>
<li><p>RPC框架</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="number">1</span>、Dubbo</span><br><span class="line"><span class="number">2</span>、GRPC</span><br><span class="line"><span class="number">3</span>、Thrift</span><br><span class="line"><span class="number">4</span>、Spring Cloud</span><br><span class="line"><span class="number">5</span>、Netty</span><br></pre></td></tr></table></figure></li>
</ol>
</li>
<li><p>数据库框架</p>
<ol>
<li><p>GRM层框架</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="number">1</span>、MyBatis</span><br><span class="line"><span class="number">2</span>、Hibernate</span><br><span class="line"><span class="number">3</span>、JPA</span><br></pre></td></tr></table></figure></li>
<li><p>连接池</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="number">1</span>、Druid</span><br><span class="line"><span class="number">2</span>、HikariCP</span><br><span class="line"><span class="number">3</span>、C3P0</span><br></pre></td></tr></table></figure></li>
<li><p>分库分表</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="number">1</span>、MyCat</span><br><span class="line"><span class="number">2</span>、Sharding-JDBC</span><br><span class="line"><span class="number">3</span>、Sharding-Sphere</span><br></pre></td></tr></table></figure></li>
</ol>
</li>
<li><p>搜索引擎</p>
<ol>
<li>ElassticSearch</li>
<li>Soir</li>
</ol>
</li>
<li><p>分布式/微服务</p>
<ol>
<li><p>服务发现/注册</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="number">1</span>、Eureka</span><br><span class="line"><span class="number">2</span>、Consul</span><br><span class="line"><span class="number">3</span>、Zookeeper</span><br><span class="line"><span class="number">4</span>、Nacos</span><br></pre></td></tr></table></figure></li>
<li><p>网关</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="number">1</span>、Zuul</span><br><span class="line"><span class="number">2</span>、Gateway</span><br></pre></td></tr></table></figure></li>
<li><p>服务调用（负载均衡）</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="number">1</span>、Ribbon</span><br><span class="line"><span class="number">2</span>、Feign</span><br></pre></td></tr></table></figure></li>
<li><p>熔断/降级</p>
<ul>
<li>Hystrix</li>
</ul>
</li>
<li><p>配置中心</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="number">1</span>、Config</span><br><span class="line"><span class="number">2</span>、Apollo</span><br><span class="line"><span class="number">3</span>、Nacos</span><br></pre></td></tr></table></figure></li>
<li><p>认证和鉴权</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="number">1</span>、Spring Security</span><br><span class="line"><span class="number">2</span>、QAuth2</span><br><span class="line"><span class="number">3</span>、SSO单点登录</span><br></pre></td></tr></table></figure></li>
<li><p>分布式事务</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="number">1</span>、JTA接口——Atomikos组件</span><br><span class="line"><span class="number">2</span>、2PC、3PC</span><br><span class="line"><span class="number">3</span>、XA模式</span><br><span class="line"><span class="number">4</span>、TPC模式</span><br><span class="line">   <span class="number">1</span>、tcc-transaction</span><br><span class="line">   <span class="number">2</span>、ByteTCC</span><br><span class="line">   <span class="number">3</span>、EasyTransaction</span><br><span class="line">   <span class="number">4</span>、Seata</span><br><span class="line"><span class="number">5</span>、SAGA模式</span><br><span class="line">   <span class="number">1</span>、ServiceComb</span><br><span class="line">   <span class="number">2</span>、Seata</span><br><span class="line"><span class="number">6</span>、LCN模式——tx-lcn</span><br></pre></td></tr></table></figure></li>
<li><p>任务调度</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="number">1</span>、Quartz</span><br><span class="line"><span class="number">2</span>、Elastic-Job</span><br></pre></td></tr></table></figure></li>
<li><p>链路追踪和监控</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="number">1</span>、Zipkin</span><br><span class="line"><span class="number">2</span>、Sleuth</span><br><span class="line"><span class="number">3</span>、Skywalking</span><br></pre></td></tr></table></figure></li>
<li><p>日志分析与监控</p>
<ul>
<li><p>ELK</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="number">1</span>、ElasticSearch</span><br><span class="line"><span class="number">2</span>、Logstash</span><br><span class="line"><span class="number">3</span>、Kibana</span><br></pre></td></tr></table></figure></li>
</ul>
</li>
</ol>
</li>
<li><p>虚拟化/容器化</p>
<ol>
<li><p>容器技术</p>
<ul>
<li>Docker</li>
</ul>
</li>
<li><p>容器编排技术</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="number">1</span>、Kubernetes</span><br><span class="line"><span class="number">2</span>、Swarm</span><br></pre></td></tr></table></figure></li>
</ol>
</li>
</ul>
<h3 id="前端"><a href="#前端" class="headerlink" title="前端"></a>前端</h3><ul>
<li><p>基础套餐</p>
<ol>
<li><p>三大件</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="number">1</span>、HTML</span><br><span class="line"><span class="number">2</span>、JavaScript</span><br><span class="line"><span class="number">3</span>、CSS</span><br></pre></td></tr></table></figure></li>
<li><p>基础库</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="number">1</span>、jquery</span><br><span class="line"><span class="number">2</span>、Ajax</span><br></pre></td></tr></table></figure></li>
</ol>
</li>
<li><p>模板框架</p>
<ol>
<li>JSP/JSTL</li>
<li>Thymeleaf</li>
<li>FreeMarker</li>
</ol>
</li>
<li><p>组件化框架</p>
<ol>
<li>Node</li>
<li>VUE</li>
<li>React</li>
<li>Angular</li>
</ol>
</li>
</ul>
<h2 id="运维知识"><a href="#运维知识" class="headerlink" title="*运维知识"></a>*运维知识</h2><h3 id="Web服务器"><a href="#Web服务器" class="headerlink" title="Web服务器"></a>Web服务器</h3><ul>
<li>Nginx</li>
</ul>
<h3 id="应用服务器"><a href="#应用服务器" class="headerlink" title="应用服务器"></a>应用服务器</h3><ul>
<li>Tomcat</li>
<li>Jetty</li>
<li>Undertow</li>
</ul>
<h3 id="CDN加速"><a href="#CDN加速" class="headerlink" title="CDN加速"></a>CDN加速</h3><h3 id="持续集成-持续部署"><a href="#持续集成-持续部署" class="headerlink" title="持续集成/持续部署"></a>持续集成/持续部署</h3><ul>
<li>Jenkins</li>
</ul>
<h3 id="代码质量检查"><a href="#代码质量检查" class="headerlink" title="代码质量检查"></a>代码质量检查</h3><ul>
<li>sonar</li>
</ul>
<h3 id="日志收集和分析"><a href="#日志收集和分析" class="headerlink" title="日志收集和分析"></a>日志收集和分析</h3><ul>
<li>ELK</li>
</ul>
<h2 id="成神之路（在梦里）"><a href="#成神之路（在梦里）" class="headerlink" title="*成神之路（在梦里）"></a>*成神之路（在梦里）</h2><ul>
<li><p>徒手撕源码</p>
</li>
<li><p>光脚造轮子</p>
</li>
<li><p>闭着眼睛深度调优</p>
</li>
<li><p>吊打面试官</p>
</li>
</ul>
<hr>
<p><img src="https://i.loli.net/2021/07/18/Ipn9jcsRz63wLGE.png" alt="滑稽"></p>
<p>​             很恐怖！兄弟们，有没有还没有入门就已经入土的感觉呀！不过不用过分担心，这些很多东西都不是在大学就需要学完的。而且，并不是每一项都需要深入学习，有些只需要了解即可。当然，学的越多竞争力越大这是肯定的。</p>
<p><img src="https://i.loli.net/2021/07/18/x1cbzBjWm3CfvhQ.png" alt="吃瓜ing"></p>
<hr>
<h2 id="学习计划（暂定）"><a href="#学习计划（暂定）" class="headerlink" title="学习计划（暂定）"></a>学习计划（暂定）</h2><table>
<thead>
<tr>
<th>阶段</th>
<th>资料</th>
<th>目标</th>
</tr>
</thead>
<tbody><tr>
<td>第一阶段</td>
<td>Java SE教学视频（+一本教科书）</td>
<td>入门了解Java</td>
</tr>
<tr>
<td>第二阶段</td>
<td>《Java核心技术 卷Ⅰ 卷Ⅱ》（+《Java编程思想》）</td>
<td>深入理解Java</td>
</tr>
<tr>
<td>第三阶段</td>
<td>《Java并发编程实战》《Java网络编程》《深入理解Java虚拟机》</td>
<td>学习Java虚拟机（JVM）、并发编程、多线程编程、网络编程</td>
</tr>
<tr>
<td>第四阶段</td>
<td>《深入分析Java Web技术内幕》（+《TCP、IP详解 卷Ⅰ》）</td>
<td>进入Java Web、设计、架构方面</td>
</tr>
<tr>
<td>贯穿始终</td>
<td>《大话数据结构》（《算法》）、《计算机网络 自顶向下》《TCP、IP详解 卷Ⅰ》（二选一）、《鸟哥的Linux私房菜》</td>
<td>数据结构与算法、操作系统、计算机网络、计算机组成原理、编译原理</td>
</tr>
<tr>
<td>工具方面</td>
<td>《鸟哥的Linux私房菜》</td>
<td>Linux系统</td>
</tr>
<tr>
<td>应用框架</td>
<td>《Spring实战》《Spring Boot实战》《Spring MVC+MyBatis开发从入门到项目实战》《Spring技术内幕》（可以挑战一下自己，）</td>
<td>Spring家族</td>
</tr>
</tbody></table>
<h2 id="思维导图"><a href="#思维导图" class="headerlink" title="思维导图"></a>思维导图</h2><p><img src="https://i.loli.net/2021/07/19/q1QM5XCRLy2j8BE.jpg" alt="思维导图"></p>
<hr>
<p>大家要注意保护自己的头发呦~</p>
<p><img src="https://i.loli.net/2021/07/19/7Lx2PbNjnfDurVg.png" alt="休息"></p>
]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>规划</tag>
      </tags>
  </entry>
  <entry>
    <title>Markdown语法简单教程</title>
    <url>/2021/07/16/Markdown%E8%AF%AD%E6%B3%95%E7%AE%80%E5%8D%95%E6%95%99%E7%A8%8B/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><p>markdown语言是一种轻量级的标记语言，主要通过一些简单的符号对文本进行处理，可以说是程序员写博客的首选语言。</p>
<h1 id="程序员为什么比较偏爱markdown-？"><a href="#程序员为什么比较偏爱markdown-？" class="headerlink" title="程序员为什么比较偏爱markdown ？"></a>程序员为什么比较偏爱markdown ？</h1><ul>
<li><p><strong>markdown比较符合程序员的平时习惯</strong></p>
<p>程序员平时做的最多的就是敲代码。而在敲代码的过程中，鼠标就成为了一个很“碍事”的东西。每一次使用鼠标都会不同程度上的打断程序员的思维，从而给编程带来很多麻烦。而且，程序员的很多工作本身也不需要怎么使用鼠标。因此，久而久之，程序员多少有些抗拒使用鼠标。</p>
<p>markdown语言就是一个能够解放鼠标的语言。平时我们使用word编辑文档时，需要使用鼠标点击达到各种格式，比如：字体调节，列表，定标题等。对于平时不怎么喜欢使用鼠标的程序员来说，这是一种心灵上的折磨。因此，markdown因其可以通过各种符号进行文本处理的特性就成为了程序员的最佳选择。</p>
</li>
<li><p><strong>markdown语言格式统一，便于阅读</strong></p>
<p>在丰富度方面，word是碾压mark down的，有些人总会通过自己的脑洞用word搞出各种奇葩的文章风格，搞得其他人阅读起来就会很吃力。而markdown的各种处理都是固定的，这也导致用markdown写出来的文章风格几乎一模一样。</p>
<p>格式简洁、单一看似是markdown的缺点，实际上却是markdown的真正魅力所在。如果100个人用word写文章，会有100种风格，而1000个人用markdown写文章也只有一种风格。一个人习惯了自己的风格，再去看别人的风格的文章就会形成阅读壁垒，从而造成不必要的障碍。而markdown就不存在这种问题，因为它只有一种风格，只要我们习惯了自己的风格，再去看其他程序员的技术博客就不会有阅读壁垒，因为风格都是一样的。</p>
</li>
<li><p><strong>格式简约，更多的注意力都聚焦于文章内容</strong></p>
<p>程序员的博客大多都是技术博客和知识分享博客，这些大多都聚焦于文章内容，过于花里胡哨的格式反而会令文章价值大打折扣，而markdown的格式就是走的极致简约路线，很符合程序员的需求。</p>
</li>
<li><p><strong>稳定性强，可移植性强</strong></p>
<p>word最令人诟病的一点就是文章稳定性差，可移植性极差，往往一篇文章在自己电脑里排版的整整齐齐，换一台设备打开，文章排版就会被打乱，一般都需要转成PDF在别的设备上的开。</p>
<p>markdown就不存在这种问题，只要是支持markdown语言的，无论在哪里打开都不会乱。这也算是个相当省头发特性。</p>
</li>
</ul>
<h1 id="Markdown语法快速入门（typora）："><a href="#Markdown语法快速入门（typora）：" class="headerlink" title="Markdown语法快速入门（typora）："></a>Markdown语法快速入门（typora）：</h1><h2 id="1、代码块："><a href="#1、代码块：" class="headerlink" title="1、代码块："></a>1、代码块：</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//代码块语法：</span></span><br><span class="line">​~~~语言名</span><br><span class="line">比如：~~~java</span><br><span class="line">     ~~~c++</span><br></pre></td></tr></table></figure>

<p><strong>1、Java代码块</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.yrp.po;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br></pre></td></tr></table></figure>

<p><strong>2、C++代码块</strong></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">cout&lt;&lt;<span class="string">&quot;C++代码块&quot;</span>;</span><br><span class="line">cout&lt;&lt;endl;</span><br></pre></td></tr></table></figure>

<h2 id="2、标题"><a href="#2、标题" class="headerlink" title="2、标题"></a>2、标题</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//标题语法</span></span><br><span class="line"># 一级标题</span><br><span class="line">## 二级标题</span><br><span class="line">### 三级标题</span><br><span class="line">#### 四级标题    </span><br><span class="line">##### 五级标题    </span><br><span class="line">###### 六级标题   </span><br></pre></td></tr></table></figure>

<h1 id="一级标题"><a href="#一级标题" class="headerlink" title="一级标题"></a>一级标题</h1><h2 id="二级标题"><a href="#二级标题" class="headerlink" title="二级标题"></a>二级标题</h2><h3 id="三级标题"><a href="#三级标题" class="headerlink" title="三级标题"></a>三级标题</h3><h4 id="四级标题"><a href="#四级标题" class="headerlink" title="四级标题"></a>四级标题</h4><h5 id="五级标题"><a href="#五级标题" class="headerlink" title="五级标题"></a>五级标题</h5><h6 id="六级标题"><a href="#六级标题" class="headerlink" title="六级标题"></a>六级标题</h6><h2 id="3、字体"><a href="#3、字体" class="headerlink" title="3、字体"></a>3、字体</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 加粗</span></span><br><span class="line">**加粗**</span><br><span class="line"><span class="comment">//代码高亮显示</span></span><br><span class="line">    ==代码高亮显示==</span><br><span class="line"><span class="comment">//删除线</span></span><br><span class="line">    ~~删除线~~</span><br><span class="line"><span class="comment">//斜体</span></span><br><span class="line">    *斜体*</span><br></pre></td></tr></table></figure>

<p>// 加粗<br><strong>加粗</strong><br>//代码高亮显示<br>    ==代码高亮显示==<br>//删除线<br>    <del>删除线</del><br>//斜体<br>    <em>斜体</em></p>
<h2 id="4、引用"><a href="#4、引用" class="headerlink" title="4、引用"></a>4、引用</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//引用语法：</span></span><br><span class="line">&gt;一级引用</span><br><span class="line">&gt;&gt;二级引用</span><br><span class="line">&gt;&gt;&gt;三级引用</span><br></pre></td></tr></table></figure>

<blockquote>
<p>一级引用</p>
<blockquote>
<p>二级引用</p>
</blockquote>
<blockquote>
<blockquote>
<p>三级引用</p>
</blockquote>
</blockquote>
</blockquote>
<h2 id="5、分割线"><a href="#5、分割线" class="headerlink" title="5、分割线"></a>5、分割线</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//分割线语法：</span></span><br><span class="line"><span class="comment">//全屏分割线：</span></span><br><span class="line">---</span><br><span class="line"><span class="comment">//分割线</span></span><br><span class="line">***</span><br></pre></td></tr></table></figure>

<p>//全屏分割线：</p>
<hr>
<p>//分割线</p>
<hr>
<h2 id="6、图片插入"><a href="#6、图片插入" class="headerlink" title="6、图片插入"></a>6、图片插入</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//在线图片/本地图片</span></span><br><span class="line">![甘雨](https:<span class="comment">//i.loli.net/2021/07/16/URVdtBlu7KyI3fW.jpg) </span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><img src="https://i.loli.net/2021/07/16/URVdtBlu7KyI3fW.jpg" alt="甘雨"></p>
<h2 id="7、超链接"><a href="#7、超链接" class="headerlink" title="7、超链接"></a>7、超链接</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//超链接语法</span></span><br><span class="line">[我的个人博客](https:<span class="comment">//dengxiayouhun.github.io/)</span></span><br></pre></td></tr></table></figure>

<p><a href="https://dengxiayouhun.github.io/">我的个人博客</a></p>
<h2 id="8、列表"><a href="#8、列表" class="headerlink" title="8、列表"></a>8、列表</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//列表语法</span></span><br><span class="line"><span class="comment">//无序列表</span></span><br><span class="line">- 目录<span class="number">1</span></span><br><span class="line">- 目录<span class="number">2</span></span><br><span class="line">- 目录<span class="number">3</span></span><br><span class="line"><span class="comment">//有序列表</span></span><br><span class="line"> 数字. 名称</span><br><span class="line"> <span class="number">1.</span> 首页</span><br><span class="line"> <span class="number">2.</span> 标签</span><br><span class="line"> <span class="number">3.</span> 分类</span><br></pre></td></tr></table></figure>

<p>//无序列表</p>
<ul>
<li>目录1</li>
<li>目录2</li>
<li>目录3</li>
</ul>
<p>//有序列表</p>
<ol>
<li>首页</li>
<li>标签</li>
<li>分类</li>
</ol>
<h2 id="9、表格"><a href="#9、表格" class="headerlink" title="9、表格"></a>9、表格</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">/s/建议用快捷键：Ctrl+T</span><br><span class="line"><span class="comment">//表格语法</span></span><br><span class="line">|数据结构与算法| 计算机组成原理|计算机网络|</span><br><span class="line">|-|-|-|</span><br><span class="line">| 操作系统|编译原理|汇编语言| </span><br><span class="line">|Java SE|Java Web||</span><br></pre></td></tr></table></figure>



<table>
<thead>
<tr>
<th>数据结构与算法</th>
<th>计算机组成原理</th>
<th>计算机网络</th>
</tr>
</thead>
<tbody><tr>
<td>操作系统</td>
<td>编译原理</td>
<td>汇编语言</td>
</tr>
<tr>
<td>Java SE</td>
<td>Java Web</td>
<td></td>
</tr>
</tbody></table>
]]></content>
      <categories>
        <category>工具</category>
      </categories>
      <tags>
        <tag>markdown</tag>
      </tags>
  </entry>
  <entry>
    <title>驾考科目三</title>
    <url>/2021/07/14/%E9%A9%BE%E8%80%83%E7%A7%91%E7%9B%AE%E4%B8%89/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><h2 id="上车准备"><a href="#上车准备" class="headerlink" title="上车准备"></a>上车准备</h2><h2 id="灯光使用"><a href="#灯光使用" class="headerlink" title="灯光使用"></a>灯光使用</h2><ul>
<li>打开前照灯</li>
<li>同向近距离跟车 近光灯</li>
<li>与机动车会车  近光灯</li>
<li>照明良好 近光灯</li>
<li>没有路灯 照明不良 远光灯</li>
<li>超车 远近交替</li>
<li>通过没有交通信号灯的路口 远近交替</li>
<li>通过坡路拱桥 远近交替</li>
<li>急弯坡路 远近交替</li>
<li>路边临时停车 示宽灯+应急灯</li>
</ul>
<h2 id="起步"><a href="#起步" class="headerlink" title="起步"></a>起步</h2><ul>
<li>空挡打火</li>
<li>开左转向灯 鸣喇叭</li>
<li>踩离合刹车</li>
<li>挂一档</li>
<li>拉手刹 </li>
<li>观察</li>
<li>起步</li>
</ul>
<h2 id="变更车道"><a href="#变更车道" class="headerlink" title="变更车道"></a>变更车道</h2><ul>
<li>打转向灯</li>
<li>等3s 观察</li>
<li>变道</li>
</ul>
<h2 id="直线行驶"><a href="#直线行驶" class="headerlink" title="直线行驶"></a>直线行驶</h2><ul>
<li>看前方</li>
<li>2挡加一点油门</li>
</ul>
<h2 id="通过公交车站-学校区域-路口直行-人行横线"><a href="#通过公交车站-学校区域-路口直行-人行横线" class="headerlink" title="通过公交车站 学校区域 路口直行 人行横线"></a>通过公交车站 学校区域 路口直行 人行横线</h2><ul>
<li>踩刹车</li>
<li>直行（可踩油门）</li>
</ul>
<h2 id="会车"><a href="#会车" class="headerlink" title="会车"></a>会车</h2><ul>
<li>就当没有</li>
</ul>
<h2 id="超车"><a href="#超车" class="headerlink" title="超车"></a>超车</h2><ul>
<li>左变道</li>
<li>右变道</li>
<li>左变道</li>
</ul>
<h2 id="掉头"><a href="#掉头" class="headerlink" title="掉头"></a>掉头</h2><ul>
<li>打左转向灯</li>
<li>减档</li>
<li>向左打满方向盘</li>
</ul>
<h2 id="加减档"><a href="#加减档" class="headerlink" title="加减档"></a>加减档</h2><ul>
<li>加到20~25 踩离合 挂3挡</li>
<li>加到30~35 踩离合 挂4挡</li>
<li>踩刹车 降到30 挂3挡</li>
<li>播报结束 挂2挡</li>
</ul>
<h2 id="路口转弯"><a href="#路口转弯" class="headerlink" title="路口转弯"></a>路口转弯</h2><ul>
<li>打转向灯 刹车</li>
<li>转弯</li>
</ul>
<h2 id="靠边停车"><a href="#靠边停车" class="headerlink" title="靠边停车"></a>靠边停车</h2><ul>
<li>打转向灯</li>
<li>看雨刷，找位置</li>
<li>踩离合 刹车 停车</li>
</ul>
]]></content>
      <categories>
        <category>生活</category>
      </categories>
      <tags>
        <tag>驾考</tag>
      </tags>
  </entry>
  <entry>
    <title>前言-关于搭建博客</title>
    <url>/2021/07/13/%E5%89%8D%E8%A8%80-%E5%85%B3%E4%BA%8E%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><h1 id="前言："><a href="#前言：" class="headerlink" title="前言："></a>前言：</h1><h3 id="零基础能搭建个人博客吗-？"><a href="#零基础能搭建个人博客吗-？" class="headerlink" title="零基础能搭建个人博客吗 ？"></a>零基础能搭建个人博客吗 ？</h3><p>当然可以 ！</p>
<p>博主搭建这个博客时就是零基础。刚开始搭建做这个的时候，博主也只会一些浅显的C语言和C++的语法，其他的像计算机网络，框架，数据结构与算法之类的和搭建网站相关知识一概不知。但最后我依旧断断续续的搭建出了这么一个不错的静态博客，用时一个星期左右 。</p>
<h3 id="零基础搭建博客难吗-？"><a href="#零基础搭建博客难吗-？" class="headerlink" title="零基础搭建博客难吗 ？"></a>零基础搭建博客难吗 ？</h3><p>说实话，零基础搭建博客是比较难的。</p>
<p>它的难点主要在于“从0到1”这个过程，因为在这个过程中，我们基本处于盲人摸象的状态，任何一个bug都可能劝退我们。而大部分人也是在在这个过程中放弃的。</p>
<p>但是，“从1到10”甚至“从1到100”这个过程却是越来越容易。因为当我们达到“1”这个水平后，我们对搭建博客就有了一个大概的了解，遇到的问题都能够做到对症下药，越来越熟练，也越来越容易。并且，搭建静态博客所用到的框架，插件，代码包，主题等都不需要我们去学，我们在只需要学会怎么拿来用即可。所以，每当我们遇到问题时，只要我们去查资料、问大佬，持之以恒，坚持不懈、最后一定会成功的。</p>
<h3 id="大学生需要写博客吗"><a href="#大学生需要写博客吗" class="headerlink" title="大学生需要写博客吗"></a>大学生需要写博客吗</h3><p>博主对其他专业并不了解，也不敢多加妄言。但对于未来准备从事程序员工作的同学们，我可以负责任的告诉大家：“写自己的个人博客几乎是必需的，写不写无非是早晚的问题。” </p>
<p>写博客的理由具体如下：</p>
<ul>
<li><p>能够加深对于知识和技术的理解</p>
<p>像程序员这种行业，完全就是靠技术吃饭。所以，如果我们不能在学生时期把基础知识打的足够牢固，未来我们就会付出更大的代价去弥补基础上上的不足。</p>
<p>相信大家都体验过“一听就会，一写就废”。出现这种情况有很大一部分原因是因为很多知识我们只是看懂了，但却没有深刻理解其核心原理。深入理解每一个知识的核心原理是我们平时必须要做的事，而输出知识就成为了一种加深理解知识核心原理的重要手段，写博客的重要目的之一就是为了输出知识。</p>
<p>ps：当我们学习变量的时候，我们很轻易地就能学会，然后就跳过去学习其他知识了，然而我们大多数却并不知道变量这个知识点的根本原理。放在平时学习，我们不会去深究这些，但当我们写学习笔记的时候我们就会不由自主地去深究其原理（正常人应该不会花费时间写一些没有意义的东西吧）。比如：”int a”就是在储存空间中划出一个int类型大小的空间，并将其命名为a，之后无论是赋值，运算都是围绕着“a”这个空间进行的。这就是写学习博客的作用，他会引导我们潜移默化地加深对知识的理解。</p>
</li>
<li><p>增强逻辑总结能力</p>
<p>优秀的程序员都是技术宅，但这并不意味着优秀程序员情商低。优秀的程序员可以不八面玲珑，但必须逻辑缜密、头脑清晰、善于总结。因为程序员的工作并不只有写代码，与同事交流沟通也是其工作中极其重要的一环。据我所知，程序员的工作中至少有1/3的时间是在开会，因为一个大的项目往往是由很多个程序员共同完成的，所以在实际项目之中，沟通交流能力是十分重要的。如果我们在沟通过程中不能将自己想要说的说出来，那么一定会在未来的工作中栽大跟头。</p>
<p>写博客就是一个不断总结、不断提高自身逻辑思维能力的事。如果我们能坚持写博客2年以上，沟通与交流将不会成为我们未来职业道路上的拦路虎。</p>
</li>
<li><p>写进简历、找工作的加分项</p>
<p>首先，在简历中写上自己的个人博客的链接本身就是一件十分有逼格的事。</p>
<p>其次，搭建个人博客实际上就是一个实战项目（指那种每一行代码都是有自己敲出来的博客），我们的博客就是我们掌握知识的最好证明，每当我们学习新的知识我们就可以优化我们的博客。当HR看到我们的个人博客时，就能很直观地知道我们拥有那些技能知识，获得好感度，这是个很大的加分项。</p>
<p>我们写在博客里的内容HR或许并不会看，但HR进入我们的博客就会看到比如：Java核心技术 卷一学习笔记 100篇博客 、实战项目一 30篇博客、踩坑记录 200篇博客等东西。当HR看到这些东西，哪怕他不点进去看具体的文章内容，他也会大致了解我们基础知识掌握的如何，对知识技术的态度到什么程度。在这种情况下下，如果我们有一个十分优秀的个人博客，只要我们其他面试环节不太拉跨，通过面试的几率就会高上不少</p>
</li>
</ul>
<h3 id="怎么搭建博客？"><a href="#怎么搭建博客？" class="headerlink" title="怎么搭建博客？"></a>怎么搭建博客？</h3><p>这个我就不能乱说了，因为我本身也是通过参考各种资料、视频才把个人博客搭建起来的。让我搭建一个博客没啥问题，但让我教别人 . . . . . .  说实话，我自认还没达到那个水平。如果有想自己搭建博客的小伙伴，可以在右下角的小弹窗（一个短信的图标）上私信我，我会把我搭建博客时用到过的资料、视频发给你。</p>
<p>如果搭建博客的过程中遇到什么问题也可以来问我，如果我能知道，一定会解答。</p>
]]></content>
      <categories>
        <category>前言</category>
      </categories>
      <tags>
        <tag>搭建博客</tag>
      </tags>
  </entry>
</search>
